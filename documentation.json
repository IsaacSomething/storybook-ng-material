{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f7246eb4923d27635152e4f6e375c8b00c3b0318fd02d75cfd3204bdfd8cb6f38e461f04c16e9c103c95ca83ef5aeaa9a23a759c480f8bd1e5f1dbbb381e4eb1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AutocompleteModule",
            "id": "component-AutocompleteModule-66341ae741fcc0595a9f290dc3e702c503d18bd6d8ccd11a7f3a77dd70ed6a5b1d65c43c5b196e4cb81b4671191a2d5a0508b23eafb8900afe39c119d9a785ba",
            "file": "src/stories/components/autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-autocomplete",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n<form class=\"mx-4\">\n  <mat-form-field>\n    <mat-label>Number</mat-label>\n    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "myControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "options",
                    "defaultValue": "['Option one', 'Option two', 'Option three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "_filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { Observable, map, startWith } from 'rxjs';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-autocomplete',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\n  template: `\n    <sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n    <form class=\"mx-4\">\n      <mat-form-field>\n        <mat-label>Number</mat-label>\n        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\n        <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n            {{ option }}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n  `,\n  styles: []\n})\nexport class AutocompleteModule {\n  myControl = new FormControl('');\n  options: string[] = ['Option one', 'Option two', 'Option three'];\n  filteredOptions!: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value || ''))\n    );\n  }\n\n  _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BadgeModule",
            "id": "component-BadgeModule-ebf1bd02aa23025b3375c0d6b0ade0bc0e2a3790a3476553409c56d3a50f8d87e4ec5c52a7054abdc61c20dd1d638e86a3502e819105185970ab5f7bfe3b22d2",
            "file": "src/stories/components/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [],
            "styles": [
                "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    "
            ],
            "template": "<sb-header title=\"Badge\" matLink=\"badge\" />\n<div class=\"container\">\n  <button\n    mat-raised-button\n    [matBadgeHidden]=\"hidden\"\n    [matBadgeOverlap]=\"overlap\"\n    [matBadge]=\"label\"\n    [matBadgePosition]=\"position\"\n    [matBadgeColor]=\"color\"\n    [matBadgeSize]=\"size\"\n    [matBadgeDisabled]=\"disabled\"\n  >\n    [Button]\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "overlap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "\"above after\" | \"above before\" | \"below before\" | \"below after\" | \"before\" | \"after\" | \"above\" | \"below\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatBadgeModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-badge',\n  standalone: true,\n  imports: [CommonModule, MatBadgeModule, MatButtonModule, SBHeaderModule],\n  styles: [\n    `\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    `\n  ],\n  template: `\n    <sb-header title=\"Badge\" matLink=\"badge\" />\n    <div class=\"container\">\n      <button\n        mat-raised-button\n        [matBadgeHidden]=\"hidden\"\n        [matBadgeOverlap]=\"overlap\"\n        [matBadge]=\"label\"\n        [matBadgePosition]=\"position\"\n        [matBadgeColor]=\"color\"\n        [matBadgeSize]=\"size\"\n        [matBadgeDisabled]=\"disabled\"\n      >\n        [Button]\n      </button>\n    </div>\n  `\n})\nexport class BadgeModule {\n  @Input() color!: 'primary' | 'accent' | 'warn';\n  @Input() disabled!: boolean;\n  @Input() overlap!: boolean;\n  @Input() label!: string;\n  @Input() hidden!: boolean;\n  @Input() position!: 'above after' | 'above before' | 'below before' | 'below after' | 'before' | 'after' | 'above' | 'below';\n  @Input() size!: 'small' | 'medium' | 'large';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    \n"
        },
        {
            "name": "BottomSheetModule",
            "id": "component-BottomSheetModule-ebad1d6b58c8523e7525c1c1a1508eed5f09c603c6ef7d0db3fa03c3227ea1c2e8cb7ddcb636645ceb5c35f4a875b5a1f42993a00c30745f827901c169c3d6ea",
            "file": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bottom-sheet",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Bottom sheet\" matLink=\"bottom-sheet\" />\n<button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openBottomSheet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatBottomSheetModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetModule, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\n\n@Component({\n  selector: 'app-bottom-sheet',\n  standalone: true,\n  imports: [MatBottomSheetModule, MatButtonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Bottom sheet\" matLink=\"bottom-sheet\" />\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n  `\n})\nexport class BottomSheetModule {\n  @Input() hasBackdrop!: boolean;\n\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  openBottomSheet() {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet, { hasBackdrop: this.hasBackdrop });\n  }\n}\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  template: `<h1>Bottom sheet</h1>`\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent) {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BottomSheetOverviewExampleSheet",
            "id": "component-BottomSheetOverviewExampleSheet-ebad1d6b58c8523e7525c1c1a1508eed5f09c603c6ef7d0db3fa03c3227ea1c2e8cb7ddcb636645ceb5c35f4a875b5a1f42993a00c30745f827901c169c3d6ea",
            "file": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bottom-sheet-overview-example-sheet",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Bottom sheet</h1>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openLink",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetModule, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\n\n@Component({\n  selector: 'app-bottom-sheet',\n  standalone: true,\n  imports: [MatBottomSheetModule, MatButtonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Bottom sheet\" matLink=\"bottom-sheet\" />\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n  `\n})\nexport class BottomSheetModule {\n  @Input() hasBackdrop!: boolean;\n\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  openBottomSheet() {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet, { hasBackdrop: this.hasBackdrop });\n  }\n}\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  template: `<h1>Bottom sheet</h1>`\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent) {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheetRef",
                        "type": "MatBottomSheetRef<BottomSheetOverviewExampleSheet>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "bottomSheetRef",
                        "type": "MatBottomSheetRef<BottomSheetOverviewExampleSheet>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ButtonModule",
            "id": "component-ButtonModule-fe3bc72caa2f02edd86cb9e14ef2c974fc2b350f1c66dd67f44eafd66b505f8fd24284a1e72bcb2785275f82bcf6aca356e84aa883a650c16b58fd9cdd9e951b",
            "file": "src/stories/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [
                "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    "
            ],
            "template": "<sb-header title=\"Button\" matLink=\"button\" />\n<div [ngSwitch]=\"type\" class=\"mx-4\">\n  <button *ngSwitchDefault mat-button [color]=\"color\" [disabled]=\"disabled\">{{ label }}</button>\n  <button *ngSwitchCase=\"'raised'\" mat-raised-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n  <button *ngSwitchCase=\"'flat'\" mat-flat-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n  <button *ngSwitchCase=\"'stroked'\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"default\" | \"flat\" | \"stroked\" | \"raised\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ThemePalette } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, SBHeaderModule],\n  styles: [\n    `\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    `\n  ],\n  template: `\n    <sb-header title=\"Button\" matLink=\"button\" />\n    <div [ngSwitch]=\"type\" class=\"mx-4\">\n      <button *ngSwitchDefault mat-button [color]=\"color\" [disabled]=\"disabled\">{{ label }}</button>\n      <button *ngSwitchCase=\"'raised'\" mat-raised-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n      <button *ngSwitchCase=\"'flat'\" mat-flat-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n      <button *ngSwitchCase=\"'stroked'\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n    </div>\n  `\n})\nexport class ButtonModule {\n  @Input() label!: string;\n  @Input() color!: ThemePalette | 'default';\n  @Input() type!: 'default' | 'flat' | 'stroked' | 'raised';\n  @Input() disabled!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    \n"
        },
        {
            "name": "CardModule",
            "id": "component-CardModule-3a9303f49ea5c919c75647085bdbfed4440b31ff01bcd44ab7bd16d2cfe1dfb9d387a4e43e4b81de08912b41916d0fce6ed1af05250b71b9acbe277036def75a",
            "file": "src/stories/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n<mat-card class=\"mx-4\" style=\"width:400px\" [appearance]=\"appearance\">\n  <mat-card-header *ngIf=\"title || subtitle\">\n    <mat-card-title-group>\n      <img *ngIf=\"avatar\" mat-card-avatar src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n      <mat-card-title *ngIf=\"title\">title</mat-card-title>\n      <mat-card-subtitle *ngIf=\"subtitle\">subtitle</mat-card-subtitle>\n\n      <ng-container *ngIf=\"media\" [ngSwitch]=\"mediaSize\">\n        <img *ngSwitchCase=\"'xl'\" mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'lg'\" mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'md'\" mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'sm'\" mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n      </ng-container>\n    </mat-card-title-group>\n  </mat-card-header>\n\n  <img *ngIf=\"image\" mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n\n  <!-- Empty content for bottom spacing if display is just title || subtitle -->\n  <mat-card-content></mat-card-content>\n\n  <mat-card-content *ngIf=\"content\">\n    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quos nostrum veritatis assumenda corrupti sequi ut molestiae\n    nesciunt, quo, eius accusamus dolor illo esse quaerat culpa vel accusantium dolore aspernatur?\n  </mat-card-content>\n\n  <mat-card-actions *ngIf=\"actions\" [align]=\"align\">\n    <button mat-button>[Lorem Ipsum]</button>\n    <button mat-button>[Lorem Ipsum]</button>\n  </mat-card-actions>\n\n  <mat-card-footer *ngIf=\"footer\">\n    <mat-progress-bar mode=\"indeterminate\" />\n  </mat-card-footer>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "\"outlined\" | \"raised\"",
                    "decorators": []
                },
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "media",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mediaSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "\"xl\" | \"lg\" | \"md\" | \"sm\"",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatCardModule, MatButtonModule, MatProgressBarModule],\n  template: `\n    <sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n    <mat-card class=\"mx-4\" style=\"width:400px\" [appearance]=\"appearance\">\n      <mat-card-header *ngIf=\"title || subtitle\">\n        <mat-card-title-group>\n          <img *ngIf=\"avatar\" mat-card-avatar src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n          <mat-card-title *ngIf=\"title\">title</mat-card-title>\n          <mat-card-subtitle *ngIf=\"subtitle\">subtitle</mat-card-subtitle>\n\n          <ng-container *ngIf=\"media\" [ngSwitch]=\"mediaSize\">\n            <img *ngSwitchCase=\"'xl'\" mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'lg'\" mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'md'\" mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'sm'\" mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n          </ng-container>\n        </mat-card-title-group>\n      </mat-card-header>\n\n      <img *ngIf=\"image\" mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n\n      <!-- Empty content for bottom spacing if display is just title || subtitle -->\n      <mat-card-content></mat-card-content>\n\n      <mat-card-content *ngIf=\"content\">\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quos nostrum veritatis assumenda corrupti sequi ut molestiae\n        nesciunt, quo, eius accusamus dolor illo esse quaerat culpa vel accusantium dolore aspernatur?\n      </mat-card-content>\n\n      <mat-card-actions *ngIf=\"actions\" [align]=\"align\">\n        <button mat-button>[Lorem Ipsum]</button>\n        <button mat-button>[Lorem Ipsum]</button>\n      </mat-card-actions>\n\n      <mat-card-footer *ngIf=\"footer\">\n        <mat-progress-bar mode=\"indeterminate\" />\n      </mat-card-footer>\n    </mat-card>\n  `,\n  styles: []\n})\nexport class CardModule {\n  @Input() appearance!: 'outlined' | 'raised';\n  @Input() title!: boolean;\n  @Input() subtitle!: boolean;\n  @Input() content!: boolean;\n  @Input() actions!: boolean;\n  @Input() avatar!: boolean;\n  @Input() media!: boolean;\n  @Input() mediaSize!: 'xl' | 'lg' | 'md' | 'sm';\n  @Input() image!: boolean;\n  @Input() footer!: boolean;\n  @Input() align!: 'start' | 'end';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChipsModule",
            "id": "component-ChipsModule-c27adbed9d9533b86069373a8c52403bde09f5043180e790608b177ff78a4e0ef0f62adaf4e97a2446a1760043885f19d4e8ed4db13e4ed1683c77954c5007ea",
            "file": "src/stories/components/chips/chips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chips",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Chips\" matLink=\"chips\" />\n\n<mat-chip-listbox class=\"mx-4\" [hideSingleSelectionIndicator]=\"hideSingle\" [multiple]=\"multiple\" [selectable]=\"selectable\">\n  <mat-chip-option>Default</mat-chip-option>\n  <mat-chip-option>\n    <img matChipAvatar src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\" alt=\"Photo of a Shiba Inu\" /> With Avatar\n  </mat-chip-option>\n  <mat-chip-option> <mat-icon matChipTrailingIcon>bolt</mat-icon>With trailing icon </mat-chip-option>\n  <mat-chip-option>Highlighted</mat-chip-option>\n  <mat-chip-option [color]=\"color\" selected>Selected</mat-chip-option>\n  <mat-chip-option [highlighted]=\"highlighted\">Highlighted</mat-chip-option>\n</mat-chip-listbox>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "hideSingle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "highlighted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-chips',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatChipsModule, MatButtonModule, MatIconModule],\n  template: `\n    <sb-header title=\"Chips\" matLink=\"chips\" />\n\n    <mat-chip-listbox class=\"mx-4\" [hideSingleSelectionIndicator]=\"hideSingle\" [multiple]=\"multiple\" [selectable]=\"selectable\">\n      <mat-chip-option>Default</mat-chip-option>\n      <mat-chip-option>\n        <img matChipAvatar src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\" alt=\"Photo of a Shiba Inu\" /> With Avatar\n      </mat-chip-option>\n      <mat-chip-option> <mat-icon matChipTrailingIcon>bolt</mat-icon>With trailing icon </mat-chip-option>\n      <mat-chip-option>Highlighted</mat-chip-option>\n      <mat-chip-option [color]=\"color\" selected>Selected</mat-chip-option>\n      <mat-chip-option [highlighted]=\"highlighted\">Highlighted</mat-chip-option>\n    </mat-chip-listbox>\n  `,\n  styles: []\n})\nexport class ChipsModule {\n  @Input() color!: ThemePalette | 'default';\n  @Input() hideSingle!: boolean;\n  @Input() multiple!: boolean;\n  @Input() selectable!: boolean;\n  @Input() highlighted!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ColorsModule",
            "id": "component-ColorsModule-2df2e21e154822fc14ac4b86f2d2fa90707aacd329a78ed52f1983d2fe116a5bdb78f25baa6313bc84088210d6c327fd0896e6e2cc4fa974a7de47c6fe2843b9",
            "file": "src/stories/theme/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "./colors.component.scss"
            ],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n<div class=\"mx-4\">\n  <div\n    class=\"block\"\n    matRipple\n    cdkCopyToClipboard=\"var(--mat-{{ color }}-{{ hue }})\"\n    *ngFor=\"let hue of ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'A100', 'A200', 'A400', 'A700']\"\n    style=\"background-color:var(--mat-{{ color }}-{{ hue }})\"\n  >\n    <h1 style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\">{{ hue }}</h1>\n    <span style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\"> var(--mat-{{ color }}-{{ hue }}) </span>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ThemePalette",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "ClipboardModule",
                    "type": "module"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatRippleModule, ThemePalette } from '@angular/material/core';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-colors',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, ClipboardModule, MatRippleModule],\n  styleUrls: ['./colors.component.scss'],\n  template: `\n    <sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n    <div class=\"mx-4\">\n      <div\n        class=\"block\"\n        matRipple\n        cdkCopyToClipboard=\"var(--mat-{{ color }}-{{ hue }})\"\n        *ngFor=\"let hue of ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'A100', 'A200', 'A400', 'A700']\"\n        style=\"background-color:var(--mat-{{ color }}-{{ hue }})\"\n      >\n        <h1 style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\">{{ hue }}</h1>\n        <span style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\"> var(--mat-{{ color }}-{{ hue }}) </span>\n      </div>\n    </div>\n  `,\n  styles: []\n})\nexport class ColorsModule {\n  @Input() color!: ThemePalette ;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".block {\r\n  height: 80px;\r\n  width: 160px;\r\n  border-radius: 4px;\r\n  display: inline-block;\r\n  margin-right: 16px;\r\n  margin-bottom: 16px;\r\n  padding: 8px;\r\n  position: relative;\r\n  &:hover {\r\n    cursor: copy;\r\n  }\r\n\r\n  h1 {\r\n    font-weight: bold;\r\n    font-weight: 50px;\r\n  }\r\n  span {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: rgb(0 0 0 / 5%);\r\n    padding: 6px 10px;\r\n    width: 88%;\r\n    font-weight: normal;\r\n    font-size: 11px;\r\n    width: 100%;\r\n  }\r\n}\r\n\r\nh4 {\r\n  font-weight: bold !important;\r\n}\r\n\r\nsmall {\r\n  font-weight: 400;\r\n  letter-spacing: 1px;\r\n  font-size: 10px;\r\n}\r\n",
                    "styleUrl": "./colors.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "DividerModule",
            "id": "component-DividerModule-94206806c3c68a99d95f8b59d5246de48ad50fb13ca322c164b904df3057070a396e2a3b7d1f3a474d60a89423cee204a94001378971709addfd6568471021b2",
            "file": "src/stories/components/divider/divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-divider",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Divider\" matLink=\"divider\" />\n\n<mat-list>\n  <mat-list-item>[Item 1]</mat-list-item>\n  <mat-divider [vertical]=\"true\" [inset]=\"inset\"></mat-divider>\n  <mat-list-item>[Item 2]</mat-list-item>\n  <mat-divider [vertical]=\"true\" [inset]=\"inset\"></mat-divider>\n  <mat-list-item>[Item 3]</mat-list-item>\n</mat-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-divider',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatDividerModule, MatListModule],\n  template: `\n    <sb-header title=\"Divider\" matLink=\"divider\" />\n\n    <mat-list>\n      <mat-list-item>[Item 1]</mat-list-item>\n      <mat-divider [vertical]=\"true\" [inset]=\"inset\"></mat-divider>\n      <mat-list-item>[Item 2]</mat-list-item>\n      <mat-divider [vertical]=\"true\" [inset]=\"inset\"></mat-divider>\n      <mat-list-item>[Item 3]</mat-list-item>\n    </mat-list>\n  `,\n  styles: []\n})\nexport class DividerModule {\n  @Input() inset!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ExpansionModule",
            "id": "component-ExpansionModule-42c8ddaa57b4880031e721b075176c4522e4754deba92401139576f157ed2399217c99f82104878c3f990dea855051f7c83ac4e401fbbaa4edd385912ac6d190",
            "file": "src/stories/components/expansion/expansion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expansion",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Expansion Panel\" matLink=\"expansion\" />\n   <mat-accordion [multi]=\"multi\" [displayMode]=\"displayMode\">\n     <mat-expansion-panel #panel1 (opened)=\"opened(panel1)\" (closed)=\"closed(panel1)\">\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n     </mat-expansion-panel>\n\n     <mat-expansion-panel\n       #panel2\n       [hideToggle]=\"!toggle\"\n       [disabled]=\"disabled\"\n       [togglePosition]=\"togglePosition\"\n       [expanded]=\"expanded\"\n       (opened)=\"opened(panel2)\"\n       (closed)=\"closed(panel2)\"\n     >\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n         <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n       <mat-action-row>\n         <button mat-flat-button color=\"primary\" (click)=\"panel3.open()\">Next [Action row]</button>\n       </mat-action-row>\n     </mat-expansion-panel>\n\n     <mat-expansion-panel\n       #panel3\n       [hideToggle]=\"!toggle\"\n       [disabled]=\"disabled\"\n       [togglePosition]=\"togglePosition\"\n       [expanded]=\"expanded\"\n       (opened)=\"opened(panel3)\"\n       (closed)=\"closed(panel3)\"\n     >\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n         <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n     </mat-expansion-panel>\n   </mat-accordion>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "displayMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "\"default\" | \"flat\"",
                    "decorators": []
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "toggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "togglePosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closed",
                    "args": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "opened",
                    "args": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatExpansionModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-expansion',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatExpansionModule, MatButtonModule],\n  template: ` <sb-header title=\"Expansion Panel\" matLink=\"expansion\" />\n\n    <mat-accordion [multi]=\"multi\" [displayMode]=\"displayMode\">\n      <mat-expansion-panel #panel1 (opened)=\"opened(panel1)\" (closed)=\"closed(panel1)\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel\n        #panel2\n        [hideToggle]=\"!toggle\"\n        [disabled]=\"disabled\"\n        [togglePosition]=\"togglePosition\"\n        [expanded]=\"expanded\"\n        (opened)=\"opened(panel2)\"\n        (closed)=\"closed(panel2)\"\n      >\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n          <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n        <mat-action-row>\n          <button mat-flat-button color=\"primary\" (click)=\"panel3.open()\">Next [Action row]</button>\n        </mat-action-row>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel\n        #panel3\n        [hideToggle]=\"!toggle\"\n        [disabled]=\"disabled\"\n        [togglePosition]=\"togglePosition\"\n        [expanded]=\"expanded\"\n        (opened)=\"opened(panel3)\"\n        (closed)=\"closed(panel3)\"\n      >\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n          <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n      </mat-expansion-panel>\n    </mat-accordion>`,\n  styles: []\n})\nexport class ExpansionModule {\n  @Input() toggle!: boolean;\n  @Input() description!: boolean;\n  @Input() disabled!: boolean;\n  @Input() multi!: boolean;\n  @Input() expanded!: boolean;\n  @Input() displayMode!: 'default' | 'flat';\n  @Input() togglePosition!: 'before' | 'after';\n\n  opened(panel: MatExpansionPanel) {\n    console.log(panel);\n  }\n\n  closed(panel: MatExpansionPanel) {\n    console.log(panel);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MenuModule",
            "id": "component-MenuModule-4694239905b4f0c39af9c4e96a1ddc63dfb891562a2ac912ff6e894f895f1ee31de8aefabdaccce7fcc38fb29bb8b6263174dfe943965f045b67f34eab188abf",
            "file": "src/stories/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Menu\" matLink=\"menu\" />\n\n<button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n<mat-menu #menu=\"matMenu\" [yPosition]=\"yPosition\" [xPosition]=\"xPosition\">\n  <button mat-menu-item>Item 1</button>\n  <button mat-menu-item>Item 2</button>\n</mat-menu>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "xPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "yPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"above\" | \"below\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-menu',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatMenuModule, MatButtonModule],\n  template: `\n    <sb-header title=\"Menu\" matLink=\"menu\" />\n\n    <button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n    <mat-menu #menu=\"matMenu\" [yPosition]=\"yPosition\" [xPosition]=\"xPosition\">\n      <button mat-menu-item>Item 1</button>\n      <button mat-menu-item>Item 2</button>\n    </mat-menu>\n  `,\n  styles: []\n})\nexport class MenuModule {\n  @Input() yPosition!: 'above' | 'below';\n  @Input() xPosition!: 'before' | 'after';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SBHeaderModule",
            "id": "component-SBHeaderModule-751bb1d9d26d17199c24a2c2489118a80f7c2c5c383512acb8f6db7c12cce93885ef651b9ffc3100f2e51b6f37b5e610ff13656626e94fec5b8d0768d7a8eb4c",
            "file": "src/stories/assets/sb-header/sb-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-header",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        display: block;\n        width: 100%;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        padding-bottom: 16px;\n      }\n    "
            ],
            "template": "<div class=\"container\">\n  <h2>{{ title }}</h2>\n  <a *ngIf=\"matLink\" href=\"https://material.angular.io/components/{{ matLink }}/api\" target=\"_blank\">\n    Angular material documentation\n  </a>\n\n  <small *ngIf=\"clipboard\">CLICK TO COPY VALUE</small>\n  <mat-divider></mat-divider>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "clipboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "BooleanInput",
                    "decorators": []
                },
                {
                    "name": "matLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 53,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_clipboard",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n  selector: 'sb-header',\r\n  standalone: true,\r\n  imports: [CommonModule, MatDividerModule],\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n      }\r\n\r\n      h2 {\r\n        font-size: 50px !important;\r\n        font-weight: bold !important;\r\n        margin-bottom: 6px !important;\r\n        text-transform: capitalize;\r\n        padding-bottom: 30px;\r\n        padding-top: 16px;\r\n      }\r\n\r\n      small {\r\n        padding-top: 12px;\r\n        display: block;\r\n      }\r\n\r\n      mat-divider {\r\n        margin-bottom: 16px;\r\n      }\r\n\r\n      a {\r\n        padding-bottom: 16px;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <div class=\"container\">\r\n      <h2>{{ title }}</h2>\r\n      <a *ngIf=\"matLink\" href=\"https://material.angular.io/components/{{ matLink }}/api\" target=\"_blank\">\r\n        Angular material documentation\r\n      </a>\r\n\r\n      <small *ngIf=\"clipboard\">CLICK TO COPY VALUE</small>\r\n      <mat-divider></mat-divider>\r\n    </div>\r\n  `\r\n})\r\nexport class SBHeaderModule {\r\n  @Input({ required: true }) title!: string;\r\n  @Input() matLink!: string;\r\n  @Input() set clipboard(value: BooleanInput) {\r\n    this._clipboard = coerceBooleanProperty(value);\r\n  }\r\n  get clipboard() {\r\n    return this._clipboard;\r\n  }\r\n  _clipboard = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        display: block;\n        width: 100%;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        padding-bottom: 16px;\n      }\n    \n",
            "accessors": {
                "clipboard": {
                    "name": "clipboard",
                    "setSignature": {
                        "name": "clipboard",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 55,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "clipboard",
                        "type": "",
                        "returnType": "",
                        "line": 58
                    }
                }
            }
        },
        {
            "name": "TypographyModule",
            "id": "component-TypographyModule-1457b4ecd86cbd647ce6cf755b4276e449e29dd8961413bba6de1cac5c94e1baeabc7c5711c4d7f40abc28b7f8de53dcdda3ee3d203c45df0ce799779987998e",
            "file": "src/stories/theme/typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Typography\" />\n\n<div class=\"mx-4\">\n  <h1 class=\"text-{{ color }}\">[h1] abcdefghijklmnopqrstuvwxyz</h1>\n  <h2 class=\"text-{{ color }}\">[h2] abcdefghijklmnopqrstuvwxyz</h2>\n  <h3 class=\"text-{{ color }}\">[h3] abcdefghijklmnopqrstuvwxyz</h3>\n  <h4 class=\"text-{{ color }}\">[h4] abcdefghijklmnopqrstuvwxyz</h4>\n  <h5 class=\"text-{{ color }}\">[h5] abcdefghijklmnopqrstuvwxyz</h5>\n  <h6 class=\"text-{{ color }}\">[h6] abcdefghijklmnopqrstuvwxyz</h6>\n\n  <p class=\"text-{{ color }}\">\n    [p] abcdefghijklmnopqrstuvwxyz Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, aspernatur excepturi nostrum\n    pariatur quam natus dicta exercitationem vel consectetur, culpa inventore adipisci numquam eum deserunt ipsa iure ad, corporis\n    explicabo?\n  </p>\n\n  <label class=\"text-{{ color }}\">[label] abcdefghijklmnopqrstuvwxyz</label>\n  <br />\n  <small class=\"text-{{ color }}\">[small] abcdefghijklmnopqrstuvwxyz</small>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-typography',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Typography\" />\n\n    <div class=\"mx-4\">\n      <h1 class=\"text-{{ color }}\">[h1] abcdefghijklmnopqrstuvwxyz</h1>\n      <h2 class=\"text-{{ color }}\">[h2] abcdefghijklmnopqrstuvwxyz</h2>\n      <h3 class=\"text-{{ color }}\">[h3] abcdefghijklmnopqrstuvwxyz</h3>\n      <h4 class=\"text-{{ color }}\">[h4] abcdefghijklmnopqrstuvwxyz</h4>\n      <h5 class=\"text-{{ color }}\">[h5] abcdefghijklmnopqrstuvwxyz</h5>\n      <h6 class=\"text-{{ color }}\">[h6] abcdefghijklmnopqrstuvwxyz</h6>\n\n      <p class=\"text-{{ color }}\">\n        [p] abcdefghijklmnopqrstuvwxyz Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, aspernatur excepturi nostrum\n        pariatur quam natus dicta exercitationem vel consectetur, culpa inventore adipisci numquam eum deserunt ipsa iure ad, corporis\n        explicabo?\n      </p>\n\n      <label class=\"text-{{ color }}\">[label] abcdefghijklmnopqrstuvwxyz</label>\n      <br />\n      <small class=\"text-{{ color }}\">[small] abcdefghijklmnopqrstuvwxyz</small>\n    </div>\n  `\n})\nexport class TypographyModule {\n  @Input() color!: ThemePalette | 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a5ab16d5fdd77ae5761eed0d9bb59ff3cd28a70ea40be79c4aaaff027b46791619245c0742b5483a46ce34b29eba54714c32a5fc7c097e7470617ce6e2696a26",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, AppRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-19f9b93b406581c4eeba9376fbdda8417c0f9120be46945392e67eab7f7120b1cd9a3eb39a618425296417a896bb7b806ab3a2097d6e4e3ea5079ede7ba39406",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<BadgeModule>",
                "defaultValue": "{\r\n  label: '0',\r\n  color: 'primary',\r\n  size: 'medium',\r\n  position: 'above after',\r\n  disabled: false,\r\n  overlap: false,\r\n  hidden: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<AutocompleteModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<BottomSheetModule>",
                "defaultValue": "{\r\n  hasBackdrop: true\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ButtonModule>",
                "defaultValue": "{\r\n  label: '[Button]',\r\n  disabled: false,\r\n  color: 'default',\r\n  type: 'default'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<CardModule>",
                "defaultValue": "{\r\n  title: true,\r\n  subtitle: true,\r\n  content: true,\r\n  actions: true,\r\n  footer: true,\r\n  avatar: true,\r\n  image: true,\r\n  media: true,\r\n  mediaSize: 'md',\r\n  align: 'start',\r\n  appearance: 'outlined'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ChipsModule>",
                "defaultValue": "{\r\n  color: 'default',\r\n  hideSingle: false,\r\n  multiple: false,\r\n  selectable: false,\r\n  highlighted: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ExpansionModule>",
                "defaultValue": "{\r\n  toggle: true,\r\n  description: true,\r\n  disabled: false,\r\n  multi: false,\r\n  expanded: false,\r\n  displayMode: 'default',\r\n  togglePosition: 'before'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ColorsModule>",
                "defaultValue": "{\r\n  color: 'primary'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DividerModule>",
                "defaultValue": "{\r\n  inset: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<MenuModule>",
                "defaultValue": "{\r\n  yPosition: 'above',\r\n  xPosition: 'before'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TypographyModule>",
                "defaultValue": "{\r\n  color: 'default'\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<BadgeModule>",
                "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  color: {\r\n    options: ['primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  size: {\r\n    options: ['small', 'medium', 'large'],\r\n    control: { type: 'radio' },\r\n    name: 'Size'\r\n  },\r\n  position: {\r\n    options: ['above after', 'above before', 'below before', 'below after', 'before', 'after', 'above', 'below'],\r\n    control: { type: 'select' },\r\n    name: 'Position'\r\n  },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  overlap: { control: { type: 'boolean' }, name: 'Overlay' },\r\n  hidden: { control: { type: 'boolean' }, name: 'Hidden' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<AutocompleteModule>",
                "defaultValue": "{\r\n  _filter: { table: { disable: true } },\r\n  ngOnInit: { table: { disable: true } },\r\n  options: { table: { disable: true } },\r\n  myControl: { table: { disable: true } },\r\n  filteredOptions: { table: { disable: true } }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<BottomSheetModule>",
                "defaultValue": "{\r\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Backdrop' },\r\n  openBottomSheet: { table: { disable: true } }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ButtonModule>",
                "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  type: {\r\n    options: ['default', 'flat', 'stroked', 'raised'],\r\n    control: { type: 'radio' },\r\n    name: 'Button type'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<CardModule>",
                "defaultValue": "{\r\n  title: { control: { type: 'boolean' }, name: 'Has title' },\r\n  subtitle: { control: { type: 'boolean' }, name: 'Has subtitle' },\r\n  content: { control: { type: 'boolean' }, name: 'Has content' },\r\n  actions: { control: { type: 'boolean' }, name: 'Has actions' },\r\n  footer: { control: { type: 'boolean' }, name: 'Has footer' },\r\n  avatar: { control: { type: 'boolean' }, name: 'Has avatar' },\r\n  image: { control: { type: 'boolean' }, name: 'Has image' },\r\n  media: { control: { type: 'boolean' }, name: 'Has media' },\r\n  mediaSize: {\r\n    options: ['xl', 'lg', 'md', 'sm'],\r\n    control: { type: 'radio' },\r\n    name: 'Media size'\r\n  },\r\n  align: {\r\n    options: ['start', 'end'],\r\n    control: { type: 'radio' },\r\n    name: 'Align actions'\r\n  },\r\n  appearance: {\r\n    options: ['outlined', 'raised'],\r\n    control: { type: 'radio' },\r\n    name: 'Appearance'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ChipsModule>",
                "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  hideSingle: { control: { type: 'boolean' }, name: 'Hide Single Selection Indicator' },\r\n  multiple: { control: { type: 'boolean' }, name: 'Select Multiple' },\r\n  selectable: { control: { type: 'boolean' }, name: 'Selectable' },\r\n  highlighted: { control: { type: 'boolean' }, name: 'Highlighted' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ExpansionModule>",
                "defaultValue": "{\r\n  toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\r\n  description: { control: { type: 'boolean' }, name: 'Has description' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  multi: { control: { type: 'boolean' }, name: 'Open more than one panel' },\r\n  expanded: { control: { type: 'boolean' }, name: 'Expand' },\r\n  displayMode: {\r\n    options: ['default', 'flat'],\r\n    control: { type: 'radio' },\r\n    name: 'Display mode'\r\n  },\r\n  togglePosition: {\r\n    options: ['before', 'after'],\r\n    control: { type: 'radio' },\r\n    name: 'Toggle position'\r\n  },\r\n  opened: { action: 'opened' },\r\n  closed: { action: 'closed' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ColorsModule>",
                "defaultValue": "{\r\n  color: {\r\n    options: ['primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<DividerModule>",
                "defaultValue": "{\r\n  inset: { control: { type: 'boolean' }, name: 'Inset' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<MenuModule>",
                "defaultValue": "{\r\n  yPosition: {\r\n    options: ['above', 'below'],\r\n    control: { type: 'radio' },\r\n    name: 'Y position'\r\n  },\r\n  xPosition: {\r\n    options: ['before', 'after'],\r\n    control: { type: 'radio' },\r\n    name: 'Y position'\r\n  }\r\n  /* toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\r\n   */\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TypographyModule>",
                "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
            },
            {
                "name": "Autocomplete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  /* args */\r\n}"
            },
            {
                "name": "Badge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "BottomSheet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Chips",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Divider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Expansion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeModule>",
                "defaultValue": "{\r\n  title: 'Components/Badge',\r\n  component: BadgeModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AutocompleteModule>",
                "defaultValue": "{\r\n  title: 'Components/Autocomplete',\r\n  component: AutocompleteModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BottomSheetModule>",
                "defaultValue": "{\r\n  title: 'Components/Bottom Sheet',\r\n  component: BottomSheetModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonModule>",
                "defaultValue": "{\r\n  title: 'Components/Button',\r\n  component: ButtonModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardModule>",
                "defaultValue": "{\r\n  title: 'Components/Card',\r\n  component: CardModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChipsModule>",
                "defaultValue": "{\r\n  title: 'Components/Chips',\r\n  component: ChipsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ExpansionModule>",
                "defaultValue": "{\r\n  title: 'Components/Expansion',\r\n  component: ExpansionModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorsModule>",
                "defaultValue": "{\r\n  title: 'Theme/Colors',\r\n  component: ColorsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DividerModule>",
                "defaultValue": "{\r\n  title: 'Components/Divider',\r\n  component: DividerModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuModule>",
                "defaultValue": "{\r\n  title: 'Components/Expansion',\r\n  component: MenuModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TypographyModule>",
                "defaultValue": "{\r\n  title: 'Theme/Typography',\r\n  component: TypographyModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    }\n  }\n}"
            },
            {
                "name": "Typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeModule>",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AutocompleteModule>",
                "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BottomSheetModule>",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonModule>",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardModule>",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChipsModule>",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ExpansionModule>",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorsModule>",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DividerModule>",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuModule>",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TypographyModule>",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/components/badge/badge.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<BadgeModule>",
                    "defaultValue": "{\r\n  label: '0',\r\n  color: 'primary',\r\n  size: 'medium',\r\n  position: 'above after',\r\n  disabled: false,\r\n  overlap: false,\r\n  hidden: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<BadgeModule>",
                    "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  color: {\r\n    options: ['primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  size: {\r\n    options: ['small', 'medium', 'large'],\r\n    control: { type: 'radio' },\r\n    name: 'Size'\r\n  },\r\n  position: {\r\n    options: ['above after', 'above before', 'below before', 'below after', 'before', 'after', 'above', 'below'],\r\n    control: { type: 'select' },\r\n    name: 'Position'\r\n  },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  overlap: { control: { type: 'boolean' }, name: 'Overlay' },\r\n  hidden: { control: { type: 'boolean' }, name: 'Hidden' }\r\n}"
                },
                {
                    "name": "Badge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeModule>",
                    "defaultValue": "{\r\n  title: 'Components/Badge',\r\n  component: BadgeModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/autocomplete/autocomplete.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<AutocompleteModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<AutocompleteModule>",
                    "defaultValue": "{\r\n  _filter: { table: { disable: true } },\r\n  ngOnInit: { table: { disable: true } },\r\n  options: { table: { disable: true } },\r\n  myControl: { table: { disable: true } },\r\n  filteredOptions: { table: { disable: true } }\r\n}"
                },
                {
                    "name": "Autocomplete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  /* args */\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AutocompleteModule>",
                    "defaultValue": "{\r\n  title: 'Components/Autocomplete',\r\n  component: AutocompleteModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/bottom-sheet/bottom-sheet.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<BottomSheetModule>",
                    "defaultValue": "{\r\n  hasBackdrop: true\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<BottomSheetModule>",
                    "defaultValue": "{\r\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Backdrop' },\r\n  openBottomSheet: { table: { disable: true } }\r\n}"
                },
                {
                    "name": "BottomSheet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BottomSheetModule>",
                    "defaultValue": "{\r\n  title: 'Components/Bottom Sheet',\r\n  component: BottomSheetModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/button/button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ButtonModule>",
                    "defaultValue": "{\r\n  label: '[Button]',\r\n  disabled: false,\r\n  color: 'default',\r\n  type: 'default'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ButtonModule>",
                    "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  type: {\r\n    options: ['default', 'flat', 'stroked', 'raised'],\r\n    control: { type: 'radio' },\r\n    name: 'Button type'\r\n  }\r\n}"
                },
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonModule>",
                    "defaultValue": "{\r\n  title: 'Components/Button',\r\n  component: ButtonModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/card/card.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CardModule>",
                    "defaultValue": "{\r\n  title: true,\r\n  subtitle: true,\r\n  content: true,\r\n  actions: true,\r\n  footer: true,\r\n  avatar: true,\r\n  image: true,\r\n  media: true,\r\n  mediaSize: 'md',\r\n  align: 'start',\r\n  appearance: 'outlined'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<CardModule>",
                    "defaultValue": "{\r\n  title: { control: { type: 'boolean' }, name: 'Has title' },\r\n  subtitle: { control: { type: 'boolean' }, name: 'Has subtitle' },\r\n  content: { control: { type: 'boolean' }, name: 'Has content' },\r\n  actions: { control: { type: 'boolean' }, name: 'Has actions' },\r\n  footer: { control: { type: 'boolean' }, name: 'Has footer' },\r\n  avatar: { control: { type: 'boolean' }, name: 'Has avatar' },\r\n  image: { control: { type: 'boolean' }, name: 'Has image' },\r\n  media: { control: { type: 'boolean' }, name: 'Has media' },\r\n  mediaSize: {\r\n    options: ['xl', 'lg', 'md', 'sm'],\r\n    control: { type: 'radio' },\r\n    name: 'Media size'\r\n  },\r\n  align: {\r\n    options: ['start', 'end'],\r\n    control: { type: 'radio' },\r\n    name: 'Align actions'\r\n  },\r\n  appearance: {\r\n    options: ['outlined', 'raised'],\r\n    control: { type: 'radio' },\r\n    name: 'Appearance'\r\n  }\r\n}"
                },
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardModule>",
                    "defaultValue": "{\r\n  title: 'Components/Card',\r\n  component: CardModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/chips/chips.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChipsModule>",
                    "defaultValue": "{\r\n  color: 'default',\r\n  hideSingle: false,\r\n  multiple: false,\r\n  selectable: false,\r\n  highlighted: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ChipsModule>",
                    "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  hideSingle: { control: { type: 'boolean' }, name: 'Hide Single Selection Indicator' },\r\n  multiple: { control: { type: 'boolean' }, name: 'Select Multiple' },\r\n  selectable: { control: { type: 'boolean' }, name: 'Selectable' },\r\n  highlighted: { control: { type: 'boolean' }, name: 'Highlighted' }\r\n}"
                },
                {
                    "name": "Chips",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChipsModule>",
                    "defaultValue": "{\r\n  title: 'Components/Chips',\r\n  component: ChipsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/expansion/expansion.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ExpansionModule>",
                    "defaultValue": "{\r\n  toggle: true,\r\n  description: true,\r\n  disabled: false,\r\n  multi: false,\r\n  expanded: false,\r\n  displayMode: 'default',\r\n  togglePosition: 'before'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ExpansionModule>",
                    "defaultValue": "{\r\n  toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\r\n  description: { control: { type: 'boolean' }, name: 'Has description' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  multi: { control: { type: 'boolean' }, name: 'Open more than one panel' },\r\n  expanded: { control: { type: 'boolean' }, name: 'Expand' },\r\n  displayMode: {\r\n    options: ['default', 'flat'],\r\n    control: { type: 'radio' },\r\n    name: 'Display mode'\r\n  },\r\n  togglePosition: {\r\n    options: ['before', 'after'],\r\n    control: { type: 'radio' },\r\n    name: 'Toggle position'\r\n  },\r\n  opened: { action: 'opened' },\r\n  closed: { action: 'closed' }\r\n}"
                },
                {
                    "name": "Expansion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ExpansionModule>",
                    "defaultValue": "{\r\n  title: 'Components/Expansion',\r\n  component: ExpansionModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/theme/colors/colors.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ColorsModule>",
                    "defaultValue": "{\r\n  color: 'primary'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ColorsModule>",
                    "defaultValue": "{\r\n  color: {\r\n    options: ['primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
                },
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorsModule>",
                    "defaultValue": "{\r\n  title: 'Theme/Colors',\r\n  component: ColorsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/divider/divider.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DividerModule>",
                    "defaultValue": "{\r\n  inset: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<DividerModule>",
                    "defaultValue": "{\r\n  inset: { control: { type: 'boolean' }, name: 'Inset' }\r\n}"
                },
                {
                    "name": "Divider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DividerModule>",
                    "defaultValue": "{\r\n  title: 'Components/Divider',\r\n  component: DividerModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<MenuModule>",
                    "defaultValue": "{\r\n  yPosition: 'above',\r\n  xPosition: 'before'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<MenuModule>",
                    "defaultValue": "{\r\n  yPosition: {\r\n    options: ['above', 'below'],\r\n    control: { type: 'radio' },\r\n    name: 'Y position'\r\n  },\r\n  xPosition: {\r\n    options: ['before', 'after'],\r\n    control: { type: 'radio' },\r\n    name: 'Y position'\r\n  }\r\n  /* toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\r\n   */\r\n}"
                },
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuModule>",
                    "defaultValue": "{\r\n  title: 'Components/Expansion',\r\n  component: MenuModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/theme/typography/typography.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TypographyModule>",
                    "defaultValue": "{\r\n  color: 'default'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TypographyModule>",
                    "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TypographyModule>",
                    "defaultValue": "{\r\n  title: 'Theme/Typography',\r\n  component: TypographyModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                },
                {
                    "name": "Typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    }\n  }\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/components/badge/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeModule>",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/autocomplete/autocomplete.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AutocompleteModule>",
                    "file": "src/stories/components/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/bottom-sheet/bottom-sheet.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BottomSheetModule>",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonModule>",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/card/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardModule>",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/chips/chips.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChipsModule>",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/expansion/expansion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ExpansionModule>",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/theme/colors/colors.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorsModule>",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/divider/divider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DividerModule>",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuModule>",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/theme/typography/typography.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TypographyModule>",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/assets/sb-header/sb-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SBHeaderModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocomplete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Autocomplete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Badge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomSheetModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomSheetOverviewExampleSheet",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomSheet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardModule",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipsModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Chips",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DividerModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Divider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpansionModule",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Expansion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuModule",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}