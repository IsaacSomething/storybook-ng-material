{
    "pipes": [],
    "interfaces": [
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-f5678a705f2e66ef8052b4417eb34a1c8af498caba26e44462dc641dc341ae08ac4e67a7458aa2145776649949a795ecac57cf0de56ca7a728fb2175bdb11e27",
            "file": "src/stories/components/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n];\n\n@Component({\n  selector: 'app-table',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTableModule, MatSortModule],\n  styles: [\n    `\n      .with-styles .mat-column-position {\n        width: 32px;\n        border-right: 1px solid #ccc;\n        padding-right: 24px;\n        text-align: center;\n      }\n      .with-styles .mat-column-name {\n        background: rgba(0, 0, 0, 0.02);\n      }\n      .with-styles .mat-column-weight {\n        font-weight: 700;\n      }\n      .with-styles .mat-column-symbol {\n        color: var(--mat-primary);\n        text-align: center;\n        width: 32px;\n      }\n    `\n  ],\n  template: `\n    <sb-header title=\"Table\" matLink=\"components/table/api\" />\n\n    <div class=\"mx-4\">\n      <table mat-table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z1\" [class.with-styles]=\"hasStyles\">\n        <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\" sticky>\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"weight\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Weight</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Symbol</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.symbol }}</td>\n        </ng-container>\n\n        <!-- Disclaimer column -->\n        <ng-container matColumnDef=\"disclaimer\">\n          <td mat-footer-cell *matFooterCellDef colspan=\"4\" class=\"p-4\">\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic quisquam alias, tenetur cumque aliquam fugit doloribus maiores\n            eaque error minima commodi obcaecati esse? Quos odio, magnam eaque dolor eius accusantium!\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n        <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\"></tr>\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"4\">\n            <h1 class=\"p-4\">No data</h1>\n          </td>\n        </tr>\n      </table>\n    </div>\n  `\n})\nexport class TableModule implements AfterViewInit {\n  @ViewChild(MatSort) sort!: MatSort;\n  @Input() hasStyles!: boolean;\n  @Input() set clear(value: boolean) {\n    if (value) {\n      this.dataSource.data = [];\n      return;\n    }\n\n    this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n  }\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Tile",
            "id": "interface-Tile-47e087e186723ee1b979414f9aa6a7b0f7d5f7041c4af5575402a80d5821c76e894036c12f5f35febc456702b7991351f52bb3183937022bf8ac59efef1ae824",
            "file": "src/stories/helpers/grid/grid.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n}\n\n@Component({\n  selector: 'app-grid',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatGridListModule],\n  template: `\n    <sb-header title=\"Grid\" matLink=\"components/grid-list/overview\" />\n\n    <mat-grid-list [cols]=\"cols\" rowHeight=\"100px\">\n      <mat-grid-tile [colspan]=\"colOne\" [rowspan]=\"rowOne\" class=\"bg-orange-300\"> One </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"colTwo\" [rowspan]=\"rowTwo\" class=\"bg-orange-400\"> Two </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"colThree\" [rowspan]=\"rowThree\" class=\"bg-orange-500\"> Three </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"colFour\" [rowspan]=\"rowFour\" class=\"bg-orange-600\"> Four </mat-grid-tile>\n    </mat-grid-list>\n  `,\n  styles: []\n})\nexport class GridModule implements OnInit {\n  @Input() cols!: number;\n  @Input() colOne!: number;\n  @Input() rowOne!: number;\n  @Input() colTwo!: number;\n  @Input() rowTwo!: number;\n  @Input() colThree!: number;\n  @Input() rowThree!: number;\n  @Input() colFour!: number;\n  @Input() rowFour!: number;\n  tiles!: Tile[];\n\n  ngOnInit(): void {\n    this.tiles = [\n      { text: 'One', cols: 2, rows: 1, color: 'lightblue' },\n      { text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\n      { text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\n      { text: 'Four', cols: 2, rows: 1, color: '#DDBDF1' }\n    ];\n  }\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f7246eb4923d27635152e4f6e375c8b00c3b0318fd02d75cfd3204bdfd8cb6f38e461f04c16e9c103c95ca83ef5aeaa9a23a759c480f8bd1e5f1dbbb381e4eb1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AutocompleteModule",
            "id": "component-AutocompleteModule-c3e6253bacd21bdb7bd7892d812a1c82dbf40ceb1174ef2b992dac4bf196bc227ff75d98ce3caf175dfd5f819b39a18c4b22a303560cd4f520c71d0f8aa546ab",
            "file": "src/stories/forms/autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-autocomplete",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"components/autocomplete/api\" />\n\n<form class=\"mx-4\">\n  <mat-form-field>\n    <mat-label>Number</mat-label>\n    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\n    <mat-autocomplete [autoActiveFirstOption]=\"autoActiveFirstOption\" #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autoActiveFirstOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "myControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "options",
                    "defaultValue": "['Option one', 'Option two', 'Option three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "_filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { Observable, map, startWith } from 'rxjs';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-autocomplete',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\n  template: `\n    <sb-header title=\"Autocomplete\" matLink=\"components/autocomplete/api\" />\n\n    <form class=\"mx-4\">\n      <mat-form-field>\n        <mat-label>Number</mat-label>\n        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\n        <mat-autocomplete [autoActiveFirstOption]=\"autoActiveFirstOption\" #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n            {{ option }}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n  `,\n  styles: []\n})\nexport class AutocompleteModule {\n  @Input() autoActiveFirstOption!: boolean;\n  myControl = new FormControl('');\n  options: string[] = ['Option one', 'Option two', 'Option three'];\n  filteredOptions!: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value || ''))\n    );\n  }\n\n  _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BadgeModule",
            "id": "component-BadgeModule-a5815b799fc4f83a07ce5bdcb5363ccb275e290729667e8cf7fe7ff8edba9ecc4211b808a4b0de43ce212785ce2671b0bcb41c5b68f660e3854b9b79439a08d7",
            "file": "src/stories/components/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Badge\" matLink=\"components/badge/api\" />\n\n<div class=\"mx-4\">\n  <button\n    mat-raised-button\n    [matBadgeHidden]=\"hidden\"\n    [matBadgeOverlap]=\"overlap\"\n    [matBadge]=\"label\"\n    [matBadgePosition]=\"position\"\n    [matBadgeColor]=\"color\"\n    [matBadgeSize]=\"size\"\n    [matBadgeDisabled]=\"disabled\"\n  >\n    [Button]\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "overlap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "\"above after\" | \"above before\" | \"below before\" | \"below after\" | \"before\" | \"after\" | \"above\" | \"below\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatBadgeModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-badge',\n  standalone: true,\n  imports: [CommonModule, MatBadgeModule, MatButtonModule, SBHeaderModule],\n  template: `\n    <sb-header title=\"Badge\" matLink=\"components/badge/api\" />\n\n    <div class=\"mx-4\">\n      <button\n        mat-raised-button\n        [matBadgeHidden]=\"hidden\"\n        [matBadgeOverlap]=\"overlap\"\n        [matBadge]=\"label\"\n        [matBadgePosition]=\"position\"\n        [matBadgeColor]=\"color\"\n        [matBadgeSize]=\"size\"\n        [matBadgeDisabled]=\"disabled\"\n      >\n        [Button]\n      </button>\n    </div>\n  `\n})\nexport class BadgeModule {\n  @Input() color!: 'primary' | 'accent' | 'warn';\n  @Input() disabled!: boolean;\n  @Input() overlap!: boolean;\n  @Input() label!: string;\n  @Input() hidden!: boolean;\n  @Input() position!: 'above after' | 'above before' | 'below before' | 'below after' | 'before' | 'after' | 'above' | 'below';\n  @Input() size!: 'small' | 'medium' | 'large';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BottomSheetModule",
            "id": "component-BottomSheetModule-c9666c395105e8f09db643daca33ccf1455e74d37f52602fd2067a43f621e18e0c762709ebfd9c022d5aae4344a0cefda39af7cf04302876162be58500d7cebe",
            "file": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bottom-sheet",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\n<button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openBottomSheet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatBottomSheetModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetModule, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\n\n@Component({\n  selector: 'app-bottom-sheet',\n  standalone: true,\n  imports: [MatBottomSheetModule, MatButtonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n  `\n})\nexport class BottomSheetModule {\n  @Input() hasBackdrop!: boolean;\n\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  openBottomSheet() {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet, { hasBackdrop: this.hasBackdrop });\n  }\n}\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  template: `<h1>Bottom sheet</h1>`\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent) {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BottomSheetOverviewExampleSheet",
            "id": "component-BottomSheetOverviewExampleSheet-c9666c395105e8f09db643daca33ccf1455e74d37f52602fd2067a43f621e18e0c762709ebfd9c022d5aae4344a0cefda39af7cf04302876162be58500d7cebe",
            "file": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bottom-sheet-overview-example-sheet",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Bottom sheet</h1>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openLink",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetModule, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\n\n@Component({\n  selector: 'app-bottom-sheet',\n  standalone: true,\n  imports: [MatBottomSheetModule, MatButtonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n  `\n})\nexport class BottomSheetModule {\n  @Input() hasBackdrop!: boolean;\n\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  openBottomSheet() {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet, { hasBackdrop: this.hasBackdrop });\n  }\n}\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  template: `<h1>Bottom sheet</h1>`\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent) {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheetRef",
                        "type": "MatBottomSheetRef<BottomSheetOverviewExampleSheet>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "bottomSheetRef",
                        "type": "MatBottomSheetRef<BottomSheetOverviewExampleSheet>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ButtonModule",
            "id": "component-ButtonModule-6f02febb9e76dcf444de6d14134d5823108305f175cd46b37fa8558b9ecf71f4ad9a5547cff4bfccbcf1045df6c121b10ea15238086133360e170df3656b52bf",
            "file": "src/stories/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [
                "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    "
            ],
            "template": "<sb-header title=\"Button\" matLink=\"components/button/api\" />\n<div [ngSwitch]=\"type\" class=\"mx-4\">\n  <button *ngSwitchDefault mat-button [color]=\"color\" [disabled]=\"disabled\">{{ label }}</button>\n  <button *ngSwitchCase=\"'raised'\" mat-raised-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n  <button *ngSwitchCase=\"'flat'\" mat-flat-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n  <button *ngSwitchCase=\"'stroked'\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"default\" | \"flat\" | \"stroked\" | \"raised\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ThemePalette } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, SBHeaderModule],\n  styles: [\n    `\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    `\n  ],\n  template: `\n    <sb-header title=\"Button\" matLink=\"components/button/api\" />\n    <div [ngSwitch]=\"type\" class=\"mx-4\">\n      <button *ngSwitchDefault mat-button [color]=\"color\" [disabled]=\"disabled\">{{ label }}</button>\n      <button *ngSwitchCase=\"'raised'\" mat-raised-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n      <button *ngSwitchCase=\"'flat'\" mat-flat-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n      <button *ngSwitchCase=\"'stroked'\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n    </div>\n  `\n})\nexport class ButtonModule {\n  @Input() label!: string;\n  @Input() color!: ThemePalette | 'default';\n  @Input() type!: 'default' | 'flat' | 'stroked' | 'raised';\n  @Input() disabled!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    \n"
        },
        {
            "name": "CardModule",
            "id": "component-CardModule-32bd4a2414da9678189ae40868c63449ca3c15b48fefd5a0ee79afdadb4a7ccb83d081ca5aa62f40dd3da029c603c23e341c03a146687325c7d72067224ff835",
            "file": "src/stories/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Card\" matLink=\"components/card/api\" />\n\n<mat-card class=\"mx-4\" style=\"width:400px\" [appearance]=\"appearance\">\n  <mat-card-header *ngIf=\"title || subtitle\">\n    <mat-card-title-group>\n      <img *ngIf=\"avatar\" mat-card-avatar src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n      <mat-card-title *ngIf=\"title\">title</mat-card-title>\n      <mat-card-subtitle *ngIf=\"subtitle\">subtitle</mat-card-subtitle>\n\n      <ng-container *ngIf=\"media\" [ngSwitch]=\"mediaSize\">\n        <img *ngSwitchCase=\"'xl'\" mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'lg'\" mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'md'\" mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'sm'\" mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n      </ng-container>\n    </mat-card-title-group>\n  </mat-card-header>\n\n  <img *ngIf=\"image\" mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n\n  <!-- Empty content for bottom spacing if display is just title || subtitle -->\n  <mat-card-content></mat-card-content>\n\n  <mat-card-content *ngIf=\"content\">\n    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quos nostrum veritatis assumenda corrupti sequi ut molestiae\n    nesciunt, quo, eius accusamus dolor illo esse quaerat culpa vel accusantium dolore aspernatur?\n  </mat-card-content>\n\n  <mat-card-actions *ngIf=\"actions\" [align]=\"align\">\n    <button mat-button>[Lorem Ipsum]</button>\n    <button mat-button>[Lorem Ipsum]</button>\n  </mat-card-actions>\n\n  <mat-card-footer *ngIf=\"footer\">\n    <mat-progress-bar mode=\"indeterminate\" />\n  </mat-card-footer>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "\"outlined\" | \"raised\"",
                    "decorators": []
                },
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "media",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mediaSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "\"xl\" | \"lg\" | \"md\" | \"sm\"",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatCardModule, MatButtonModule, MatProgressBarModule],\n  template: `\n    <sb-header title=\"Card\" matLink=\"components/card/api\" />\n\n    <mat-card class=\"mx-4\" style=\"width:400px\" [appearance]=\"appearance\">\n      <mat-card-header *ngIf=\"title || subtitle\">\n        <mat-card-title-group>\n          <img *ngIf=\"avatar\" mat-card-avatar src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n          <mat-card-title *ngIf=\"title\">title</mat-card-title>\n          <mat-card-subtitle *ngIf=\"subtitle\">subtitle</mat-card-subtitle>\n\n          <ng-container *ngIf=\"media\" [ngSwitch]=\"mediaSize\">\n            <img *ngSwitchCase=\"'xl'\" mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'lg'\" mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'md'\" mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'sm'\" mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n          </ng-container>\n        </mat-card-title-group>\n      </mat-card-header>\n\n      <img *ngIf=\"image\" mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n\n      <!-- Empty content for bottom spacing if display is just title || subtitle -->\n      <mat-card-content></mat-card-content>\n\n      <mat-card-content *ngIf=\"content\">\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quos nostrum veritatis assumenda corrupti sequi ut molestiae\n        nesciunt, quo, eius accusamus dolor illo esse quaerat culpa vel accusantium dolore aspernatur?\n      </mat-card-content>\n\n      <mat-card-actions *ngIf=\"actions\" [align]=\"align\">\n        <button mat-button>[Lorem Ipsum]</button>\n        <button mat-button>[Lorem Ipsum]</button>\n      </mat-card-actions>\n\n      <mat-card-footer *ngIf=\"footer\">\n        <mat-progress-bar mode=\"indeterminate\" />\n      </mat-card-footer>\n    </mat-card>\n  `,\n  styles: []\n})\nexport class CardModule {\n  @Input() appearance!: 'outlined' | 'raised';\n  @Input() title!: boolean;\n  @Input() subtitle!: boolean;\n  @Input() content!: boolean;\n  @Input() actions!: boolean;\n  @Input() avatar!: boolean;\n  @Input() media!: boolean;\n  @Input() mediaSize!: 'xl' | 'lg' | 'md' | 'sm';\n  @Input() image!: boolean;\n  @Input() footer!: boolean;\n  @Input() align!: 'start' | 'end';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxModule",
            "id": "component-CheckboxModule-a80bea2cfe08ec2ed7c02922e2e134d056fdff5c478615b7cabb0d290bec085b135d69d944627f409d20fbc2f5a842ea33842ed851502063c6afa38bf3208dee",
            "file": "src/stories/forms/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Checkbox\" matLink=\"components/checkbox/api\" />\n\n<div class=\"flex flex-col\" [class.flex-col]=\"stacked\">\n  <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\" class=\"mr-2\" checked>\n    [Option 1]\n  </mat-checkbox>\n  <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\" class=\"mr-2\">[Option 2]</mat-checkbox>\n  <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\">[Option 3]</mat-checkbox>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-checkbox',\n  standalone: true,\n  imports: [CommonModule, MatCheckboxModule, SBHeaderModule],\n  template: `\n    <sb-header title=\"Checkbox\" matLink=\"components/checkbox/api\" />\n\n    <div class=\"flex flex-col\" [class.flex-col]=\"stacked\">\n      <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\" class=\"mr-2\" checked>\n        [Option 1]\n      </mat-checkbox>\n      <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\" class=\"mr-2\">[Option 2]</mat-checkbox>\n      <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\">[Option 3]</mat-checkbox>\n    </div>\n  `,\n  styles: []\n})\nexport class CheckboxModule {\n  @Input() stacked!: boolean;\n  @Input() indeterminate!: boolean;\n  @Input() labelPosition!: 'before' | 'after';\n  @Input() color!: ThemePalette | 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChipsModule",
            "id": "component-ChipsModule-b323e17b3018862cc7294c0dc4e8ea062e005de4ded52f27c46623b8507660131f2280456eee7648181038d2df50baba20c9c2e4e6026dd668282c5ddd739f55",
            "file": "src/stories/components/chips/chips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chips",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Chips\" matLink=\"components/chips/api\" />\n\n<mat-chip-listbox class=\"mx-4\" [hideSingleSelectionIndicator]=\"hideSingle\" [multiple]=\"multiple\" [selectable]=\"selectable\">\n  <mat-chip-option>Default</mat-chip-option>\n  <mat-chip-option>\n    <img matChipAvatar src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\" alt=\"Photo of a Shiba Inu\" /> With Avatar\n  </mat-chip-option>\n  <mat-chip-option> <mat-icon matChipTrailingIcon>bolt</mat-icon>With trailing icon </mat-chip-option>\n  <mat-chip-option [color]=\"color\" selected>Selected with color</mat-chip-option>\n  <mat-chip-option [highlighted]=\"highlighted\">Highlighted</mat-chip-option>\n</mat-chip-listbox>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "hideSingle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "highlighted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-chips',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatChipsModule, MatButtonModule, MatIconModule],\n  template: `\n    <sb-header title=\"Chips\" matLink=\"components/chips/api\" />\n\n    <mat-chip-listbox class=\"mx-4\" [hideSingleSelectionIndicator]=\"hideSingle\" [multiple]=\"multiple\" [selectable]=\"selectable\">\n      <mat-chip-option>Default</mat-chip-option>\n      <mat-chip-option>\n        <img matChipAvatar src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\" alt=\"Photo of a Shiba Inu\" /> With Avatar\n      </mat-chip-option>\n      <mat-chip-option> <mat-icon matChipTrailingIcon>bolt</mat-icon>With trailing icon </mat-chip-option>\n      <mat-chip-option [color]=\"color\" selected>Selected with color</mat-chip-option>\n      <mat-chip-option [highlighted]=\"highlighted\">Highlighted</mat-chip-option>\n    </mat-chip-listbox>\n  `,\n  styles: []\n})\nexport class ChipsModule {\n  @Input() color!: ThemePalette | 'default';\n  @Input() hideSingle!: boolean;\n  @Input() multiple!: boolean;\n  @Input() selectable!: boolean;\n  @Input() highlighted!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ClipModule",
            "id": "component-ClipModule-cfc449d09fa9d23f15e0ebe6a77de29faec14c40f2b46a81fd6b128674bc7fac5dc8fcd6dad88fba9b37d697502e7fd2e6467ac3acbf5c393f30df443f70ff6e",
            "file": "src/stories/helpers/clipboard/clipboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-clipboard",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Clipboard\" matLink=\"cdk/clipboard/api\" />\n<div class=\"mx-4\">\n  <h3>{{ textCopy }}</h3>\n\n  <button mat-raised-button [cdkCopyToClipboard]=\"textCopy\" (click)=\"copied()\">{{ text }}</button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "text",
                    "defaultValue": "'Clip to copy text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "textCopy",
                    "defaultValue": "'lorem ipsum dolor sit amet'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "textValue",
                    "defaultValue": "'Clip to copy text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "copied",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "ClipboardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-clipboard',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatButtonModule, ClipboardModule],\n  template: `\n    <sb-header title=\"Clipboard\" matLink=\"cdk/clipboard/api\" />\n    <div class=\"mx-4\">\n      <h3>{{ textCopy }}</h3>\n\n      <button mat-raised-button [cdkCopyToClipboard]=\"textCopy\" (click)=\"copied()\">{{ text }}</button>\n    </div>\n  `,\n  styles: []\n})\nexport class ClipModule {\n  text = 'Clip to copy text';\n  textValue = 'Clip to copy text';\n  textCopy = 'lorem ipsum dolor sit amet';\n\n  copied() {\n    this.text = 'Copied!';\n    setTimeout(() => {\n      this.text = this.textValue;\n    }, 1000);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ColorsModule",
            "id": "component-ColorsModule-3ebeaf0ea61036077c5b998c6ab605b7a09564a27706b9781d79d1b5b103a95ea6a831b6e09f7e4195fee6da4d2e32fe011e13f391aa580087159cd40398f41e",
            "file": "src/stories/theme/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "./colors.component.scss"
            ],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n<div class=\"mx-4\">\n  <div\n    class=\"block\"\n    matRipple\n    cdkCopyToClipboard=\"var(--mat-{{ color }}-{{ hue }})\"\n    *ngFor=\"let hue of ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'A100', 'A200', 'A400', 'A700']\"\n    style=\"background-color:var(--mat-{{ color }}-{{ hue }})\"\n  >\n    <h1 style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\">{{ hue }}</h1>\n    <small style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\"> var(--mat-{{ color }}-{{ hue }}) </small>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ThemePalette",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "ClipboardModule",
                    "type": "module"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatRippleModule, ThemePalette } from '@angular/material/core';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-colors',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, ClipboardModule, MatRippleModule],\n  styleUrls: ['./colors.component.scss'],\n  template: `\n    <sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n    <div class=\"mx-4\">\n      <div\n        class=\"block\"\n        matRipple\n        cdkCopyToClipboard=\"var(--mat-{{ color }}-{{ hue }})\"\n        *ngFor=\"let hue of ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'A100', 'A200', 'A400', 'A700']\"\n        style=\"background-color:var(--mat-{{ color }}-{{ hue }})\"\n      >\n        <h1 style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\">{{ hue }}</h1>\n        <small style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\"> var(--mat-{{ color }}-{{ hue }}) </small>\n      </div>\n    </div>\n  `,\n  styles: []\n})\nexport class ColorsModule {\n  @Input() color!: ThemePalette;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".block {\n  height: 80px;\n  width: 160px;\n  border-radius: 4px;\n  display: inline-block;\n  margin-right: 16px;\n  margin-bottom: 16px;\n  padding: 8px;\n  position: relative;\n  &:hover {\n    cursor: copy;\n  }\n\n  h1 {\n    font-weight: bold;\n    font-weight: 50px;\n  }\n}\n\nh4 {\n  font-weight: bold !important;\n}\n\nsmall {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background: rgb(0 0 0 / 5%);\n  width: 100%;\n  font-weight: 400;\n  padding: 6px 10px;\n  letter-spacing: -0.9px;\n}\n",
                    "styleUrl": "./colors.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "DatePickerModule",
            "id": "component-DatePickerModule-5dafbb1a95fd2e6edc2d535678e75a57e202f4f04df916a676348e0180f7be3f01eee5efec7999597175aee755cde408fdd5e536f36a97a0efe952d4fcc0a297",
            "file": "src/stories/forms/date-picker/date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-picker",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Date picker\" matLink=\"date-picker\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-date-picker',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  template: ` <sb-header title=\"Date picker\" matLink=\"date-picker\" /> `,\n  styles: []\n})\nexport class DatePickerModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DividerModule",
            "id": "component-DividerModule-8d28d938280df37a8e7a986f3b9fa9a7f5a700a7d90d461e16ae982a6f91b9117f1a8eb22b9ad73daf5f737cd76053f9b9003c46e26196f378bed5304b0c3900",
            "file": "src/stories/components/divider/divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-divider",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Divider\" matLink=\"components/divider/api\" />\n\n<mat-list>\n  <mat-list-item>[Item 1]</mat-list-item>\n  <mat-divider [inset]=\"inset\"></mat-divider>\n  <mat-list-item>[Item 2]</mat-list-item>\n  <mat-divider [inset]=\"inset\"></mat-divider>\n  <mat-list-item>[Item 3]</mat-list-item>\n</mat-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-divider',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatDividerModule, MatListModule],\n  template: `\n    <sb-header title=\"Divider\" matLink=\"components/divider/api\" />\n\n    <mat-list>\n      <mat-list-item>[Item 1]</mat-list-item>\n      <mat-divider [inset]=\"inset\"></mat-divider>\n      <mat-list-item>[Item 2]</mat-list-item>\n      <mat-divider [inset]=\"inset\"></mat-divider>\n      <mat-list-item>[Item 3]</mat-list-item>\n    </mat-list>\n  `,\n  styles: []\n})\nexport class DividerModule {\n  @Input() inset!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ElevationModule",
            "id": "component-ElevationModule-414270e27ef80d207949f05b115e18aded3dc1b056cd240b7f776bb8e63e75f4d33bb9982b422ae914dd2177788dc7d84e2c54d1503fa3b0180634d28d65a85b",
            "file": "src/stories/helpers/elevation/elevation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-Elevation",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Elevation\" matLink=\"guide/elevation\" />\n\n<div class=\"mx-4\">\n  <mat-card class=\"h-96 w-96 p-4 mat-elevation-z{{elevation}}\">\n    lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n  </mat-card>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "elevation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-Elevation',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatCardModule],\n  template: `\n    <sb-header title=\"Elevation\" matLink=\"guide/elevation\" />\n\n    <div class=\"mx-4\">\n      <mat-card class=\"h-96 w-96 p-4 mat-elevation-z{{elevation}}\">\n        lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n      </mat-card>\n    </div>\n  `,\n  styles: []\n})\nexport class ElevationModule {\n  @Input() elevation!: number;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ExpansionModule",
            "id": "component-ExpansionModule-28caf48bf09870aadca5d7da272215424394062a88e1374f7dad5cae52db4d407f43cce2699ef6ebcbbc182c7aa14ba77724e4b98060f397be376c063bffcf92",
            "file": "src/stories/components/expansion/expansion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expansion",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Expansion Panel\" matLink=\"components/expansion/api\" />\n   <mat-accordion [multi]=\"multi\" [displayMode]=\"displayMode\">\n     <mat-expansion-panel #panel1 (opened)=\"opened(panel1)\" (closed)=\"closed(panel1)\">\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n     </mat-expansion-panel>\n\n     <mat-expansion-panel\n       #panel2\n       [hideToggle]=\"!toggle\"\n       [disabled]=\"disabled\"\n       [togglePosition]=\"togglePosition\"\n       [expanded]=\"expanded\"\n       (opened)=\"opened(panel2)\"\n       (closed)=\"closed(panel2)\"\n     >\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n         <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n       <mat-action-row>\n         <button mat-flat-button color=\"primary\" (click)=\"panel3.open()\">Next [Action row]</button>\n       </mat-action-row>\n     </mat-expansion-panel>\n\n     <mat-expansion-panel\n       #panel3\n       [hideToggle]=\"!toggle\"\n       [disabled]=\"disabled\"\n       [togglePosition]=\"togglePosition\"\n       [expanded]=\"expanded\"\n       (opened)=\"opened(panel3)\"\n       (closed)=\"closed(panel3)\"\n     >\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n         <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n     </mat-expansion-panel>\n   </mat-accordion>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "displayMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "\"default\" | \"flat\"",
                    "decorators": []
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "toggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "togglePosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closed",
                    "args": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "opened",
                    "args": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatExpansionModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-expansion',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatExpansionModule, MatButtonModule],\n  template: ` <sb-header title=\"Expansion Panel\" matLink=\"components/expansion/api\" />\n\n    <mat-accordion [multi]=\"multi\" [displayMode]=\"displayMode\">\n      <mat-expansion-panel #panel1 (opened)=\"opened(panel1)\" (closed)=\"closed(panel1)\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel\n        #panel2\n        [hideToggle]=\"!toggle\"\n        [disabled]=\"disabled\"\n        [togglePosition]=\"togglePosition\"\n        [expanded]=\"expanded\"\n        (opened)=\"opened(panel2)\"\n        (closed)=\"closed(panel2)\"\n      >\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n          <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n        <mat-action-row>\n          <button mat-flat-button color=\"primary\" (click)=\"panel3.open()\">Next [Action row]</button>\n        </mat-action-row>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel\n        #panel3\n        [hideToggle]=\"!toggle\"\n        [disabled]=\"disabled\"\n        [togglePosition]=\"togglePosition\"\n        [expanded]=\"expanded\"\n        (opened)=\"opened(panel3)\"\n        (closed)=\"closed(panel3)\"\n      >\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n          <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n      </mat-expansion-panel>\n    </mat-accordion>`,\n  styles: []\n})\nexport class ExpansionModule {\n  @Input() toggle!: boolean;\n  @Input() description!: boolean;\n  @Input() disabled!: boolean;\n  @Input() multi!: boolean;\n  @Input() expanded!: boolean;\n  @Input() displayMode!: 'default' | 'flat';\n  @Input() togglePosition!: 'before' | 'after';\n\n  opened(panel: MatExpansionPanel) {\n    console.log(panel);\n  }\n\n  closed(panel: MatExpansionPanel) {\n    console.log(panel);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "FormFieldModule",
            "id": "component-FormFieldModule-7de3f6ab8c85ad90c2407ef41ed60eccd198e3627cc01d197d2c90169734d0f66bbf0ab35695aa0dfe7a8cb6452f28065f288ca7c36b90a3925dd9e6d525b14e",
            "file": "src/stories/forms/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Form Field\" matLink=\"form-field\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-form-field',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\n  template: ` <sb-header title=\"Form Field\" matLink=\"form-field\" /> `,\n  styles: []\n})\nexport class FormFieldModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "GridModule",
            "id": "component-GridModule-47e087e186723ee1b979414f9aa6a7b0f7d5f7041c4af5575402a80d5821c76e894036c12f5f35febc456702b7991351f52bb3183937022bf8ac59efef1ae824",
            "file": "src/stories/helpers/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-grid",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Grid\" matLink=\"components/grid-list/overview\" />\n\n<mat-grid-list [cols]=\"cols\" rowHeight=\"100px\">\n  <mat-grid-tile [colspan]=\"colOne\" [rowspan]=\"rowOne\" class=\"bg-orange-300\"> One </mat-grid-tile>\n  <mat-grid-tile [colspan]=\"colTwo\" [rowspan]=\"rowTwo\" class=\"bg-orange-400\"> Two </mat-grid-tile>\n  <mat-grid-tile [colspan]=\"colThree\" [rowspan]=\"rowThree\" class=\"bg-orange-500\"> Three </mat-grid-tile>\n  <mat-grid-tile [colspan]=\"colFour\" [rowspan]=\"rowFour\" class=\"bg-orange-600\"> Four </mat-grid-tile>\n</mat-grid-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "colFour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "colOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "colThree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "colTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowFour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowThree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tile[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatGridListModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n}\n\n@Component({\n  selector: 'app-grid',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatGridListModule],\n  template: `\n    <sb-header title=\"Grid\" matLink=\"components/grid-list/overview\" />\n\n    <mat-grid-list [cols]=\"cols\" rowHeight=\"100px\">\n      <mat-grid-tile [colspan]=\"colOne\" [rowspan]=\"rowOne\" class=\"bg-orange-300\"> One </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"colTwo\" [rowspan]=\"rowTwo\" class=\"bg-orange-400\"> Two </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"colThree\" [rowspan]=\"rowThree\" class=\"bg-orange-500\"> Three </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"colFour\" [rowspan]=\"rowFour\" class=\"bg-orange-600\"> Four </mat-grid-tile>\n    </mat-grid-list>\n  `,\n  styles: []\n})\nexport class GridModule implements OnInit {\n  @Input() cols!: number;\n  @Input() colOne!: number;\n  @Input() rowOne!: number;\n  @Input() colTwo!: number;\n  @Input() rowTwo!: number;\n  @Input() colThree!: number;\n  @Input() rowThree!: number;\n  @Input() colFour!: number;\n  @Input() rowFour!: number;\n  tiles!: Tile[];\n\n  ngOnInit(): void {\n    this.tiles = [\n      { text: 'One', cols: 2, rows: 1, color: 'lightblue' },\n      { text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\n      { text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\n      { text: 'Four', cols: 2, rows: 1, color: '#DDBDF1' }\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MenuModule",
            "id": "component-MenuModule-99cb2acc9ca9a8765807bc84d066d6bd2ae65ca9e177ab5a66f7f3ee2782c4a9bb8bcc1a7a1b58b390c84f79a1e0db0c6b7ce6dbcdd8e08316c607798f006421",
            "file": "src/stories/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Menu\" matLink=\"components/menu/api\" />\n\n<button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">[Menu]</button>\n<mat-menu #menu=\"matMenu\" [yPosition]=\"yPosition\" [xPosition]=\"xPosition\" [hasBackdrop]=\"hasBackdrop\" [overlapTrigger]=\"overlapTrigger\">\n  <button mat-menu-item>Level 1a</button>\n  <button mat-menu-item>Level 2b</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"level2\">Multi level</button>\n</mat-menu>\n\n<mat-menu\n  #level2=\"matMenu\"\n  [yPosition]=\"yPosition\"\n  [xPosition]=\"xPosition\"\n  [hasBackdrop]=\"hasBackdrop\"\n  [overlapTrigger]=\"overlapTrigger\"\n>\n  <button mat-menu-item>Level 2a</button>\n  <button mat-menu-item>Level 2b</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"level3\">Level 2c</button>\n</mat-menu>\n\n<mat-menu\n  #level3=\"matMenu\"\n  [yPosition]=\"yPosition\"\n  [xPosition]=\"xPosition\"\n  [hasBackdrop]=\"hasBackdrop\"\n  [overlapTrigger]=\"overlapTrigger\"\n>\n  <button mat-menu-item>Level 3a</button>\n  <button mat-menu-item>Level 3b</button>\n  <button mat-menu-item>Level 3c</button>\n</mat-menu>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "overlapTrigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "xPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "yPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "\"above\" | \"below\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-menu',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatMenuModule, MatButtonModule],\n  template: `\n    <sb-header title=\"Menu\" matLink=\"components/menu/api\" />\n\n    <button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">[Menu]</button>\n    <mat-menu #menu=\"matMenu\" [yPosition]=\"yPosition\" [xPosition]=\"xPosition\" [hasBackdrop]=\"hasBackdrop\" [overlapTrigger]=\"overlapTrigger\">\n      <button mat-menu-item>Level 1a</button>\n      <button mat-menu-item>Level 2b</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"level2\">Multi level</button>\n    </mat-menu>\n\n    <mat-menu\n      #level2=\"matMenu\"\n      [yPosition]=\"yPosition\"\n      [xPosition]=\"xPosition\"\n      [hasBackdrop]=\"hasBackdrop\"\n      [overlapTrigger]=\"overlapTrigger\"\n    >\n      <button mat-menu-item>Level 2a</button>\n      <button mat-menu-item>Level 2b</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"level3\">Level 2c</button>\n    </mat-menu>\n\n    <mat-menu\n      #level3=\"matMenu\"\n      [yPosition]=\"yPosition\"\n      [xPosition]=\"xPosition\"\n      [hasBackdrop]=\"hasBackdrop\"\n      [overlapTrigger]=\"overlapTrigger\"\n    >\n      <button mat-menu-item>Level 3a</button>\n      <button mat-menu-item>Level 3b</button>\n      <button mat-menu-item>Level 3c</button>\n    </mat-menu>\n  `,\n  styles: []\n})\nexport class MenuModule {\n  @Input() yPosition!: 'above' | 'below';\n  @Input() xPosition!: 'before' | 'after';\n  @Input() hasBackdrop!: boolean;\n  @Input() overlapTrigger!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProgressBarModule",
            "id": "component-ProgressBarModule-f421d2f4cc26ddc41c35e30cb75d01a68e981ada6f086df58d26edd45763fc93fbaf47584b8e294f5698241ad9850e52a7f028b3d42baa1b5f518d92ef2a9021",
            "file": "src/stories/components/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar",
            "styleUrls": [],
            "styles": [],
            "template": "    <sb-header title=\"Progress Bar\" matLink=\"components/progress-bar/api\" />\n<!--\n    <div class=\"mx-5\">\n      <mat-progress-bar [value]=\"34\"> </mat-progress-bar>\n    </div> -->\n\n    <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatProgressBarModule],\n  template: `\n    <sb-header title=\"Progress Bar\" matLink=\"components/progress-bar/api\" />\n<!-- \n    <div class=\"mx-5\">\n      <mat-progress-bar [value]=\"34\"> </mat-progress-bar>\n    </div> -->\n\n    <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\n  `\n})\nexport class ProgressBarModule {\n /*  @Input() value!: number; \n  @Input() color!: ThemePalette | 'default';\n  @Input() mode!: 'determinate' | 'indeterminate' | 'buffer' | 'query'; */\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProgressSpinnerModule",
            "id": "component-ProgressSpinnerModule-149d192834d19d898bae6d72418bd340a7e516856f63e93a6ca520c10e89dee8c401b59bcd98d1379f8035ce79a0046cca1a084a86e0fca8fd5d2d886acc88db",
            "file": "src/stories/components/progress-spinner/progress-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-spinner",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Progress Spinner\" matLink=\"components/progress-spinner/api\" />\n<div class=\"m-4\">\n  <mat-spinner [value]=\"value\" [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\" [color]=\"color\" [mode]=\"mode\"></mat-spinner>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "diameter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"determinate\" | \"indeterminate\"",
                    "decorators": []
                },
                {
                    "name": "strokeWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressSpinnerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-progress-spinner',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatProgressSpinnerModule],\n  template: `\n    <sb-header title=\"Progress Spinner\" matLink=\"components/progress-spinner/api\" />\n    <div class=\"m-4\">\n      <mat-spinner [value]=\"value\" [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\" [color]=\"color\" [mode]=\"mode\"></mat-spinner>\n    </div>\n  `,\n  styles: []\n})\nexport class ProgressSpinnerModule {\n  @Input() value!: number;\n  @Input() diameter!: number;\n  @Input() strokeWidth!: number;\n  @Input() color!: ThemePalette;\n  @Input() mode!: 'determinate' | 'indeterminate';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioButtonModule",
            "id": "component-RadioButtonModule-35acaeddd7e539627516ba27a5aff401574206f7a655f100e65e96443285cc1c4c2f211cdaf5f5b758be75cdee1cca94ccaa8274d4c902ee0c125c5124ba38b6",
            "file": "src/stories/forms/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio-button",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Radio Button\" matLink=\"components/radio/api\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-radio-button',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\n  template: ` <sb-header title=\"Radio Button\" matLink=\"components/radio/api\" /> `,\n  styles: []\n})\nexport class RadioButtonModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RipplesModule",
            "id": "component-RipplesModule-4a647e2ddd5c4c5f03869b0fde469cbba52a42052c09f96237142a1490f79bfc62e3ce2f9d96988fcfb716166b54aba6bbbceb0a2a5fd65d297257d50d7e0f4f",
            "file": "src/stories/helpers/ripples/ripples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ripples",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Ripples\" matLink=\"components/ripple/overview\" />\n<div class=\"mx-4\">\n  <mat-card\n    *ngIf=\"radius > 1; else noRadius\"\n    class=\"h-96 w-96 p-4\"\n    appearance=\"outlined\"\n\n    matRipple\n    [matRippleCentered]=\"centered\"\n    [matRippleColor]=\"color ? 'rgba(241,136,31,0.1)' : 'rgba(0,0,0,0.1)'\"\n    [matRippleDisabled]=\"disabled\"\n    [matRippleRadius]=\"radius\"\n    [matRippleUnbounded]=\"unbounded\"\n  >\n    [Set radius to 0 in order to view default ripple radius]<br />\n    lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n  </mat-card>\n\n  <ng-template #noRadius>\n    <mat-card\n      class=\"h-96 w-96 p-4\"\n      appearance=\"outlined\"\n      matRipple\n      [matRippleCentered]=\"centered\"\n      matRippleColor=\"rgba(241,136,31,0.2)\"\n      [matRippleDisabled]=\"disabled\"\n      [matRippleUnbounded]=\"unbounded\"\n    >\n      [Default ripple radius] <br />\n      lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n    </mat-card>\n  </ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "centered",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "radius",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "unbounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-ripples',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatCardModule, MatRippleModule],\n  template: `\n    <sb-header title=\"Ripples\" matLink=\"components/ripple/overview\" />\n    <div class=\"mx-4\">\n      <mat-card\n        *ngIf=\"radius > 1; else noRadius\"\n        class=\"h-96 w-96 p-4\"\n        appearance=\"outlined\"\n        \n        matRipple\n        [matRippleCentered]=\"centered\"\n        [matRippleColor]=\"color ? 'rgba(241,136,31,0.1)' : 'rgba(0,0,0,0.1)'\"\n        [matRippleDisabled]=\"disabled\"\n        [matRippleRadius]=\"radius\"\n        [matRippleUnbounded]=\"unbounded\"\n      >\n        [Set radius to 0 in order to view default ripple radius]<br />\n        lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n      </mat-card>\n\n      <ng-template #noRadius>\n        <mat-card\n          class=\"h-96 w-96 p-4\"\n          appearance=\"outlined\"\n          matRipple\n          [matRippleCentered]=\"centered\"\n          matRippleColor=\"rgba(241,136,31,0.2)\"\n          [matRippleDisabled]=\"disabled\"\n          [matRippleUnbounded]=\"unbounded\"\n        >\n          [Default ripple radius] <br />\n          lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n        </mat-card>\n      </ng-template>\n    </div>\n  `,\n  styles: []\n})\nexport class RipplesModule {\n  @Input() centered!: boolean;\n  @Input() disabled!: boolean;\n  @Input() unbounded!: boolean;\n  @Input() color!: boolean;\n  @Input() radius!: number;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SBHeaderModule",
            "id": "component-SBHeaderModule-de91dde34a31bc9302fbc125f86e0721c21cb85f5946110cb10319418dbe306a7c9f4c12b4afae183f2adbeb375e9ef026f41a47adf52e5b712107f9606e1d47",
            "file": "src/stories/assets/sb-header/sb-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-header",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        display: block;\n        width: 100%;\n        padding: 0 16px;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        margin-top: -20px;\n        margin-bottom: 14px;\n        display: block;\n      }\n    "
            ],
            "template": "<h2>{{ title }}</h2>\n<a *ngIf=\"matLink\" href=\"https://material.angular.io/{{ matLink }}\" target=\"_blank\"> Angular material documentation </a>\n\n<small *ngIf=\"clipboard\">CLICK TO COPY VALUE</small>\n<mat-divider></mat-divider>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "clipboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "BooleanInput",
                    "decorators": []
                },
                {
                    "name": "matLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 52,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_clipboard",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'sb-header',\n  standalone: true,\n  imports: [CommonModule, MatDividerModule],\n  styles: [\n    `\n      :host {\n        display: block;\n        width: 100%;\n        padding: 0 16px;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        margin-top: -20px;\n        margin-bottom: 14px;\n        display: block;\n      }\n    `\n  ],\n  template: `\n    <h2>{{ title }}</h2>\n    <a *ngIf=\"matLink\" href=\"https://material.angular.io/{{ matLink }}\" target=\"_blank\"> Angular material documentation </a>\n\n    <small *ngIf=\"clipboard\">CLICK TO COPY VALUE</small>\n    <mat-divider></mat-divider>\n  `\n})\nexport class SBHeaderModule {\n  @Input({ required: true }) title!: string;\n  @Input() matLink!: string;\n  @Input() set clipboard(value: BooleanInput) {\n    this._clipboard = coerceBooleanProperty(value);\n  }\n  get clipboard() {\n    return this._clipboard;\n  }\n  _clipboard = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        display: block;\n        width: 100%;\n        padding: 0 16px;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        margin-top: -20px;\n        margin-bottom: 14px;\n        display: block;\n      }\n    \n",
            "accessors": {
                "clipboard": {
                    "name": "clipboard",
                    "setSignature": {
                        "name": "clipboard",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 54,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "clipboard",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                }
            }
        },
        {
            "name": "SelectModule",
            "id": "component-SelectModule-708866201d4972600ed48761258531934230fc1f0e7c84429dd32dbf7aeb1ec871f94f5167c95b5012dac264ab5fc8020d9be3530e22d20b71efca7572e27a07",
            "file": "src/stories/forms/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Select\" matLink=\"components/select/api\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-select',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  template: ` <sb-header title=\"Select\" matLink=\"components/select/api\" /> `,\n  styles: []\n})\nexport class SelectModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SidenavModule",
            "id": "component-SidenavModule-39cf03f639edd6c004a9c256f44f933b628459b3bc62a6b3f958b75fb090288c9131e9f26d03150b25c40add0cb1fa35d3b6f98c5f70847c1f98fa7c02ef8c8f",
            "file": "src/stories/components/sidenav/sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidenav",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Sidenav\" matLink=\"components/sidenav/api\" />\n\n<mat-sidenav-container class=\"h-[400px] m-4\" [hasBackdrop]=\"hasBackdrop\">\n  <mat-sidenav #sidenav [mode]=\"mode\" [position]=\"position\" opened class=\"p-4\">Sidenav content</mat-sidenav>\n  <mat-sidenav-content class=\"p-4\">\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta itaque necessitatibus impedit labore aut! Iure labore nihil optio\n      facilis minus aliquid pariatur saepe nesciunt nemo perspiciatis. Nam, beatae consequatur! Est.\n    </p>\n    <button mat-raised-button (click)=\"sidenav.toggle()\">Toggle</button>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"over\" | \"push\" | \"side\"",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatSidenavModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-sidenav',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatSidenavModule, MatButtonModule],\n  template: `\n    <sb-header title=\"Sidenav\" matLink=\"components/sidenav/api\" />\n\n    <mat-sidenav-container class=\"h-[400px] m-4\" [hasBackdrop]=\"hasBackdrop\">\n      <mat-sidenav #sidenav [mode]=\"mode\" [position]=\"position\" opened class=\"p-4\">Sidenav content</mat-sidenav>\n      <mat-sidenav-content class=\"p-4\">\n        <p>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta itaque necessitatibus impedit labore aut! Iure labore nihil optio\n          facilis minus aliquid pariatur saepe nesciunt nemo perspiciatis. Nam, beatae consequatur! Est.\n        </p>\n        <button mat-raised-button (click)=\"sidenav.toggle()\">Toggle</button>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  `,\n  styles: []\n})\nexport class SidenavModule {\n  @Input() position!: 'start' | 'end';\n  @Input() mode!: 'over' | 'push' | 'side';\n  @Input() hasBackdrop!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SliderModule",
            "id": "component-SliderModule-286d887461f57794bd0dde35b8afd2255fa8d746aaeea56c8bf6092a0bd312d2bb6d79f8a33e7b36f8e97f3081ecaa8c62e0d3c1425d632cd888c9bed0543f17",
            "file": "src/stories/forms/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Slider\" matLink=\"slider\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@Component({\n  selector: 'app-slider',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTabsModule],\n  template: ` <sb-header title=\"Slider\" matLink=\"slider\" /> `,\n  styles: []\n})\nexport class SliderModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SlideToggleModule",
            "id": "component-SlideToggleModule-0eb73094698b0b1d5e82ab9a219f977797becc8d7086b2f958c2fce09216a553d6d462a50b0bf03dc95fc8eeb92b89f8e2d20fe2ba800e1074bfae09443ff172",
            "file": "src/stories/forms/slide-toggle/slide-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slide-toggle",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Slide Toggle\" matLink=\"slide-toggle\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-slide-toggle',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  template: ` <sb-header title=\"Slide Toggle\" matLink=\"slide-toggle\" /> `,\n  styles: []\n})\nexport class SlideToggleModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SnackbarModule",
            "id": "component-SnackbarModule-97360524862d49866d20921ffac73b764266134546033486311eba378433951d2258ef67271c6ea87f3d9e4afeb3c7a138f53ed7c1a17d8099f30e54be48a975",
            "file": "src/stories/components/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snackbar",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Snackbar\" matLink=\"components/snackbar/api\" />\n<button class=\"mx-4\" mat-stroked-button (click)=\"openSnackbar()\">[Open snackbar]</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hasAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "xPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"start\" | \"center\" | \"end\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "yPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openSnackbar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatSnackBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\n\n@Component({\n  selector: 'app-snackbar',\n  standalone: true,\n  imports: [MatButtonModule, SBHeaderModule, MatSnackBarModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Snackbar\" matLink=\"components/snackbar/api\" />\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openSnackbar()\">[Open snackbar]</button>\n  `\n})\nexport class SnackbarModule {\n  @Input() label!: string;\n  @Input() hasAction!: boolean;\n  @Input() duration!: number;\n  @Input() xPosition!: 'start' | 'center' | 'end' | 'left' | 'right';\n  @Input() yPosition!: 'top' | 'bottom';\n\n  constructor(private snackbar: MatSnackBar) {}\n\n  openSnackbar() {\n    this.snackbar.open(this.label, this.hasAction ? 'Action' : undefined, {\n      duration: this.duration ? this.duration : 5000,\n      verticalPosition: this.yPosition,\n      horizontalPosition: this.xPosition\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TableModule",
            "id": "component-TableModule-f5678a705f2e66ef8052b4417eb34a1c8af498caba26e44462dc641dc341ae08ac4e67a7458aa2145776649949a795ecac57cf0de56ca7a728fb2175bdb11e27",
            "file": "src/stories/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [
                "\n      .with-styles .mat-column-position {\n        width: 32px;\n        border-right: 1px solid #ccc;\n        padding-right: 24px;\n        text-align: center;\n      }\n      .with-styles .mat-column-name {\n        background: rgba(0, 0, 0, 0.02);\n      }\n      .with-styles .mat-column-weight {\n        font-weight: 700;\n      }\n      .with-styles .mat-column-symbol {\n        color: var(--mat-primary);\n        text-align: center;\n        width: 32px;\n      }\n    "
            ],
            "template": "<sb-header title=\"Table\" matLink=\"components/table/api\" />\n\n<div class=\"mx-4\">\n  <table mat-table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z1\" [class.with-styles]=\"hasStyles\">\n    <!--- Note that these columns can be defined in any order.\n    The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Weight</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Symbol</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.symbol }}</td>\n    </ng-container>\n\n    <!-- Disclaimer column -->\n    <ng-container matColumnDef=\"disclaimer\">\n      <td mat-footer-cell *matFooterCellDef colspan=\"4\" class=\"p-4\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic quisquam alias, tenetur cumque aliquam fugit doloribus maiores\n        eaque error minima commodi obcaecati esse? Quos odio, magnam eaque dolor eius accusantium!\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n    <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\"></tr>\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"4\">\n        <h1 class=\"p-4\">No data</h1>\n      </td>\n    </tr>\n  </table>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "clear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasStyles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource(ELEMENT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['position', 'name', 'weight', 'symbol']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n];\n\n@Component({\n  selector: 'app-table',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTableModule, MatSortModule],\n  styles: [\n    `\n      .with-styles .mat-column-position {\n        width: 32px;\n        border-right: 1px solid #ccc;\n        padding-right: 24px;\n        text-align: center;\n      }\n      .with-styles .mat-column-name {\n        background: rgba(0, 0, 0, 0.02);\n      }\n      .with-styles .mat-column-weight {\n        font-weight: 700;\n      }\n      .with-styles .mat-column-symbol {\n        color: var(--mat-primary);\n        text-align: center;\n        width: 32px;\n      }\n    `\n  ],\n  template: `\n    <sb-header title=\"Table\" matLink=\"components/table/api\" />\n\n    <div class=\"mx-4\">\n      <table mat-table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z1\" [class.with-styles]=\"hasStyles\">\n        <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\" sticky>\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"weight\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Weight</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Symbol</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.symbol }}</td>\n        </ng-container>\n\n        <!-- Disclaimer column -->\n        <ng-container matColumnDef=\"disclaimer\">\n          <td mat-footer-cell *matFooterCellDef colspan=\"4\" class=\"p-4\">\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic quisquam alias, tenetur cumque aliquam fugit doloribus maiores\n            eaque error minima commodi obcaecati esse? Quos odio, magnam eaque dolor eius accusantium!\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n        <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\"></tr>\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"4\">\n            <h1 class=\"p-4\">No data</h1>\n          </td>\n        </tr>\n      </table>\n    </div>\n  `\n})\nexport class TableModule implements AfterViewInit {\n  @ViewChild(MatSort) sort!: MatSort;\n  @Input() hasStyles!: boolean;\n  @Input() set clear(value: boolean) {\n    if (value) {\n      this.dataSource.data = [];\n      return;\n    }\n\n    this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n  }\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .with-styles .mat-column-position {\n        width: 32px;\n        border-right: 1px solid #ccc;\n        padding-right: 24px;\n        text-align: center;\n      }\n      .with-styles .mat-column-name {\n        background: rgba(0, 0, 0, 0.02);\n      }\n      .with-styles .mat-column-weight {\n        font-weight: 700;\n      }\n      .with-styles .mat-column-symbol {\n        color: var(--mat-primary);\n        text-align: center;\n        width: 32px;\n      }\n    \n",
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "clear": {
                    "name": "clear",
                    "setSignature": {
                        "name": "clear",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 108,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "TabsModule",
            "id": "component-TabsModule-b10f863d341760c60a88af41b2a6322a09ffd9a0eae173f42d3828caa635164bee8c23f48363c4aece4b7e6a72e8f3d3040fce15efe502d4da16f7229b435545",
            "file": "src/stories/components/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Tabs\" matLink=\"components/tabs/api\" />\n\n<div class=\"p-4\">\n  <mat-tab-group\n    [color]=\"color\"\n    [animationDuration]=\"duration\"\n    [fitInkBarToContent]=\"fitInkBarToContent\"\n    [headerPosition]=\"headerPosition\"\n    [mat-stretch-tabs]=\"stretch\"\n    [backgroundColor]=\"backgroundColor\"\n    [color]=\"color\"\n  >\n    <mat-tab label=\"First\">\n      <p class=\"p-4\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n        praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </p>\n    </mat-tab>\n    <mat-tab label=\"Second\">\n      <p class=\"p-4\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n        praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </p>\n    </mat-tab>\n    <mat-tab label=\"Third\">\n      <p class=\"p-4\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n        praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </p>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "fitInkBarToContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "headerPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "\"below\" | \"above\"",
                    "decorators": []
                },
                {
                    "name": "stretch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@Component({\n  selector: 'app-tabs',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTabsModule],\n  template: `\n    <sb-header title=\"Tabs\" matLink=\"components/tabs/api\" />\n\n    <div class=\"p-4\">\n      <mat-tab-group\n        [color]=\"color\"\n        [animationDuration]=\"duration\"\n        [fitInkBarToContent]=\"fitInkBarToContent\"\n        [headerPosition]=\"headerPosition\"\n        [mat-stretch-tabs]=\"stretch\"\n        [backgroundColor]=\"backgroundColor\"\n        [color]=\"color\"\n      >\n        <mat-tab label=\"First\">\n          <p class=\"p-4\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n            praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n          </p>\n        </mat-tab>\n        <mat-tab label=\"Second\">\n          <p class=\"p-4\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n            praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n          </p>\n        </mat-tab>\n        <mat-tab label=\"Third\">\n          <p class=\"p-4\">\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n            praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n          </p>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n  `,\n  styles: []\n})\nexport class TabsModule {\n  @Input() color!: ThemePalette;\n  @Input() backgroundColor!: ThemePalette;\n  @Input() stretch!: boolean;\n  @Input() duration!: number;\n  @Input() align!: boolean;\n  @Input() fitInkBarToContent!: boolean;\n  @Input() headerPosition!: 'below' | 'above';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextareaModule",
            "id": "component-TextareaModule-faf9d5dbda0d344a1a29c34411f0788ac5f3f40cc99932d7098c04134b87b5bb278436b3f97053cdd09ab5de6fca99d28af8c58e5d229e54c19c89cd05c249f8",
            "file": "src/stories/forms/textarea/textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Textarea\" matLink=\"textarea\" />\n\n<mat-form-field>\n  <mat-label>Textarea</mat-label>\n  <textarea matInput [cdkTextareaAutosize]=\"autoResize\" [cdkAutosizeMinRows]=\"minRows\" [cdkAutosizeMaxRows]=\"maxRows\"></textarea>\n</mat-form-field>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autoResize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-textarea',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatInputModule, MatFormFieldModule],\n  template: `\n    <sb-header title=\"Textarea\" matLink=\"textarea\" />\n\n    <mat-form-field>\n      <mat-label>Textarea</mat-label>\n      <textarea matInput [cdkTextareaAutosize]=\"autoResize\" [cdkAutosizeMinRows]=\"minRows\" [cdkAutosizeMaxRows]=\"maxRows\"></textarea>\n    </mat-form-field>\n  `,\n  styles: []\n})\nexport class TextareaModule {\n  @Input() minRows!: number;\n  @Input() maxRows!: number;\n  @Input() autoResize!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ToolbarModule",
            "id": "component-ToolbarModule-fb933ed71e15f1273812858cd4b794a84a62d562c4574edf6edc1253f666bb5f4e929d10e4247a23dd855247945bd0071880a08fc9e4514f61db9a2dfbe2a4cb",
            "file": "src/stories/components/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Toolbar\" matLink=\"components/toolbar/api\" />\n\n<div class=\"mx-5\">\n  <mat-toolbar [color]=\"color\">\n    <span>[Left]</span>\n    <span class=\"flex-auto\"></span>\n    <span>[Right]</span>\n  </mat-toolbar>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatToolbarModule],\n  template: `\n    <sb-header title=\"Toolbar\" matLink=\"components/toolbar/api\" />\n\n    <div class=\"mx-5\">\n      <mat-toolbar [color]=\"color\">\n        <span>[Left]</span>\n        <span class=\"flex-auto\"></span>\n        <span>[Right]</span>\n      </mat-toolbar>\n    </div>\n  `,\n  styles: []\n})\nexport class ToolbarModule {\n  @Input() color!: ThemePalette | 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TooltipModule",
            "id": "component-TooltipModule-cf3101c8346c6d100bc33623431966b4f6028e940ff3155a738efe3b76780a02c8bba6f4c9ba546dfeed2b14293f9aeea9a789d3b56f71a71569d084e3ffd133",
            "file": "src/stories/components/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Tooltip\" matLink=\"components/tooltip/api\" />\n\n<div class=\"mx-4\">\n  <button\n    mat-raised-button\n    matTooltip=\"Lorem ipsum dolor\"\n    [matTooltipDisabled]=\"disabled\"\n    [matTooltipHideDelay]=\"hideDelay\"\n    [matTooltipPosition]=\"position\"\n  >\n    [Hover]\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideDelay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"left\" | \"right\" | \"above\" | \"below\" | \"before\" | \"after\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-tooltip',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTooltipModule, MatButtonModule],\n  template: `\n    <sb-header title=\"Tooltip\" matLink=\"components/tooltip/api\" />\n\n    <div class=\"mx-4\">\n      <button\n        mat-raised-button\n        matTooltip=\"Lorem ipsum dolor\"\n        [matTooltipDisabled]=\"disabled\"\n        [matTooltipHideDelay]=\"hideDelay\"\n        [matTooltipPosition]=\"position\"\n      >\n        [Hover]\n      </button>\n    </div>\n  `,\n  styles: []\n})\nexport class TooltipModule {\n  @Input() disabled!: boolean;\n  @Input() hideDelay!: number;\n  @Input() position!: 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TypographyModule",
            "id": "component-TypographyModule-1457b4ecd86cbd647ce6cf755b4276e449e29dd8961413bba6de1cac5c94e1baeabc7c5711c4d7f40abc28b7f8de53dcdda3ee3d203c45df0ce799779987998e",
            "file": "src/stories/theme/typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Typography\" />\n\n<div class=\"mx-4\">\n  <h1 class=\"text-{{ color }}\">[h1] abcdefghijklmnopqrstuvwxyz</h1>\n  <h2 class=\"text-{{ color }}\">[h2] abcdefghijklmnopqrstuvwxyz</h2>\n  <h3 class=\"text-{{ color }}\">[h3] abcdefghijklmnopqrstuvwxyz</h3>\n  <h4 class=\"text-{{ color }}\">[h4] abcdefghijklmnopqrstuvwxyz</h4>\n  <h5 class=\"text-{{ color }}\">[h5] abcdefghijklmnopqrstuvwxyz</h5>\n  <h6 class=\"text-{{ color }}\">[h6] abcdefghijklmnopqrstuvwxyz</h6>\n\n  <p class=\"text-{{ color }}\">\n    [p] abcdefghijklmnopqrstuvwxyz Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, aspernatur excepturi nostrum\n    pariatur quam natus dicta exercitationem vel consectetur, culpa inventore adipisci numquam eum deserunt ipsa iure ad, corporis\n    explicabo?\n  </p>\n\n  <label class=\"text-{{ color }}\">[label] abcdefghijklmnopqrstuvwxyz</label>\n  <br />\n  <small class=\"text-{{ color }}\">[small] abcdefghijklmnopqrstuvwxyz</small>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-typography',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Typography\" />\n\n    <div class=\"mx-4\">\n      <h1 class=\"text-{{ color }}\">[h1] abcdefghijklmnopqrstuvwxyz</h1>\n      <h2 class=\"text-{{ color }}\">[h2] abcdefghijklmnopqrstuvwxyz</h2>\n      <h3 class=\"text-{{ color }}\">[h3] abcdefghijklmnopqrstuvwxyz</h3>\n      <h4 class=\"text-{{ color }}\">[h4] abcdefghijklmnopqrstuvwxyz</h4>\n      <h5 class=\"text-{{ color }}\">[h5] abcdefghijklmnopqrstuvwxyz</h5>\n      <h6 class=\"text-{{ color }}\">[h6] abcdefghijklmnopqrstuvwxyz</h6>\n\n      <p class=\"text-{{ color }}\">\n        [p] abcdefghijklmnopqrstuvwxyz Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, aspernatur excepturi nostrum\n        pariatur quam natus dicta exercitationem vel consectetur, culpa inventore adipisci numquam eum deserunt ipsa iure ad, corporis\n        explicabo?\n      </p>\n\n      <label class=\"text-{{ color }}\">[label] abcdefghijklmnopqrstuvwxyz</label>\n      <br />\n      <small class=\"text-{{ color }}\">[small] abcdefghijklmnopqrstuvwxyz</small>\n    </div>\n  `\n})\nexport class TypographyModule {\n  @Input() color!: ThemePalette | 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a5ab16d5fdd77ae5761eed0d9bb59ff3cd28a70ea40be79c4aaaff027b46791619245c0742b5483a46ce34b29eba54714c32a5fc7c097e7470617ce6e2696a26",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, AppRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-19f9b93b406581c4eeba9376fbdda8417c0f9120be46945392e67eab7f7120b1cd9a3eb39a618425296417a896bb7b806ab3a2097d6e4e3ea5079ede7ba39406",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<CheckboxModule>",
                "defaultValue": "{\n  stacked: false,\n  indeterminate: false,\n  color: 'default',\n  labelPosition: 'after'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<AutocompleteModule>",
                "defaultValue": "{\n  autoActiveFirstOption: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<FormFieldModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DatePickerModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<RadioButtonModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SelectModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SlideToggleModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SliderModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TextareaModule>",
                "defaultValue": "{\n  minRows: 1,\n  maxRows: 5,\n  autoResize: true\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<BadgeModule>",
                "defaultValue": "{\n  label: '0',\n  color: 'primary',\n  size: 'medium',\n  position: 'above after',\n  disabled: false,\n  overlap: false,\n  hidden: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<BottomSheetModule>",
                "defaultValue": "{\n  hasBackdrop: true\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ButtonModule>",
                "defaultValue": "{\n  label: '[Button]',\n  disabled: false,\n  color: 'default',\n  type: 'default'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<CardModule>",
                "defaultValue": "{\n  title: true,\n  subtitle: true,\n  content: true,\n  actions: true,\n  footer: true,\n  avatar: true,\n  image: true,\n  media: true,\n  mediaSize: 'md',\n  align: 'start',\n  appearance: 'outlined'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ChipsModule>",
                "defaultValue": "{\n  color: 'default',\n  hideSingle: false,\n  multiple: true,\n  selectable: true,\n  highlighted: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DividerModule>",
                "defaultValue": "{\n  inset: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ExpansionModule>",
                "defaultValue": "{\n  toggle: true,\n  description: true,\n  disabled: false,\n  multi: false,\n  expanded: false,\n  displayMode: 'default',\n  togglePosition: 'before'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<MenuModule>",
                "defaultValue": "{\n  yPosition: 'below',\n  xPosition: 'after',\n  hasBackdrop: true,\n  overlapTrigger: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ProgressBarModule>",
                "defaultValue": "{\n  /*  value: 50,\n  buffer: 75,\n  color: 'default',\n  mode: 'determinate' */\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ProgressSpinnerModule>",
                "defaultValue": "{\n  value: 50,\n  diameter: 100,\n  strokeWidth: 10,\n  mode: 'determinate',\n  color: 'primary'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SidenavModule>",
                "defaultValue": "{\n  position: 'start',\n  mode: 'over',\n  hasBackdrop: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SnackbarModule>",
                "defaultValue": "{\n  label: 'Lorem ipsum dolor.',\n  xPosition: 'center',\n  yPosition: 'bottom',\n  duration: 5000,\n  hasAction: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TableModule>",
                "defaultValue": "{\n  hasStyles: false,\n  clear: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TabsModule>",
                "defaultValue": "{\n  color: 'primary',\n  backgroundColor: 'primary',\n  stretch: true,\n  duration: 100,\n  align: true,\n  fitInkBarToContent: true,\n  headerPosition: 'below'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ToolbarModule>",
                "defaultValue": "{\n  color: 'default'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TooltipModule>",
                "defaultValue": "{\n  disabled: false,\n  hideDelay: 0,\n  position: 'right'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ColorsModule>",
                "defaultValue": "{\n  color: 'primary'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TypographyModule>",
                "defaultValue": "{\n  color: 'default'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ElevationModule>",
                "defaultValue": "{\n  elevation: 12\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<GridModule>",
                "defaultValue": "{\n  cols: 5,\n  colOne: 2,\n  rowOne: 1,\n  colTwo: 1,\n  rowTwo: 2,\n  colThree: 1,\n  rowThree: 1,\n  colFour: 2,\n  rowFour: 1\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<RipplesModule>",
                "defaultValue": "{\n  centered: false,\n  disabled: false,\n  unbounded: false,\n  color: false,\n  radius: 0\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<CheckboxModule>",
                "defaultValue": "{\n  stacked: { control: { type: 'boolean' }, name: 'Stacked' },\n  indeterminate: { control: { type: 'boolean' }, name: 'Stacked' },\n  labelPosition: {\n    options: ['after', 'before'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<AutocompleteModule>",
                "defaultValue": "{\n  autoActiveFirstOption: { control: { type: 'boolean' }, name: 'Disabled' },\n  _filter: { table: { disable: true } },\n  ngOnInit: { table: { disable: true } },\n  options: { table: { disable: true } },\n  myControl: { table: { disable: true } },\n  filteredOptions: { table: { disable: true } }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<FormFieldModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<DatePickerModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<RadioButtonModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SelectModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SlideToggleModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SliderModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TextareaModule>",
                "defaultValue": "{\n  minRows: { control: { type: 'range', max: '20', min: 1 }, name: 'Min rows' },\n  maxRows: { control: { type: 'range', max: '20', min: 1 }, name: 'Max rows' },\n  autoResize: { control: { type: 'boolean' }, name: 'Auto resize' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<BadgeModule>",
                "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  size: {\n    options: ['small', 'medium', 'large'],\n    control: { type: 'radio' },\n    name: 'Size'\n  },\n  position: {\n    options: ['above after', 'above before', 'below before', 'below after', 'before', 'after', 'above', 'below'],\n    control: { type: 'select' },\n    name: 'Position'\n  },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  overlap: { control: { type: 'boolean' }, name: 'Overlay' },\n  hidden: { control: { type: 'boolean' }, name: 'Hidden' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<BottomSheetModule>",
                "defaultValue": "{\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Backdrop' },\n  openBottomSheet: { table: { disable: true } },\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ButtonModule>",
                "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  type: {\n    options: ['default', 'flat', 'stroked', 'raised'],\n    control: { type: 'radio' },\n    name: 'Button type'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<CardModule>",
                "defaultValue": "{\n  title: { control: { type: 'boolean' }, name: 'Has title' },\n  subtitle: { control: { type: 'boolean' }, name: 'Has subtitle' },\n  content: { control: { type: 'boolean' }, name: 'Has content' },\n  actions: { control: { type: 'boolean' }, name: 'Has actions' },\n  footer: { control: { type: 'boolean' }, name: 'Has footer' },\n  avatar: { control: { type: 'boolean' }, name: 'Has avatar' },\n  image: { control: { type: 'boolean' }, name: 'Has image' },\n  media: { control: { type: 'boolean' }, name: 'Has media' },\n  mediaSize: {\n    options: ['xl', 'lg', 'md', 'sm'],\n    control: { type: 'radio' },\n    name: 'Media size'\n  },\n  align: {\n    options: ['start', 'end'],\n    control: { type: 'radio' },\n    name: 'Align actions'\n  },\n  appearance: {\n    options: ['outlined', 'raised'],\n    control: { type: 'radio' },\n    name: 'Appearance'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ChipsModule>",
                "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  hideSingle: { control: { type: 'boolean' }, name: 'Hide Single Selection Indicator' },\n  multiple: { control: { type: 'boolean' }, name: 'Select Multiple' },\n  selectable: { control: { type: 'boolean' }, name: 'Selectable' },\n  highlighted: { control: { type: 'boolean' }, name: 'Highlighted' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<DividerModule>",
                "defaultValue": "{\n  inset: { control: { type: 'boolean' }, name: 'Inset' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ExpansionModule>",
                "defaultValue": "{\n  toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\n  description: { control: { type: 'boolean' }, name: 'Has description' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  multi: { control: { type: 'boolean' }, name: 'Open more than one panel' },\n  expanded: { control: { type: 'boolean' }, name: 'Expand' },\n  displayMode: {\n    options: ['default', 'flat'],\n    control: { type: 'radio' },\n    name: 'Display mode'\n  },\n  togglePosition: {\n    options: ['before', 'after'],\n    control: { type: 'radio' },\n    name: 'Toggle position'\n  },\n  opened: { action: 'opened', table: { disable: true } },\n  closed: { action: 'closed', table: { disable: true } }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<MenuModule>",
                "defaultValue": "{\n  yPosition: {\n    options: ['above', 'below'],\n    control: { type: 'radio' },\n    name: 'Y position'\n  },\n  xPosition: {\n    options: ['before', 'after'],\n    control: { type: 'radio' },\n    name: 'X position'\n  },\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' },\n  overlapTrigger: { control: { type: 'boolean' }, name: 'Overlap trigger' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ProgressBarModule>",
                "defaultValue": "{\n  /* value: { control: { type: 'range', min: 0, max: 100 }, name: 'Value' },\n  buffer: { control: { type: 'range', min: 0, max: 100 }, name: 'Buffer' },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  mode: {\n    options: ['determinate', 'indeterminate', 'buffer', 'query'],\n    control: { type: 'radio' },\n    name: 'Mode'\n  } */\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ProgressSpinnerModule>",
                "defaultValue": "{\n  value: { control: { type: 'range', max: '100', min: 10 }, name: 'Value' },\n  diameter: { control: { type: 'range', max: '400', min: 70 }, name: 'Diameter' },\n  strokeWidth: { control: { type: 'range', max: '20', min: 1 }, name: 'Stroke width' },\n  mode: {\n    options: ['determinate', 'indeterminate'],\n    control: { type: 'radio' },\n    name: 'Mode'\n  },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SidenavModule>",
                "defaultValue": "{\n  position: {\n    options: ['start', 'end'],\n    control: { type: 'radio' },\n    name: 'Position'\n  },\n  mode: {\n    options: ['over', 'push', 'side'],\n    control: { type: 'radio' },\n    name: 'Mode'\n  },\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SnackbarModule>",
                "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  hasAction: { control: { type: 'boolean' }, name: 'Has action' },\n  duration: { control: { type: 'range', step: 1000, min: 1000, max: 10000 }, name: 'Duration' },\n  xPosition: {\n    options: ['start', 'center', 'end', 'left', 'right'],\n    control: { type: 'radio' },\n    name: 'X position'\n  },\n  yPosition: {\n    options: ['top', 'bottom'],\n    control: { type: 'radio' },\n    name: 'Y position'\n  },\n  openSnackbar: { table: { disable: true } }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TableModule>",
                "defaultValue": "{\n  hasStyles: { control: { type: 'boolean' }, name: 'Has styles' },\n  clear: { control: { type: 'boolean' }, name: 'Clear data' },\n  displayedColumns: { table: { disable: true } },\n  dataSource: { table: { disable: true } },\n  ngAfterViewInit: { table: { disable: true } },\n  sort: { table: { disable: true } }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TabsModule>",
                "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  backgroundColor: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Background color'\n  },\n  stretch: { control: { type: 'boolean' }, name: 'Stretch' },\n  duration: { control: { type: 'range', step: 100, max: 1000 }, name: 'Animation duration' },\n  align: { control: { type: 'boolean' }, name: 'Align' },\n  fitInkBarToContent: { control: { type: 'boolean' }, name: 'Fit ink bar to content' },\n  headerPosition: { control: { type: 'select', options: ['below', 'above'] }, name: 'Header position' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ToolbarModule>",
                "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TooltipModule>",
                "defaultValue": "{\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  hideDelay: { control: { type: 'range', step: 500, min: 0, max: 5000 }, name: 'Hide delay' },\n  position: { control: { type: 'select', options: ['left', 'right', 'above', 'below', 'before', 'after'] }, name: 'Position' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ColorsModule>",
                "defaultValue": "{\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TypographyModule>",
                "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ElevationModule>",
                "defaultValue": "{\n  elevation: { control: { type: 'range', max: 24, min: 0 }, name: 'Elevation' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ClipModule>",
                "defaultValue": "{\n  text: { table: { disable: true } },\n  textValue: { table: { disable: true } },\n  textCopy: { table: { disable: true } },\n  copied: { table: { disable: true } }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<GridModule>",
                "defaultValue": "{\n  tiles: { table: { disable: true } },\n  ngOnInit: { table: { disable: true } },\n  cols: { control: { type: 'range', max: 5, min: 1 }, name: 'Columns' },\n  colOne: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 1' },\n  rowOne: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 1' },\n  colTwo: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 2' },\n  rowTwo: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 2' },\n  colThree: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 3' },\n  rowThree: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 3' },\n  colFour: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 4' },\n  rowFour: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 4' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<RipplesModule>",
                "defaultValue": "{\n  centered: { control: { type: 'boolean' }, name: 'Centered' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  unbounded: { control: { type: 'boolean' }, name: 'Unbounded' },\n  color: { control: { type: 'boolean' }, name: 'Color (rgba)' },\n  radius: { control: { type: 'range', max: 400, min: 0 }, name: 'Radius' }\n}"
            },
            {
                "name": "Autocomplete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Badge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "BottomSheet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Chips",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Clipboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "DatePicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Divider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n]"
            },
            {
                "name": "Elevation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Expansion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "FormField",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Grid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxModule>",
                "defaultValue": "{\n  title: 'forms/Checkbox',\n  component: CheckboxModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AutocompleteModule>",
                "defaultValue": "{\n  title: 'Forms/Autocomplete',\n  component: AutocompleteModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormFieldModule>",
                "defaultValue": "{\n  title: 'Forms/Form Field',\n  component: FormFieldModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerModule>",
                "defaultValue": "{\n  title: 'Forms/Date Picker',\n  component: DatePickerModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioButtonModule>",
                "defaultValue": "{\n  title: 'Forms/Radio Button',\n  component: RadioButtonModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectModule>",
                "defaultValue": "{\n  title: 'Forms/Select',\n  component: SelectModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SlideToggleModule>",
                "defaultValue": "{\n  title: 'Forms/Slide Toggle',\n  component: SlideToggleModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SliderModule>",
                "defaultValue": "{\n  title: 'Forms/Slider',\n  component: SliderModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaModule>",
                "defaultValue": "{\n  title: 'Forms/Textarea',\n  component: TextareaModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeModule>",
                "defaultValue": "{\n  title: 'Components/Badge',\n  component: BadgeModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BottomSheetModule>",
                "defaultValue": "{\n  title: 'Components/Bottom Sheet',\n  component: BottomSheetModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonModule>",
                "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonModule,\n  parameters: {\n    options: { showPanel: true }\n  },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardModule>",
                "defaultValue": "{\n  title: 'Components/Card',\n  component: CardModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChipsModule>",
                "defaultValue": "{\n  title: 'Components/Chips',\n  component: ChipsModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DividerModule>",
                "defaultValue": "{\n  title: 'Components/Divider',\n  component: DividerModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ExpansionModule>",
                "defaultValue": "{\n  title: 'Components/Expansion',\n  component: ExpansionModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuModule>",
                "defaultValue": "{\n  title: 'Components/Menu',\n  component: MenuModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressBarModule>",
                "defaultValue": "{\n  title: 'Components/Progress Bar',\n  component: ProgressBarModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /*  argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressSpinnerModule>",
                "defaultValue": "{\n  title: 'Components/Progress Spinner',\n  component: ProgressSpinnerModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SidenavModule>",
                "defaultValue": "{\n  title: 'Components/Sidenav',\n  component: SidenavModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SnackbarModule>",
                "defaultValue": "{\n  title: 'Components/Snackbar',\n  component: SnackbarModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableModule>",
                "defaultValue": "{\n  title: 'Components/Table',\n  component: TableModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabsModule>",
                "defaultValue": "{\n  title: 'Components/Tabs',\n  component: TabsModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToolbarModule>",
                "defaultValue": "{\n  title: 'Components/Toolbar',\n  component: ToolbarModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipModule>",
                "defaultValue": "{\n  title: 'Components/Tooltip',\n  component: TooltipModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorsModule>",
                "defaultValue": "{\n  title: 'Theme/Colors',\n  component: ColorsModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TypographyModule>",
                "defaultValue": "{\n  title: 'Theme/Typography',\n  component: TypographyModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ElevationModule>",
                "defaultValue": "{\n  title: 'Helpers/Elevation',\n  component: ElevationModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ClipModule>",
                "defaultValue": "{\n  title: 'Helpers/Clipboard',\n  component: ClipModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<GridModule>",
                "defaultValue": "{\n  title: 'Helpers/Grid',\n  component: GridModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RipplesModule>",
                "defaultValue": "{\n  title: 'Helpers/Ripples',\n  component: RipplesModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    }\n  }\n}"
            },
            {
                "name": "ProgressBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "ProgressSpinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "RadioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Ripples",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Sidenav",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Slider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "SlideToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Snackbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Tabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Toolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxModule>",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AutocompleteModule>",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormFieldModule>",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerModule>",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioButtonModule>",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectModule>",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SlideToggleModule>",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SliderModule>",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaModule>",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeModule>",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BottomSheetModule>",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonModule>",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardModule>",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChipsModule>",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DividerModule>",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ExpansionModule>",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuModule>",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressBarModule>",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressSpinnerModule>",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SidenavModule>",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SnackbarModule>",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableModule>",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsModule>",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToolbarModule>",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipModule>",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorsModule>",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TypographyModule>",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ElevationModule>",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ClipModule>",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<GridModule>",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RipplesModule>",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/forms/checkbox/checkbox.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CheckboxModule>",
                    "defaultValue": "{\n  stacked: false,\n  indeterminate: false,\n  color: 'default',\n  labelPosition: 'after'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<CheckboxModule>",
                    "defaultValue": "{\n  stacked: { control: { type: 'boolean' }, name: 'Stacked' },\n  indeterminate: { control: { type: 'boolean' }, name: 'Stacked' },\n  labelPosition: {\n    options: ['after', 'before'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
                },
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxModule>",
                    "defaultValue": "{\n  title: 'forms/Checkbox',\n  component: CheckboxModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/forms/autocomplete/autocomplete.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<AutocompleteModule>",
                    "defaultValue": "{\n  autoActiveFirstOption: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<AutocompleteModule>",
                    "defaultValue": "{\n  autoActiveFirstOption: { control: { type: 'boolean' }, name: 'Disabled' },\n  _filter: { table: { disable: true } },\n  ngOnInit: { table: { disable: true } },\n  options: { table: { disable: true } },\n  myControl: { table: { disable: true } },\n  filteredOptions: { table: { disable: true } }\n}"
                },
                {
                    "name": "Autocomplete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AutocompleteModule>",
                    "defaultValue": "{\n  title: 'Forms/Autocomplete',\n  component: AutocompleteModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/forms/form-field/form-field.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<FormFieldModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<FormFieldModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "FormField",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormFieldModule>",
                    "defaultValue": "{\n  title: 'Forms/Form Field',\n  component: FormFieldModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/forms/date-picker/date-picker.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DatePickerModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<DatePickerModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "DatePicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerModule>",
                    "defaultValue": "{\n  title: 'Forms/Date Picker',\n  component: DatePickerModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                }
            ],
            "src/stories/forms/radio-button/radio-button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<RadioButtonModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<RadioButtonModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioButtonModule>",
                    "defaultValue": "{\n  title: 'Forms/Radio Button',\n  component: RadioButtonModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "RadioButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/forms/select/select.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SelectModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SelectModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectModule>",
                    "defaultValue": "{\n  title: 'Forms/Select',\n  component: SelectModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/forms/slide-toggle/slide-toggle.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SlideToggleModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SlideToggleModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SlideToggleModule>",
                    "defaultValue": "{\n  title: 'Forms/Slide Toggle',\n  component: SlideToggleModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "SlideToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/forms/slider/slider.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SliderModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SliderModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SliderModule>",
                    "defaultValue": "{\n  title: 'Forms/Slider',\n  component: SliderModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "Slider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/forms/textarea/textarea.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TextareaModule>",
                    "defaultValue": "{\n  minRows: 1,\n  maxRows: 5,\n  autoResize: true\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TextareaModule>",
                    "defaultValue": "{\n  minRows: { control: { type: 'range', max: '20', min: 1 }, name: 'Min rows' },\n  maxRows: { control: { type: 'range', max: '20', min: 1 }, name: 'Max rows' },\n  autoResize: { control: { type: 'boolean' }, name: 'Auto resize' }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaModule>",
                    "defaultValue": "{\n  title: 'Forms/Textarea',\n  component: TextareaModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "Textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/components/badge/badge.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<BadgeModule>",
                    "defaultValue": "{\n  label: '0',\n  color: 'primary',\n  size: 'medium',\n  position: 'above after',\n  disabled: false,\n  overlap: false,\n  hidden: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<BadgeModule>",
                    "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  size: {\n    options: ['small', 'medium', 'large'],\n    control: { type: 'radio' },\n    name: 'Size'\n  },\n  position: {\n    options: ['above after', 'above before', 'below before', 'below after', 'before', 'after', 'above', 'below'],\n    control: { type: 'select' },\n    name: 'Position'\n  },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  overlap: { control: { type: 'boolean' }, name: 'Overlay' },\n  hidden: { control: { type: 'boolean' }, name: 'Hidden' }\n}"
                },
                {
                    "name": "Badge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeModule>",
                    "defaultValue": "{\n  title: 'Components/Badge',\n  component: BadgeModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/bottom-sheet/bottom-sheet.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<BottomSheetModule>",
                    "defaultValue": "{\n  hasBackdrop: true\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<BottomSheetModule>",
                    "defaultValue": "{\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Backdrop' },\n  openBottomSheet: { table: { disable: true } },\n}"
                },
                {
                    "name": "BottomSheet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BottomSheetModule>",
                    "defaultValue": "{\n  title: 'Components/Bottom Sheet',\n  component: BottomSheetModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/button/button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ButtonModule>",
                    "defaultValue": "{\n  label: '[Button]',\n  disabled: false,\n  color: 'default',\n  type: 'default'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ButtonModule>",
                    "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  type: {\n    options: ['default', 'flat', 'stroked', 'raised'],\n    control: { type: 'radio' },\n    name: 'Button type'\n  }\n}"
                },
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonModule>",
                    "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonModule,\n  parameters: {\n    options: { showPanel: true }\n  },\n  argTypes\n}"
                }
            ],
            "src/stories/components/card/card.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CardModule>",
                    "defaultValue": "{\n  title: true,\n  subtitle: true,\n  content: true,\n  actions: true,\n  footer: true,\n  avatar: true,\n  image: true,\n  media: true,\n  mediaSize: 'md',\n  align: 'start',\n  appearance: 'outlined'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<CardModule>",
                    "defaultValue": "{\n  title: { control: { type: 'boolean' }, name: 'Has title' },\n  subtitle: { control: { type: 'boolean' }, name: 'Has subtitle' },\n  content: { control: { type: 'boolean' }, name: 'Has content' },\n  actions: { control: { type: 'boolean' }, name: 'Has actions' },\n  footer: { control: { type: 'boolean' }, name: 'Has footer' },\n  avatar: { control: { type: 'boolean' }, name: 'Has avatar' },\n  image: { control: { type: 'boolean' }, name: 'Has image' },\n  media: { control: { type: 'boolean' }, name: 'Has media' },\n  mediaSize: {\n    options: ['xl', 'lg', 'md', 'sm'],\n    control: { type: 'radio' },\n    name: 'Media size'\n  },\n  align: {\n    options: ['start', 'end'],\n    control: { type: 'radio' },\n    name: 'Align actions'\n  },\n  appearance: {\n    options: ['outlined', 'raised'],\n    control: { type: 'radio' },\n    name: 'Appearance'\n  }\n}"
                },
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardModule>",
                    "defaultValue": "{\n  title: 'Components/Card',\n  component: CardModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/chips/chips.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChipsModule>",
                    "defaultValue": "{\n  color: 'default',\n  hideSingle: false,\n  multiple: true,\n  selectable: true,\n  highlighted: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ChipsModule>",
                    "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  hideSingle: { control: { type: 'boolean' }, name: 'Hide Single Selection Indicator' },\n  multiple: { control: { type: 'boolean' }, name: 'Select Multiple' },\n  selectable: { control: { type: 'boolean' }, name: 'Selectable' },\n  highlighted: { control: { type: 'boolean' }, name: 'Highlighted' }\n}"
                },
                {
                    "name": "Chips",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChipsModule>",
                    "defaultValue": "{\n  title: 'Components/Chips',\n  component: ChipsModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                }
            ],
            "src/stories/components/divider/divider.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DividerModule>",
                    "defaultValue": "{\n  inset: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<DividerModule>",
                    "defaultValue": "{\n  inset: { control: { type: 'boolean' }, name: 'Inset' }\n}"
                },
                {
                    "name": "Divider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DividerModule>",
                    "defaultValue": "{\n  title: 'Components/Divider',\n  component: DividerModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/expansion/expansion.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ExpansionModule>",
                    "defaultValue": "{\n  toggle: true,\n  description: true,\n  disabled: false,\n  multi: false,\n  expanded: false,\n  displayMode: 'default',\n  togglePosition: 'before'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ExpansionModule>",
                    "defaultValue": "{\n  toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\n  description: { control: { type: 'boolean' }, name: 'Has description' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  multi: { control: { type: 'boolean' }, name: 'Open more than one panel' },\n  expanded: { control: { type: 'boolean' }, name: 'Expand' },\n  displayMode: {\n    options: ['default', 'flat'],\n    control: { type: 'radio' },\n    name: 'Display mode'\n  },\n  togglePosition: {\n    options: ['before', 'after'],\n    control: { type: 'radio' },\n    name: 'Toggle position'\n  },\n  opened: { action: 'opened', table: { disable: true } },\n  closed: { action: 'closed', table: { disable: true } }\n}"
                },
                {
                    "name": "Expansion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ExpansionModule>",
                    "defaultValue": "{\n  title: 'Components/Expansion',\n  component: ExpansionModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<MenuModule>",
                    "defaultValue": "{\n  yPosition: 'below',\n  xPosition: 'after',\n  hasBackdrop: true,\n  overlapTrigger: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<MenuModule>",
                    "defaultValue": "{\n  yPosition: {\n    options: ['above', 'below'],\n    control: { type: 'radio' },\n    name: 'Y position'\n  },\n  xPosition: {\n    options: ['before', 'after'],\n    control: { type: 'radio' },\n    name: 'X position'\n  },\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' },\n  overlapTrigger: { control: { type: 'boolean' }, name: 'Overlap trigger' }\n}"
                },
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuModule>",
                    "defaultValue": "{\n  title: 'Components/Menu',\n  component: MenuModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                }
            ],
            "src/stories/components/progress-bar/progress-bar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ProgressBarModule>",
                    "defaultValue": "{\n  /*  value: 50,\n  buffer: 75,\n  color: 'default',\n  mode: 'determinate' */\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ProgressBarModule>",
                    "defaultValue": "{\n  /* value: { control: { type: 'range', min: 0, max: 100 }, name: 'Value' },\n  buffer: { control: { type: 'range', min: 0, max: 100 }, name: 'Buffer' },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  mode: {\n    options: ['determinate', 'indeterminate', 'buffer', 'query'],\n    control: { type: 'radio' },\n    name: 'Mode'\n  } */\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressBarModule>",
                    "defaultValue": "{\n  title: 'Components/Progress Bar',\n  component: ProgressBarModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /*  argTypes */\n}"
                },
                {
                    "name": "ProgressBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/components/progress-spinner/progress-spinner.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ProgressSpinnerModule>",
                    "defaultValue": "{\n  value: 50,\n  diameter: 100,\n  strokeWidth: 10,\n  mode: 'determinate',\n  color: 'primary'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ProgressSpinnerModule>",
                    "defaultValue": "{\n  value: { control: { type: 'range', max: '100', min: 10 }, name: 'Value' },\n  diameter: { control: { type: 'range', max: '400', min: 70 }, name: 'Diameter' },\n  strokeWidth: { control: { type: 'range', max: '20', min: 1 }, name: 'Stroke width' },\n  mode: {\n    options: ['determinate', 'indeterminate'],\n    control: { type: 'radio' },\n    name: 'Mode'\n  },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressSpinnerModule>",
                    "defaultValue": "{\n  title: 'Components/Progress Spinner',\n  component: ProgressSpinnerModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "ProgressSpinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                }
            ],
            "src/stories/components/sidenav/sidenav.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SidenavModule>",
                    "defaultValue": "{\n  position: 'start',\n  mode: 'over',\n  hasBackdrop: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SidenavModule>",
                    "defaultValue": "{\n  position: {\n    options: ['start', 'end'],\n    control: { type: 'radio' },\n    name: 'Position'\n  },\n  mode: {\n    options: ['over', 'push', 'side'],\n    control: { type: 'radio' },\n    name: 'Mode'\n  },\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SidenavModule>",
                    "defaultValue": "{\n  title: 'Components/Sidenav',\n  component: SidenavModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "Sidenav",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                }
            ],
            "src/stories/components/snackbar/snackbar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SnackbarModule>",
                    "defaultValue": "{\n  label: 'Lorem ipsum dolor.',\n  xPosition: 'center',\n  yPosition: 'bottom',\n  duration: 5000,\n  hasAction: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SnackbarModule>",
                    "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  hasAction: { control: { type: 'boolean' }, name: 'Has action' },\n  duration: { control: { type: 'range', step: 1000, min: 1000, max: 10000 }, name: 'Duration' },\n  xPosition: {\n    options: ['start', 'center', 'end', 'left', 'right'],\n    control: { type: 'radio' },\n    name: 'X position'\n  },\n  yPosition: {\n    options: ['top', 'bottom'],\n    control: { type: 'radio' },\n    name: 'Y position'\n  },\n  openSnackbar: { table: { disable: true } }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SnackbarModule>",
                    "defaultValue": "{\n  title: 'Components/Snackbar',\n  component: SnackbarModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "Snackbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/components/table/table.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TableModule>",
                    "defaultValue": "{\n  hasStyles: false,\n  clear: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TableModule>",
                    "defaultValue": "{\n  hasStyles: { control: { type: 'boolean' }, name: 'Has styles' },\n  clear: { control: { type: 'boolean' }, name: 'Clear data' },\n  displayedColumns: { table: { disable: true } },\n  dataSource: { table: { disable: true } },\n  ngAfterViewInit: { table: { disable: true } },\n  sort: { table: { disable: true } }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableModule>",
                    "defaultValue": "{\n  title: 'Components/Table',\n  component: TableModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/components/tabs/tabs.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TabsModule>",
                    "defaultValue": "{\n  color: 'primary',\n  backgroundColor: 'primary',\n  stretch: true,\n  duration: 100,\n  align: true,\n  fitInkBarToContent: true,\n  headerPosition: 'below'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TabsModule>",
                    "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  backgroundColor: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Background color'\n  },\n  stretch: { control: { type: 'boolean' }, name: 'Stretch' },\n  duration: { control: { type: 'range', step: 100, max: 1000 }, name: 'Animation duration' },\n  align: { control: { type: 'boolean' }, name: 'Align' },\n  fitInkBarToContent: { control: { type: 'boolean' }, name: 'Fit ink bar to content' },\n  headerPosition: { control: { type: 'select', options: ['below', 'above'] }, name: 'Header position' }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabsModule>",
                    "defaultValue": "{\n  title: 'Components/Tabs',\n  component: TabsModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "Tabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/components/toolbar/toolbar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ToolbarModule>",
                    "defaultValue": "{\n  color: 'default'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ToolbarModule>",
                    "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToolbarModule>",
                    "defaultValue": "{\n  title: 'Components/Toolbar',\n  component: ToolbarModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "Toolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                }
            ],
            "src/stories/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TooltipModule>",
                    "defaultValue": "{\n  disabled: false,\n  hideDelay: 0,\n  position: 'right'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TooltipModule>",
                    "defaultValue": "{\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  hideDelay: { control: { type: 'range', step: 500, min: 0, max: 5000 }, name: 'Hide delay' },\n  position: { control: { type: 'select', options: ['left', 'right', 'above', 'below', 'before', 'after'] }, name: 'Position' }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipModule>",
                    "defaultValue": "{\n  title: 'Components/Tooltip',\n  component: TooltipModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                }
            ],
            "src/stories/theme/colors/colors.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ColorsModule>",
                    "defaultValue": "{\n  color: 'primary'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ColorsModule>",
                    "defaultValue": "{\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
                },
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorsModule>",
                    "defaultValue": "{\n  title: 'Theme/Colors',\n  component: ColorsModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/theme/typography/typography.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TypographyModule>",
                    "defaultValue": "{\n  color: 'default'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TypographyModule>",
                    "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TypographyModule>",
                    "defaultValue": "{\n  title: 'Theme/Typography',\n  component: TypographyModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "Typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/helpers/elevation/elevation.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ElevationModule>",
                    "defaultValue": "{\n  elevation: 12\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ElevationModule>",
                    "defaultValue": "{\n  elevation: { control: { type: 'range', max: 24, min: 0 }, name: 'Elevation' }\n}"
                },
                {
                    "name": "Elevation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ElevationModule>",
                    "defaultValue": "{\n  title: 'Helpers/Elevation',\n  component: ElevationModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/helpers/grid/grid.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<GridModule>",
                    "defaultValue": "{\n  cols: 5,\n  colOne: 2,\n  rowOne: 1,\n  colTwo: 1,\n  rowTwo: 2,\n  colThree: 1,\n  rowThree: 1,\n  colFour: 2,\n  rowFour: 1\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<GridModule>",
                    "defaultValue": "{\n  tiles: { table: { disable: true } },\n  ngOnInit: { table: { disable: true } },\n  cols: { control: { type: 'range', max: 5, min: 1 }, name: 'Columns' },\n  colOne: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 1' },\n  rowOne: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 1' },\n  colTwo: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 2' },\n  rowTwo: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 2' },\n  colThree: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 3' },\n  rowThree: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 3' },\n  colFour: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 4' },\n  rowFour: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 4' }\n}"
                },
                {
                    "name": "Grid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<GridModule>",
                    "defaultValue": "{\n  title: 'Helpers/Grid',\n  component: GridModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/helpers/ripples/ripples.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<RipplesModule>",
                    "defaultValue": "{\n  centered: false,\n  disabled: false,\n  unbounded: false,\n  color: false,\n  radius: 0\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<RipplesModule>",
                    "defaultValue": "{\n  centered: { control: { type: 'boolean' }, name: 'Centered' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  unbounded: { control: { type: 'boolean' }, name: 'Unbounded' },\n  color: { control: { type: 'boolean' }, name: 'Color (rgba)' },\n  radius: { control: { type: 'range', max: 400, min: 0 }, name: 'Radius' }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RipplesModule>",
                    "defaultValue": "{\n  title: 'Helpers/Ripples',\n  component: RipplesModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "Ripples",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/helpers/clipboard/clipboard.stories.ts": [
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ClipModule>",
                    "defaultValue": "{\n  text: { table: { disable: true } },\n  textValue: { table: { disable: true } },\n  textCopy: { table: { disable: true } },\n  copied: { table: { disable: true } }\n}"
                },
                {
                    "name": "Clipboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ClipModule>",
                    "defaultValue": "{\n  title: 'Helpers/Clipboard',\n  component: ClipModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/table/table.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n]"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    }\n  }\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/forms/checkbox/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxModule>",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/autocomplete/autocomplete.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AutocompleteModule>",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/form-field/form-field.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormFieldModule>",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/date-picker/date-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerModule>",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/radio-button/radio-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioButtonModule>",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/select/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectModule>",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/slide-toggle/slide-toggle.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SlideToggleModule>",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/slider/slider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SliderModule>",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/textarea/textarea.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaModule>",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/badge/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeModule>",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/bottom-sheet/bottom-sheet.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BottomSheetModule>",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonModule>",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/card/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardModule>",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/chips/chips.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChipsModule>",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/divider/divider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DividerModule>",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/expansion/expansion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ExpansionModule>",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuModule>",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/progress-bar/progress-bar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressBarModule>",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/progress-spinner/progress-spinner.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressSpinnerModule>",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/sidenav/sidenav.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SidenavModule>",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/snackbar/snackbar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SnackbarModule>",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableModule>",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/tabs/tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsModule>",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/toolbar/toolbar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToolbarModule>",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipModule>",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/theme/colors/colors.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorsModule>",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/theme/typography/typography.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TypographyModule>",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/elevation/elevation.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ElevationModule>",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/clipboard/clipboard.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ClipModule>",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/grid/grid.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<GridModule>",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/ripples/ripples.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RipplesModule>",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/assets/sb-header/sb-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SBHeaderModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Badge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomSheetModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomSheetOverviewExampleSheet",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomSheet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardModule",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipsModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Chips",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DividerModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Divider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpansionModule",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Expansion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressSpinnerModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressSpinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sidenav",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Snackbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableModule",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteModule",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Autocomplete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatePickerModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatePicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormField",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SlideToggleModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SlideToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Slider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClipModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Clipboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElevationModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Elevation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridModule",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tile",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RipplesModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ripples",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}