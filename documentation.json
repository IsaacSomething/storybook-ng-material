{
    "pipes": [],
    "interfaces": [
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-107c1f7e7d476cb7ca6d7174cbbbfab5609c4ac79a49a957fb46c65ab1b9e1fa2f814965f412a92eb913821f6cf1b05d7e66f13b7ac88e5f30e549b6b78dca62",
            "file": "src/stories/components/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatTableModule, MatSortModule],\r\n  styles: [\r\n    `\r\n      .with-styles .mat-column-position {\r\n        width: 32px;\r\n        border-right: 1px solid #ccc;\r\n        padding-right: 24px;\r\n        text-align: center;\r\n      }\r\n      .with-styles .mat-column-name {\r\n        background: rgba(0, 0, 0, 0.02);\r\n      }\r\n      .with-styles .mat-column-weight {\r\n        font-weight: 700;\r\n      }\r\n      .with-styles .mat-column-symbol {\r\n        color: var(--mat-primary);\r\n        text-align: center;\r\n        width: 32px;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <sb-header title=\"Table\" matLink=\"components/table/api\" />\r\n\r\n    <div class=\"mx-4\">\r\n      <table mat-table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z1\" [class.with-styles]=\"hasStyles\">\r\n        <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\" sticky>\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"weight\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Weight</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"symbol\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Symbol</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.symbol }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Disclaimer column -->\r\n        <ng-container matColumnDef=\"disclaimer\">\r\n          <td mat-footer-cell *matFooterCellDef colspan=\"4\" class=\"p-4\">\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic quisquam alias, tenetur cumque aliquam fugit doloribus maiores\r\n            eaque error minima commodi obcaecati esse? Quos odio, magnam eaque dolor eius accusantium!\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n        <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">\r\n            <h1 class=\"p-4\">No data</h1>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  `\r\n})\r\nexport class TableModule implements AfterViewInit {\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @Input() hasStyles!: boolean;\r\n  @Input() set clear(value: boolean) {\r\n    if (value) {\r\n      this.dataSource.data = [];\r\n      return;\r\n    }\r\n\r\n    this.dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n  }\r\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Tile",
            "id": "interface-Tile-36486d4bf5fe020d70989430255f476c25e9d2a6bbcb2f353af9b341964d35d16a896370b84801caff29be8f4f5f7b4f3ff15b859e534ae13e166b090566beeb",
            "file": "src/stories/helpers/grid/grid.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-grid',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatGridListModule],\r\n  template: `\r\n    <sb-header title=\"Grid\" matLink=\"components/grid-list/overview\" />\r\n\r\n    <mat-grid-list [cols]=\"cols\" rowHeight=\"100px\">\r\n      <mat-grid-tile [colspan]=\"colOne\" [rowspan]=\"rowOne\" class=\"bg-orange-300\"> One </mat-grid-tile>\r\n      <mat-grid-tile [colspan]=\"colTwo\" [rowspan]=\"rowTwo\" class=\"bg-orange-400\"> Two </mat-grid-tile>\r\n      <mat-grid-tile [colspan]=\"colThree\" [rowspan]=\"rowThree\" class=\"bg-orange-500\"> Three </mat-grid-tile>\r\n      <mat-grid-tile [colspan]=\"colFour\" [rowspan]=\"rowFour\" class=\"bg-orange-600\"> Four </mat-grid-tile>\r\n    </mat-grid-list>\r\n  `,\r\n  styles: []\r\n})\r\nexport class GridModule implements OnInit {\r\n  @Input() cols!: number;\r\n  @Input() colOne!: number;\r\n  @Input() rowOne!: number;\r\n  @Input() colTwo!: number;\r\n  @Input() rowTwo!: number;\r\n  @Input() colThree!: number;\r\n  @Input() rowThree!: number;\r\n  @Input() colFour!: number;\r\n  @Input() rowFour!: number;\r\n  tiles!: Tile[];\r\n\r\n  ngOnInit(): void {\r\n    this.tiles = [\r\n      { text: 'One', cols: 2, rows: 1, color: 'lightblue' },\r\n      { text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\r\n      { text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\r\n      { text: 'Four', cols: 2, rows: 1, color: '#DDBDF1' }\r\n    ];\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f7246eb4923d27635152e4f6e375c8b00c3b0318fd02d75cfd3204bdfd8cb6f38e461f04c16e9c103c95ca83ef5aeaa9a23a759c480f8bd1e5f1dbbb381e4eb1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AutocompleteModule",
            "id": "component-AutocompleteModule-3a2b65a2283dbc66c45df51666eb1d109a7f06b992d825378a671cf34aab184c54519e450c2fc15552d6e71ae0cea4c1f1fa4105c4fe61858f01ee8dd71f2c62",
            "file": "src/stories/forms/autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-autocomplete",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"components/autocomplete/api\" />\n\n<form class=\"mx-4\">\n  <mat-form-field>\n    <mat-label>Number</mat-label>\n    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\n    <mat-autocomplete [autoActiveFirstOption]=\"autoActiveFirstOption\" #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autoActiveFirstOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "myControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "options",
                    "defaultValue": "['Option one', 'Option two', 'Option three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "_filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { Observable, map, startWith } from 'rxjs';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-autocomplete',\r\n  standalone: true,\r\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\r\n  template: `\r\n    <sb-header title=\"Autocomplete\" matLink=\"components/autocomplete/api\" />\r\n\r\n    <form class=\"mx-4\">\r\n      <mat-form-field>\r\n        <mat-label>Number</mat-label>\r\n        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\r\n        <mat-autocomplete [autoActiveFirstOption]=\"autoActiveFirstOption\" #auto=\"matAutocomplete\">\r\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n            {{ option }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </form>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AutocompleteModule {\r\n  @Input() autoActiveFirstOption!: boolean;\r\n  myControl = new FormControl('');\r\n  options: string[] = ['Option one', 'Option two', 'Option three'];\r\n  filteredOptions!: Observable<string[]>;\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value || ''))\r\n    );\r\n  }\r\n\r\n  _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BadgeModule",
            "id": "component-BadgeModule-4199a3ec8e8fc0bfd87c1870275c0cb85463683d8a781ab122e25449c2d486d1774e535bd76d0ccd42b2dca881cfdbdf40f8b0028fd86b6714aa5914d376b2e3",
            "file": "src/stories/components/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Badge\" matLink=\"components/badge/api\" />\n\n<div class=\"mx-4\">\n  <button\n    mat-raised-button\n    [matBadgeHidden]=\"hidden\"\n    [matBadgeOverlap]=\"overlap\"\n    [matBadge]=\"label\"\n    [matBadgePosition]=\"position\"\n    [matBadgeColor]=\"color\"\n    [matBadgeSize]=\"size\"\n    [matBadgeDisabled]=\"disabled\"\n  >\n    [Button]\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "overlap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "\"above after\" | \"above before\" | \"below before\" | \"below after\" | \"before\" | \"after\" | \"above\" | \"below\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatBadgeModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-badge',\r\n  standalone: true,\r\n  imports: [CommonModule, MatBadgeModule, MatButtonModule, SBHeaderModule],\r\n  template: `\r\n    <sb-header title=\"Badge\" matLink=\"components/badge/api\" />\r\n\r\n    <div class=\"mx-4\">\r\n      <button\r\n        mat-raised-button\r\n        [matBadgeHidden]=\"hidden\"\r\n        [matBadgeOverlap]=\"overlap\"\r\n        [matBadge]=\"label\"\r\n        [matBadgePosition]=\"position\"\r\n        [matBadgeColor]=\"color\"\r\n        [matBadgeSize]=\"size\"\r\n        [matBadgeDisabled]=\"disabled\"\r\n      >\r\n        [Button]\r\n      </button>\r\n    </div>\r\n  `\r\n})\r\nexport class BadgeModule {\r\n  @Input() color!: 'primary' | 'accent' | 'warn';\r\n  @Input() disabled!: boolean;\r\n  @Input() overlap!: boolean;\r\n  @Input() label!: string;\r\n  @Input() hidden!: boolean;\r\n  @Input() position!: 'above after' | 'above before' | 'below before' | 'below after' | 'before' | 'after' | 'above' | 'below';\r\n  @Input() size!: 'small' | 'medium' | 'large';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BottomSheetModule",
            "id": "component-BottomSheetModule-8db61f8a9e60b7f4d87351533ba082913fcb5f719cd824ad27badff791c9fdd97950e8410ce7c54603d6fba3bc53d3a250fee53ba797d6f90d57e59b76e63bae",
            "file": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bottom-sheet",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\n<button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openBottomSheet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatBottomSheetModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MatBottomSheet, MatBottomSheetModule, MatBottomSheetRef } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-bottom-sheet',\r\n  standalone: true,\r\n  imports: [MatBottomSheetModule, MatButtonModule, SBHeaderModule],\r\n  styles: [],\r\n  template: `\r\n    <sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\r\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\r\n  `\r\n})\r\nexport class BottomSheetModule {\r\n  @Input() hasBackdrop!: boolean;\r\n\r\n  constructor(private bottomSheet: MatBottomSheet) {}\r\n\r\n  openBottomSheet() {\r\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet, { hasBackdrop: this.hasBackdrop });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'bottom-sheet-overview-example-sheet',\r\n  template: `<h1>Bottom sheet</h1>`\r\n})\r\nexport class BottomSheetOverviewExampleSheet {\r\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\r\n\r\n  openLink(event: MouseEvent) {\r\n    this.bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BottomSheetOverviewExampleSheet",
            "id": "component-BottomSheetOverviewExampleSheet-8db61f8a9e60b7f4d87351533ba082913fcb5f719cd824ad27badff791c9fdd97950e8410ce7c54603d6fba3bc53d3a250fee53ba797d6f90d57e59b76e63bae",
            "file": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bottom-sheet-overview-example-sheet",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Bottom sheet</h1>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openLink",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MatBottomSheet, MatBottomSheetModule, MatBottomSheetRef } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-bottom-sheet',\r\n  standalone: true,\r\n  imports: [MatBottomSheetModule, MatButtonModule, SBHeaderModule],\r\n  styles: [],\r\n  template: `\r\n    <sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\r\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\r\n  `\r\n})\r\nexport class BottomSheetModule {\r\n  @Input() hasBackdrop!: boolean;\r\n\r\n  constructor(private bottomSheet: MatBottomSheet) {}\r\n\r\n  openBottomSheet() {\r\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet, { hasBackdrop: this.hasBackdrop });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'bottom-sheet-overview-example-sheet',\r\n  template: `<h1>Bottom sheet</h1>`\r\n})\r\nexport class BottomSheetOverviewExampleSheet {\r\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\r\n\r\n  openLink(event: MouseEvent) {\r\n    this.bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheetRef",
                        "type": "MatBottomSheetRef<BottomSheetOverviewExampleSheet>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "bottomSheetRef",
                        "type": "MatBottomSheetRef<BottomSheetOverviewExampleSheet>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ButtonModule",
            "id": "component-ButtonModule-cf86f03665534b728a116b9f4bfe915fa807adc7c91ceafe437957a46816c47bc4769316c2397bcf180b26cd62754ff6707b069ad0edab0b6c290f9e24cd65f3",
            "file": "src/stories/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [
                "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    "
            ],
            "template": "<sb-header title=\"Button\" matLink=\"components/button/api\" />\n<div [ngSwitch]=\"type\" class=\"mx-4\">\n  <button *ngSwitchDefault mat-button [color]=\"color\" [disabled]=\"disabled\">{{ label }}</button>\n  <button *ngSwitchCase=\"'raised'\" mat-raised-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n  <button *ngSwitchCase=\"'flat'\" mat-flat-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n  <button *ngSwitchCase=\"'stroked'\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"default\" | \"flat\" | \"stroked\" | \"raised\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  standalone: true,\r\n  imports: [CommonModule, MatButtonModule, SBHeaderModule],\r\n  styles: [\r\n    `\r\n      .container {\r\n        display: flex;\r\n        padding: 3rem;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <sb-header title=\"Button\" matLink=\"components/button/api\" />\r\n    <div [ngSwitch]=\"type\" class=\"mx-4\">\r\n      <button *ngSwitchDefault mat-button [color]=\"color\" [disabled]=\"disabled\">{{ label }}</button>\r\n      <button *ngSwitchCase=\"'raised'\" mat-raised-button [color]=\"color\" [disabled]=\"disabled\">\r\n        {{ label }}\r\n      </button>\r\n      <button *ngSwitchCase=\"'flat'\" mat-flat-button [color]=\"color\" [disabled]=\"disabled\">\r\n        {{ label }}\r\n      </button>\r\n      <button *ngSwitchCase=\"'stroked'\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\r\n        {{ label }}\r\n      </button>\r\n    </div>\r\n  `\r\n})\r\nexport class ButtonModule {\r\n  @Input() label!: string;\r\n  @Input() color!: ThemePalette | 'default';\r\n  @Input() type!: 'default' | 'flat' | 'stroked' | 'raised';\r\n  @Input() disabled!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    \n"
        },
        {
            "name": "CardModule",
            "id": "component-CardModule-6d835567996b0edecfaea77a9276070b190c66ee2807b8d414611d4f423ceb23a40c7d687834f3fe86590454e13f8f80643c1250de3837382a40868d2ae41c28",
            "file": "src/stories/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Card\" matLink=\"components/card/api\" />\n\n<mat-card class=\"mx-4\" style=\"width:400px\" [appearance]=\"appearance\">\n  <mat-card-header *ngIf=\"title || subtitle\">\n    <mat-card-title-group>\n      <img *ngIf=\"avatar\" mat-card-avatar src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n      <mat-card-title *ngIf=\"title\">title</mat-card-title>\n      <mat-card-subtitle *ngIf=\"subtitle\">subtitle</mat-card-subtitle>\n\n      <ng-container *ngIf=\"media\" [ngSwitch]=\"mediaSize\">\n        <img *ngSwitchCase=\"'xl'\" mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'lg'\" mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'md'\" mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'sm'\" mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n      </ng-container>\n    </mat-card-title-group>\n  </mat-card-header>\n\n  <img *ngIf=\"image\" mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n\n  <!-- Empty content for bottom spacing if display is just title || subtitle -->\n  <mat-card-content></mat-card-content>\n\n  <mat-card-content *ngIf=\"content\">\n    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quos nostrum veritatis assumenda corrupti sequi ut molestiae\n    nesciunt, quo, eius accusamus dolor illo esse quaerat culpa vel accusantium dolore aspernatur?\n  </mat-card-content>\n\n  <mat-card-actions *ngIf=\"actions\" [align]=\"align\">\n    <button mat-button>[Lorem Ipsum]</button>\n    <button mat-button>[Lorem Ipsum]</button>\n  </mat-card-actions>\n\n  <mat-card-footer *ngIf=\"footer\">\n    <mat-progress-bar mode=\"indeterminate\" />\n  </mat-card-footer>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "\"outlined\" | \"raised\"",
                    "decorators": []
                },
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "media",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mediaSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "\"xl\" | \"lg\" | \"md\" | \"sm\"",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatCardModule, MatButtonModule, MatProgressBarModule],\r\n  template: `\r\n    <sb-header title=\"Card\" matLink=\"components/card/api\" />\r\n\r\n    <mat-card class=\"mx-4\" style=\"width:400px\" [appearance]=\"appearance\">\r\n      <mat-card-header *ngIf=\"title || subtitle\">\r\n        <mat-card-title-group>\r\n          <img *ngIf=\"avatar\" mat-card-avatar src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\r\n          <mat-card-title *ngIf=\"title\">title</mat-card-title>\r\n          <mat-card-subtitle *ngIf=\"subtitle\">subtitle</mat-card-subtitle>\r\n\r\n          <ng-container *ngIf=\"media\" [ngSwitch]=\"mediaSize\">\r\n            <img *ngSwitchCase=\"'xl'\" mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\r\n            <img *ngSwitchCase=\"'lg'\" mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\r\n            <img *ngSwitchCase=\"'md'\" mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\r\n            <img *ngSwitchCase=\"'sm'\" mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\r\n          </ng-container>\r\n        </mat-card-title-group>\r\n      </mat-card-header>\r\n\r\n      <img *ngIf=\"image\" mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\r\n\r\n      <!-- Empty content for bottom spacing if display is just title || subtitle -->\r\n      <mat-card-content></mat-card-content>\r\n\r\n      <mat-card-content *ngIf=\"content\">\r\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quos nostrum veritatis assumenda corrupti sequi ut molestiae\r\n        nesciunt, quo, eius accusamus dolor illo esse quaerat culpa vel accusantium dolore aspernatur?\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions *ngIf=\"actions\" [align]=\"align\">\r\n        <button mat-button>[Lorem Ipsum]</button>\r\n        <button mat-button>[Lorem Ipsum]</button>\r\n      </mat-card-actions>\r\n\r\n      <mat-card-footer *ngIf=\"footer\">\r\n        <mat-progress-bar mode=\"indeterminate\" />\r\n      </mat-card-footer>\r\n    </mat-card>\r\n  `,\r\n  styles: []\r\n})\r\nexport class CardModule {\r\n  @Input() appearance!: 'outlined' | 'raised';\r\n  @Input() title!: boolean;\r\n  @Input() subtitle!: boolean;\r\n  @Input() content!: boolean;\r\n  @Input() actions!: boolean;\r\n  @Input() avatar!: boolean;\r\n  @Input() media!: boolean;\r\n  @Input() mediaSize!: 'xl' | 'lg' | 'md' | 'sm';\r\n  @Input() image!: boolean;\r\n  @Input() footer!: boolean;\r\n  @Input() align!: 'start' | 'end';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxModule",
            "id": "component-CheckboxModule-fd089110b496fad867f9a715dc63ee7190de68e41721a3eafd8505832ad60c207f1a840d76d6247b12f07e3d3a1ec15624dd87cf097a517bb26f1160e12f98a0",
            "file": "src/stories/forms/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Checkbox\" matLink=\"components/checkbox/api\" />\n\n<div class=\"flex flex-col\" [class.flex-col]=\"stacked\">\n  <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\" class=\"mr-2\" checked>\n    [Option 1]\n  </mat-checkbox>\n  <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\" class=\"mr-2\">[Option 2]</mat-checkbox>\n  <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\">[Option 3]</mat-checkbox>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  standalone: true,\r\n  imports: [CommonModule, MatCheckboxModule, SBHeaderModule],\r\n  template: `\r\n    <sb-header title=\"Checkbox\" matLink=\"components/checkbox/api\" />\r\n\r\n    <div class=\"flex flex-col\" [class.flex-col]=\"stacked\">\r\n      <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\" class=\"mr-2\" checked>\r\n        [Option 1]\r\n      </mat-checkbox>\r\n      <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\" class=\"mr-2\">[Option 2]</mat-checkbox>\r\n      <mat-checkbox [color]=\"color\" [indeterminate]=\"indeterminate\" [labelPosition]=\"labelPosition\">[Option 3]</mat-checkbox>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class CheckboxModule {\r\n  @Input() stacked!: boolean;\r\n  @Input() indeterminate!: boolean;\r\n  @Input() labelPosition!: 'before' | 'after';\r\n  @Input() color!: ThemePalette | 'default';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChipsModule",
            "id": "component-ChipsModule-7fd208588c4dab3a19f845247e5aed5441850f06e4c5d85206975597decddfb2f4096b55b4d004ad8701308b2f672cff2866e757ddad9782e3e484a8f402c1e8",
            "file": "src/stories/components/chips/chips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chips",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Chips\" matLink=\"components/chips/api\" />\n\n<mat-chip-listbox class=\"mx-4\" [hideSingleSelectionIndicator]=\"hideSingle\" [multiple]=\"multiple\" [selectable]=\"selectable\">\n  <mat-chip-option>Default</mat-chip-option>\n  <mat-chip-option>\n    <img matChipAvatar src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\" alt=\"Photo of a Shiba Inu\" /> With Avatar\n  </mat-chip-option>\n  <mat-chip-option> <mat-icon matChipTrailingIcon>bolt</mat-icon>With trailing icon </mat-chip-option>\n  <mat-chip-option [color]=\"color\" selected>Selected with color</mat-chip-option>\n  <mat-chip-option [highlighted]=\"highlighted\">Highlighted</mat-chip-option>\n</mat-chip-listbox>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "hideSingle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "highlighted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-chips',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatChipsModule, MatButtonModule, MatIconModule],\r\n  template: `\r\n    <sb-header title=\"Chips\" matLink=\"components/chips/api\" />\r\n\r\n    <mat-chip-listbox class=\"mx-4\" [hideSingleSelectionIndicator]=\"hideSingle\" [multiple]=\"multiple\" [selectable]=\"selectable\">\r\n      <mat-chip-option>Default</mat-chip-option>\r\n      <mat-chip-option>\r\n        <img matChipAvatar src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\" alt=\"Photo of a Shiba Inu\" /> With Avatar\r\n      </mat-chip-option>\r\n      <mat-chip-option> <mat-icon matChipTrailingIcon>bolt</mat-icon>With trailing icon </mat-chip-option>\r\n      <mat-chip-option [color]=\"color\" selected>Selected with color</mat-chip-option>\r\n      <mat-chip-option [highlighted]=\"highlighted\">Highlighted</mat-chip-option>\r\n    </mat-chip-listbox>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ChipsModule {\r\n  @Input() color!: ThemePalette | 'default';\r\n  @Input() hideSingle!: boolean;\r\n  @Input() multiple!: boolean;\r\n  @Input() selectable!: boolean;\r\n  @Input() highlighted!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ClipModule",
            "id": "component-ClipModule-1ca7582febfbc2a74869ac571455eb71e5a2f29beb719b9b9eeb33a0f9ca481dc46cfed962935ae069bd61361ab8777f63e95c3709e64d7c18ea733620454e24",
            "file": "src/stories/helpers/clipboard/clipboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-clipboard",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Clipboard\" matLink=\"cdk/clipboard/api\" />\n<div class=\"mx-4\">\n  <h3>{{ textCopy }}</h3>\n\n  <button mat-raised-button [cdkCopyToClipboard]=\"textCopy\" (click)=\"copied()\">{{ text }}</button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "text",
                    "defaultValue": "'Clip to copy text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "textCopy",
                    "defaultValue": "'lorem ipsum dolor sit amet'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "textValue",
                    "defaultValue": "'Clip to copy text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "copied",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "ClipboardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\n\r\n@Component({\r\n  selector: 'app-clipboard',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatButtonModule, ClipboardModule],\r\n  template: `\r\n    <sb-header title=\"Clipboard\" matLink=\"cdk/clipboard/api\" />\r\n    <div class=\"mx-4\">\r\n      <h3>{{ textCopy }}</h3>\r\n\r\n      <button mat-raised-button [cdkCopyToClipboard]=\"textCopy\" (click)=\"copied()\">{{ text }}</button>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ClipModule {\r\n  text = 'Clip to copy text';\r\n  textValue = 'Clip to copy text';\r\n  textCopy = 'lorem ipsum dolor sit amet';\r\n\r\n  copied() {\r\n    this.text = 'Copied!';\r\n    setTimeout(() => {\r\n      this.text = this.textValue;\r\n    }, 1000);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ColorsModule",
            "id": "component-ColorsModule-78151f6d1a315897096bdb748a9263733bfc208e37b5051ec48c789ad2fe5648101b366b4effb8138a226c5ae23d36243dcba3406586a0c896c61a2e3bb391b4",
            "file": "src/stories/theme/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "./colors.component.scss"
            ],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n<div class=\"mx-4\">\n  <div\n    class=\"block\"\n    matRipple\n    cdkCopyToClipboard=\"var(--mat-{{ color }}-{{ hue }})\"\n    *ngFor=\"let hue of ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'A100', 'A200', 'A400', 'A700']\"\n    style=\"background-color:var(--mat-{{ color }}-{{ hue }})\"\n  >\n    <h1 style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\">{{ hue }}</h1>\n    <small style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\"> var(--mat-{{ color }}-{{ hue }}) </small>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ThemePalette",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "ClipboardModule",
                    "type": "module"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatRippleModule, ThemePalette } from '@angular/material/core';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\n\r\n@Component({\r\n  selector: 'app-colors',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, ClipboardModule, MatRippleModule],\r\n  styleUrls: ['./colors.component.scss'],\r\n  template: `\r\n    <sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\r\n\r\n    <div class=\"mx-4\">\r\n      <div\r\n        class=\"block\"\r\n        matRipple\r\n        cdkCopyToClipboard=\"var(--mat-{{ color }}-{{ hue }})\"\r\n        *ngFor=\"let hue of ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'A100', 'A200', 'A400', 'A700']\"\r\n        style=\"background-color:var(--mat-{{ color }}-{{ hue }})\"\r\n      >\r\n        <h1 style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\">{{ hue }}</h1>\r\n        <small style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\"> var(--mat-{{ color }}-{{ hue }}) </small>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ColorsModule {\r\n  @Input() color!: ThemePalette;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".block {\r\n  height: 80px;\r\n  width: 160px;\r\n  border-radius: 4px;\r\n  display: inline-block;\r\n  margin-right: 16px;\r\n  margin-bottom: 16px;\r\n  padding: 8px;\r\n  position: relative;\r\n  &:hover {\r\n    cursor: copy;\r\n  }\r\n\r\n  h1 {\r\n    font-weight: bold;\r\n    font-weight: 50px;\r\n  }\r\n}\r\n\r\nh4 {\r\n  font-weight: bold !important;\r\n}\r\n\r\nsmall {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  background: rgb(0 0 0 / 5%);\r\n  width: 100%;\r\n  font-weight: 400;\r\n  padding: 6px 10px;\r\n  letter-spacing: -0.9px;\r\n}\r\n",
                    "styleUrl": "./colors.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "DatePickerModule",
            "id": "component-DatePickerModule-f050ecd55f90bfd45e2f034742b23304bc26efcac86dc81f9bb84457052dc59c4fc0157a4df8b035351e661f0cf6ff8120bb4cf5790c8adb6dbb7a36692affc8",
            "file": "src/stories/forms/date-picker/date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-picker",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Date picker\" matLink=\"date-picker\" />\n\n<div class=\"mx-4\" *ngIf=\"inline; else default\">\n  <mat-calendar class=\"h-auto w-80\"></mat-calendar>\n</div>\n\n<ng-template #default>\n  <div class=\"mt-96 mx-5 ml-10\">\n    <mat-form-field>\n      <mat-label>Choose a date</mat-label>\n      <input matInput [matDatepicker]=\"picker\" />\n      <mat-hint>MM/DD/YYYY</mat-hint>\n      <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker\n        #picker\n        [disabled]=\"disabled\"\n        [color]=\"color\"\n        [opened]=\"open\"\n        [touchUi]=\"touchUi\"\n        [xPosition]=\"xPosition\"\n        [yPosition]=\"yPosition\"\n        [startView]=\"startView\"\n      ></mat-datepicker>\n    </mat-form-field>\n  </div>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "startView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "\"month\" | \"year\" | \"multi-year\"",
                    "decorators": []
                },
                {
                    "name": "touchUi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "xPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "DatepickerDropdownPositionX",
                    "decorators": []
                },
                {
                    "name": "yPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "DatepickerDropdownPositionY",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { DatepickerDropdownPositionX, DatepickerDropdownPositionY, MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule, ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-date-picker',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatDatepickerModule, MatInputModule, MatFormFieldModule, MatNativeDateModule],\r\n  template: `\r\n    <sb-header title=\"Date picker\" matLink=\"date-picker\" />\r\n\r\n    <div class=\"mx-4\" *ngIf=\"inline; else default\">\r\n      <mat-calendar class=\"h-auto w-80\"></mat-calendar>\r\n    </div>\r\n\r\n    <ng-template #default>\r\n      <div class=\"mt-96 mx-5 ml-10\">\r\n        <mat-form-field>\r\n          <mat-label>Choose a date</mat-label>\r\n          <input matInput [matDatepicker]=\"picker\" />\r\n          <mat-hint>MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker\r\n            #picker\r\n            [disabled]=\"disabled\"\r\n            [color]=\"color\"\r\n            [opened]=\"open\"\r\n            [touchUi]=\"touchUi\"\r\n            [xPosition]=\"xPosition\"\r\n            [yPosition]=\"yPosition\"\r\n            [startView]=\"startView\"\r\n          ></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n    </ng-template>\r\n  `,\r\n  styles: []\r\n})\r\nexport class DatePickerModule {\r\n  @Input() color: ThemePalette;\r\n  @Input() open!: boolean;\r\n  @Input() inline!: boolean;\r\n  @Input() disabled!: boolean;\r\n  @Input() startView!: 'month' | 'year' | 'multi-year';\r\n  @Input() touchUi!: boolean;\r\n  @Input() xPosition!: DatepickerDropdownPositionX;\r\n  @Input() yPosition!: DatepickerDropdownPositionY;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DividerModule",
            "id": "component-DividerModule-089d45de57e337202a408f0db5d11ee5ba7c57533bac455d97cd107048cf1218ef66419ccb1a7a703fa8e27af458db29d41b826efa55afdfa59ae89b4010b98a",
            "file": "src/stories/components/divider/divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-divider",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Divider\" matLink=\"components/divider/api\" />\n\n<mat-list>\n  <mat-list-item>[Item 1]</mat-list-item>\n  <mat-divider [inset]=\"inset\"></mat-divider>\n  <mat-list-item>[Item 2]</mat-list-item>\n  <mat-divider [inset]=\"inset\"></mat-divider>\n  <mat-list-item>[Item 3]</mat-list-item>\n</mat-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-divider',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatDividerModule, MatListModule],\r\n  template: `\r\n    <sb-header title=\"Divider\" matLink=\"components/divider/api\" />\r\n\r\n    <mat-list>\r\n      <mat-list-item>[Item 1]</mat-list-item>\r\n      <mat-divider [inset]=\"inset\"></mat-divider>\r\n      <mat-list-item>[Item 2]</mat-list-item>\r\n      <mat-divider [inset]=\"inset\"></mat-divider>\r\n      <mat-list-item>[Item 3]</mat-list-item>\r\n    </mat-list>\r\n  `,\r\n  styles: []\r\n})\r\nexport class DividerModule {\r\n  @Input() inset!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ElevationModule",
            "id": "component-ElevationModule-224d51b5d52dff409fd477c9b0820ebe52ec3086a9be6fb4b864648769e86390897a30f73775a9d59279f1ea9e2734313f60fe80f2b991c851ab8616c797f151",
            "file": "src/stories/helpers/elevation/elevation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-Elevation",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Elevation\" matLink=\"guide/elevation\" />\n\n<div class=\"mx-4\">\n  <mat-card class=\"h-96 w-96 p-4 mat-elevation-z{{elevation}}\">\n    lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n  </mat-card>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "elevation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@Component({\r\n  selector: 'app-Elevation',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatCardModule],\r\n  template: `\r\n    <sb-header title=\"Elevation\" matLink=\"guide/elevation\" />\r\n\r\n    <div class=\"mx-4\">\r\n      <mat-card class=\"h-96 w-96 p-4 mat-elevation-z{{elevation}}\">\r\n        lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ElevationModule {\r\n  @Input() elevation!: number;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ExpansionModule",
            "id": "component-ExpansionModule-446fef8c20f7916d95c5444ab75faa1fc2016c5b56fa479852d45ff323f15d80d05f669793c6ce96fccb991da105302b64814cdca4b89cf008aa0f064d992b86",
            "file": "src/stories/components/expansion/expansion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expansion",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Expansion Panel\" matLink=\"components/expansion/api\" />\n\n<div class=\"mx-4\">\n  <mat-accordion [multi]=\"multi\" [displayMode]=\"displayMode\">\n    <mat-expansion-panel #panel1 (opened)=\"opened(panel1)\" (closed)=\"closed(panel1)\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> Lorem Ipsum </mat-panel-title>\n      </mat-expansion-panel-header>\n      <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel\n      #panel2\n      [hideToggle]=\"!toggle\"\n      [disabled]=\"disabled\"\n      [togglePosition]=\"togglePosition\"\n      [expanded]=\"expanded\"\n      (opened)=\"opened(panel2)\"\n      (closed)=\"closed(panel2)\"\n    >\n      <mat-expansion-panel-header>\n        <mat-panel-title> Lorem Ipsum </mat-panel-title>\n        <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n      <mat-action-row>\n        <button mat-flat-button color=\"primary\" (click)=\"panel3.open()\">Next [Action row]</button>\n      </mat-action-row>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel\n      #panel3\n      [hideToggle]=\"!toggle\"\n      [disabled]=\"disabled\"\n      [togglePosition]=\"togglePosition\"\n      [expanded]=\"expanded\"\n      (opened)=\"opened(panel3)\"\n      (closed)=\"closed(panel3)\"\n    >\n      <mat-expansion-panel-header>\n        <mat-panel-title> Lorem Ipsum </mat-panel-title>\n        <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "displayMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "\"default\" | \"flat\"",
                    "decorators": []
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "toggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "togglePosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closed",
                    "args": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "opened",
                    "args": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatExpansionModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-expansion',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatExpansionModule, MatButtonModule],\r\n  template: `\r\n    <sb-header title=\"Expansion Panel\" matLink=\"components/expansion/api\" />\r\n\r\n    <div class=\"mx-4\">\r\n      <mat-accordion [multi]=\"multi\" [displayMode]=\"displayMode\">\r\n        <mat-expansion-panel #panel1 (opened)=\"opened(panel1)\" (closed)=\"closed(panel1)\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Lorem Ipsum </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n        </mat-expansion-panel>\r\n\r\n        <mat-expansion-panel\r\n          #panel2\r\n          [hideToggle]=\"!toggle\"\r\n          [disabled]=\"disabled\"\r\n          [togglePosition]=\"togglePosition\"\r\n          [expanded]=\"expanded\"\r\n          (opened)=\"opened(panel2)\"\r\n          (closed)=\"closed(panel2)\"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Lorem Ipsum </mat-panel-title>\r\n            <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n\r\n          <mat-action-row>\r\n            <button mat-flat-button color=\"primary\" (click)=\"panel3.open()\">Next [Action row]</button>\r\n          </mat-action-row>\r\n        </mat-expansion-panel>\r\n\r\n        <mat-expansion-panel\r\n          #panel3\r\n          [hideToggle]=\"!toggle\"\r\n          [disabled]=\"disabled\"\r\n          [togglePosition]=\"togglePosition\"\r\n          [expanded]=\"expanded\"\r\n          (opened)=\"opened(panel3)\"\r\n          (closed)=\"closed(panel3)\"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Lorem Ipsum </mat-panel-title>\r\n            <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ExpansionModule {\r\n  @Input() toggle!: boolean;\r\n  @Input() description!: boolean;\r\n  @Input() disabled!: boolean;\r\n  @Input() multi!: boolean;\r\n  @Input() expanded!: boolean;\r\n  @Input() displayMode!: 'default' | 'flat';\r\n  @Input() togglePosition!: 'before' | 'after';\r\n\r\n  opened(panel: MatExpansionPanel) {\r\n    console.log(panel);\r\n  }\r\n\r\n  closed(panel: MatExpansionPanel) {\r\n    console.log(panel);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "FormFieldModule",
            "id": "component-FormFieldModule-15cc4382c24e5f2a660126e97b3632a6dc8ab309ea5028d199c2336dbc1e864e261d825713654a9db494da0d6cb3af1192e13ea807af3459dd02a6e711363eee",
            "file": "src/stories/forms/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Form Field\" matLink=\"components/form-field/api\" />\n\n<div class=\"mx-5\">\n  <mat-form-field [appearance]=\"appearance\" [color]=\"color\" [floatLabel]=\"floatLabel\">\n    <mat-label>{{ label }}</mat-label>\n    <input matInput />\n    <mat-icon *ngIf=\"icon\" matSuffix>bolt</mat-icon>\n    <mat-hint [align]=\"hintPosition\">{{ hint }}</mat-hint>\n  </mat-form-field>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "MatFormFieldAppearance",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "floatLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "FloatLabelType",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hintPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FloatLabelType, MatFormFieldAppearance, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-form-field',\r\n  standalone: true,\r\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, SBHeaderModule, MatIconModule],\r\n  template: `\r\n    <sb-header title=\"Form Field\" matLink=\"components/form-field/api\" />\r\n\r\n    <div class=\"mx-5\">\r\n      <mat-form-field [appearance]=\"appearance\" [color]=\"color\" [floatLabel]=\"floatLabel\">\r\n        <mat-label>{{ label }}</mat-label>\r\n        <input matInput />\r\n        <mat-icon *ngIf=\"icon\" matSuffix>bolt</mat-icon>\r\n        <mat-hint [align]=\"hintPosition\">{{ hint }}</mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class FormFieldModule {\r\n  @Input() label!: string;\r\n  @Input() hint!: string;\r\n  @Input() hintPosition!: 'start' | 'end';\r\n  @Input() icon!: boolean;\r\n  @Input() appearance!: MatFormFieldAppearance;\r\n  @Input() color!: ThemePalette;\r\n  @Input() floatLabel!: FloatLabelType;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "GridModule",
            "id": "component-GridModule-36486d4bf5fe020d70989430255f476c25e9d2a6bbcb2f353af9b341964d35d16a896370b84801caff29be8f4f5f7b4f3ff15b859e534ae13e166b090566beeb",
            "file": "src/stories/helpers/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-grid",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Grid\" matLink=\"components/grid-list/overview\" />\n\n<mat-grid-list [cols]=\"cols\" rowHeight=\"100px\">\n  <mat-grid-tile [colspan]=\"colOne\" [rowspan]=\"rowOne\" class=\"bg-orange-300\"> One </mat-grid-tile>\n  <mat-grid-tile [colspan]=\"colTwo\" [rowspan]=\"rowTwo\" class=\"bg-orange-400\"> Two </mat-grid-tile>\n  <mat-grid-tile [colspan]=\"colThree\" [rowspan]=\"rowThree\" class=\"bg-orange-500\"> Three </mat-grid-tile>\n  <mat-grid-tile [colspan]=\"colFour\" [rowspan]=\"rowFour\" class=\"bg-orange-600\"> Four </mat-grid-tile>\n</mat-grid-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "colFour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "colOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "colThree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "colTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowFour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowThree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tile[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatGridListModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-grid',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatGridListModule],\r\n  template: `\r\n    <sb-header title=\"Grid\" matLink=\"components/grid-list/overview\" />\r\n\r\n    <mat-grid-list [cols]=\"cols\" rowHeight=\"100px\">\r\n      <mat-grid-tile [colspan]=\"colOne\" [rowspan]=\"rowOne\" class=\"bg-orange-300\"> One </mat-grid-tile>\r\n      <mat-grid-tile [colspan]=\"colTwo\" [rowspan]=\"rowTwo\" class=\"bg-orange-400\"> Two </mat-grid-tile>\r\n      <mat-grid-tile [colspan]=\"colThree\" [rowspan]=\"rowThree\" class=\"bg-orange-500\"> Three </mat-grid-tile>\r\n      <mat-grid-tile [colspan]=\"colFour\" [rowspan]=\"rowFour\" class=\"bg-orange-600\"> Four </mat-grid-tile>\r\n    </mat-grid-list>\r\n  `,\r\n  styles: []\r\n})\r\nexport class GridModule implements OnInit {\r\n  @Input() cols!: number;\r\n  @Input() colOne!: number;\r\n  @Input() rowOne!: number;\r\n  @Input() colTwo!: number;\r\n  @Input() rowTwo!: number;\r\n  @Input() colThree!: number;\r\n  @Input() rowThree!: number;\r\n  @Input() colFour!: number;\r\n  @Input() rowFour!: number;\r\n  tiles!: Tile[];\r\n\r\n  ngOnInit(): void {\r\n    this.tiles = [\r\n      { text: 'One', cols: 2, rows: 1, color: 'lightblue' },\r\n      { text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\r\n      { text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\r\n      { text: 'Four', cols: 2, rows: 1, color: '#DDBDF1' }\r\n    ];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MenuModule",
            "id": "component-MenuModule-00fb27ce2670a12a4639d94cb5ef4b5b51bab7b631b96f3c7f56facaa3f4d2539bdd762e9baf840fb51901a208c333fdf256a5d640645c8061d5f4aed5f2d317",
            "file": "src/stories/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Menu\" matLink=\"components/menu/api\" />\n\n<div class=\"mx-5\">\n  <button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">[Menu]</button>\n  <mat-menu\n    #menu=\"matMenu\"\n    [yPosition]=\"yPosition\"\n    [xPosition]=\"xPosition\"\n    [hasBackdrop]=\"hasBackdrop\"\n    [overlapTrigger]=\"overlapTrigger\"\n  >\n    <button mat-menu-item>Level 1a</button>\n    <button mat-menu-item>Level 2b</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"level2\">Multi level</button>\n  </mat-menu>\n\n  <mat-menu\n    #level2=\"matMenu\"\n    [yPosition]=\"yPosition\"\n    [xPosition]=\"xPosition\"\n    [hasBackdrop]=\"hasBackdrop\"\n    [overlapTrigger]=\"overlapTrigger\"\n  >\n    <button mat-menu-item>Level 2a</button>\n    <button mat-menu-item>Level 2b</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"level3\">Level 2c</button>\n  </mat-menu>\n\n  <mat-menu\n    #level3=\"matMenu\"\n    [yPosition]=\"yPosition\"\n    [xPosition]=\"xPosition\"\n    [hasBackdrop]=\"hasBackdrop\"\n    [overlapTrigger]=\"overlapTrigger\"\n  >\n    <button mat-menu-item>Level 3a</button>\n    <button mat-menu-item>Level 3b</button>\n    <button mat-menu-item>Level 3c</button>\n  </mat-menu>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "overlapTrigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "xPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "yPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "\"above\" | \"below\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatMenuModule, MatButtonModule],\r\n  template: `\r\n    <sb-header title=\"Menu\" matLink=\"components/menu/api\" />\r\n\r\n    <div class=\"mx-5\">\r\n      <button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">[Menu]</button>\r\n      <mat-menu\r\n        #menu=\"matMenu\"\r\n        [yPosition]=\"yPosition\"\r\n        [xPosition]=\"xPosition\"\r\n        [hasBackdrop]=\"hasBackdrop\"\r\n        [overlapTrigger]=\"overlapTrigger\"\r\n      >\r\n        <button mat-menu-item>Level 1a</button>\r\n        <button mat-menu-item>Level 2b</button>\r\n        <button mat-menu-item [matMenuTriggerFor]=\"level2\">Multi level</button>\r\n      </mat-menu>\r\n\r\n      <mat-menu\r\n        #level2=\"matMenu\"\r\n        [yPosition]=\"yPosition\"\r\n        [xPosition]=\"xPosition\"\r\n        [hasBackdrop]=\"hasBackdrop\"\r\n        [overlapTrigger]=\"overlapTrigger\"\r\n      >\r\n        <button mat-menu-item>Level 2a</button>\r\n        <button mat-menu-item>Level 2b</button>\r\n        <button mat-menu-item [matMenuTriggerFor]=\"level3\">Level 2c</button>\r\n      </mat-menu>\r\n\r\n      <mat-menu\r\n        #level3=\"matMenu\"\r\n        [yPosition]=\"yPosition\"\r\n        [xPosition]=\"xPosition\"\r\n        [hasBackdrop]=\"hasBackdrop\"\r\n        [overlapTrigger]=\"overlapTrigger\"\r\n      >\r\n        <button mat-menu-item>Level 3a</button>\r\n        <button mat-menu-item>Level 3b</button>\r\n        <button mat-menu-item>Level 3c</button>\r\n      </mat-menu>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class MenuModule {\r\n  @Input() yPosition!: 'above' | 'below';\r\n  @Input() xPosition!: 'before' | 'after';\r\n  @Input() hasBackdrop!: boolean;\r\n  @Input() overlapTrigger!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProgressBarModule",
            "id": "component-ProgressBarModule-0f96609ced0db48c8926dbacf7bb2c7b78a7f9b560a536ab1b99221c64b115e63bafaed3324477d27bb3b00bcbffe7a51336a3368ad03bd41ea5dfb807803d84",
            "file": "src/stories/components/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Progress Bar\" matLink=\"components/progress-bar/api\" />\n\n<div class=\"mx-4\">\n  <mat-progress-bar [value]=\"34\" mode=\"indeterminate\"> </mat-progress-bar>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatProgressBarModule],\r\n  template: `\r\n    <sb-header title=\"Progress Bar\" matLink=\"components/progress-bar/api\" />\r\n\r\n    <div class=\"mx-4\">\r\n      <mat-progress-bar [value]=\"34\" mode=\"indeterminate\"> </mat-progress-bar>\r\n    </div>\r\n  `\r\n})\r\nexport class ProgressBarModule {\r\n  /*  @Input() value!: number; \r\n  @Input() color!: ThemePalette | 'default';\r\n  @Input() mode!: 'determinate' | 'indeterminate' | 'buffer' | 'query'; */\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProgressSpinnerModule",
            "id": "component-ProgressSpinnerModule-8d161cb71ad6c4976cd73538e1818c9c12c033bf397257ed6166c45a5fe7d8f9c6e3bcc42add73bcc9d0738897eb45bd53a1f588d193bf363d4900a96c40ea73",
            "file": "src/stories/components/progress-spinner/progress-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-spinner",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Progress Spinner\" matLink=\"components/progress-spinner/api\" />\n<div class=\"m-4\">\n  <mat-spinner [value]=\"value\" [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\" [color]=\"color\" [mode]=\"mode\"></mat-spinner>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "diameter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"determinate\" | \"indeterminate\"",
                    "decorators": []
                },
                {
                    "name": "strokeWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressSpinnerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@Component({\r\n  selector: 'app-progress-spinner',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatProgressSpinnerModule],\r\n  template: `\r\n    <sb-header title=\"Progress Spinner\" matLink=\"components/progress-spinner/api\" />\r\n    <div class=\"m-4\">\r\n      <mat-spinner [value]=\"value\" [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\" [color]=\"color\" [mode]=\"mode\"></mat-spinner>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ProgressSpinnerModule {\r\n  @Input() value!: number;\r\n  @Input() diameter!: number;\r\n  @Input() strokeWidth!: number;\r\n  @Input() color!: ThemePalette;\r\n  @Input() mode!: 'determinate' | 'indeterminate';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioButtonModule",
            "id": "component-RadioButtonModule-ba9f95653c65eb56ec8cb7dfc4b0c66f0658dfc954c3e490ed254856d2c6d9529bfe39771c39fdbd0f9c9c56c2958f892b37846b84d878c42226e38e64c44902",
            "file": "src/stories/forms/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio-button",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Radio Button\" matLink=\"components/radio/api\" />\n\n<div class=\"m-4\">\n  <mat-radio-group [disabled]=\"disabled\" [color]=\"color\" [labelPosition]=\"labelPosition\" class=\"flex\" [class.flex-col]=\"stacked\">\n    <mat-radio-button value=\"1\" checked>Option 1</mat-radio-button>\n    <mat-radio-button value=\"2\">Option 2</mat-radio-button>\n    <mat-radio-button value=\"3\">Option 3</mat-radio-button>\n  </mat-radio-group>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatRadioModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-radio-button',\r\n  standalone: true,\r\n  imports: [CommonModule, MatRadioModule, SBHeaderModule],\r\n  template: `\r\n    <sb-header title=\"Radio Button\" matLink=\"components/radio/api\" />\r\n\r\n    <div class=\"m-4\">\r\n      <mat-radio-group [disabled]=\"disabled\" [color]=\"color\" [labelPosition]=\"labelPosition\" class=\"flex\" [class.flex-col]=\"stacked\">\r\n        <mat-radio-button value=\"1\" checked>Option 1</mat-radio-button>\r\n        <mat-radio-button value=\"2\">Option 2</mat-radio-button>\r\n        <mat-radio-button value=\"3\">Option 3</mat-radio-button>\r\n      </mat-radio-group>\r\n    </div>\r\n  `\r\n})\r\nexport class RadioButtonModule {\r\n  @Input() disabled!: boolean;\r\n  @Input() stacked!: boolean;\r\n  @Input() color!: ThemePalette;\r\n  @Input() labelPosition!: 'before' | 'after';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RipplesModule",
            "id": "component-RipplesModule-5167bf05e6c64889bf86d9b34cf98e4cb6b23083994d367609c2727bc9d9ca797f52f0dcccce267351f671500f82fe9307e603355781a98993ef6253bce96071",
            "file": "src/stories/helpers/ripples/ripples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ripples",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Ripples\" matLink=\"components/ripple/overview\" />\n<div class=\"mx-4\">\n  <mat-card\n    *ngIf=\"radius > 1; else noRadius\"\n    class=\"h-96 w-96 p-4\"\n    appearance=\"outlined\"\n\n    matRipple\n    [matRippleCentered]=\"centered\"\n    [matRippleColor]=\"color ? 'rgba(241,136,31,0.1)' : 'rgba(0,0,0,0.1)'\"\n    [matRippleDisabled]=\"disabled\"\n    [matRippleRadius]=\"radius\"\n    [matRippleUnbounded]=\"unbounded\"\n  >\n    [Set radius to 0 in order to view default ripple radius]<br />\n    lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n  </mat-card>\n\n  <ng-template #noRadius>\n    <mat-card\n      class=\"h-96 w-96 p-4\"\n      appearance=\"outlined\"\n      matRipple\n      [matRippleCentered]=\"centered\"\n      matRippleColor=\"rgba(241,136,31,0.2)\"\n      [matRippleDisabled]=\"disabled\"\n      [matRippleUnbounded]=\"unbounded\"\n    >\n      [Default ripple radius] <br />\n      lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\n    </mat-card>\n  </ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "centered",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "radius",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "unbounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-ripples',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatCardModule, MatRippleModule],\r\n  template: `\r\n    <sb-header title=\"Ripples\" matLink=\"components/ripple/overview\" />\r\n    <div class=\"mx-4\">\r\n      <mat-card\r\n        *ngIf=\"radius > 1; else noRadius\"\r\n        class=\"h-96 w-96 p-4\"\r\n        appearance=\"outlined\"\r\n        \r\n        matRipple\r\n        [matRippleCentered]=\"centered\"\r\n        [matRippleColor]=\"color ? 'rgba(241,136,31,0.1)' : 'rgba(0,0,0,0.1)'\"\r\n        [matRippleDisabled]=\"disabled\"\r\n        [matRippleRadius]=\"radius\"\r\n        [matRippleUnbounded]=\"unbounded\"\r\n      >\r\n        [Set radius to 0 in order to view default ripple radius]<br />\r\n        lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\r\n      </mat-card>\r\n\r\n      <ng-template #noRadius>\r\n        <mat-card\r\n          class=\"h-96 w-96 p-4\"\r\n          appearance=\"outlined\"\r\n          matRipple\r\n          [matRippleCentered]=\"centered\"\r\n          matRippleColor=\"rgba(241,136,31,0.2)\"\r\n          [matRippleDisabled]=\"disabled\"\r\n          [matRippleUnbounded]=\"unbounded\"\r\n        >\r\n          [Default ripple radius] <br />\r\n          lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos quae. Quisquam, quos quae. Quisquam, quos quae.\r\n        </mat-card>\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class RipplesModule {\r\n  @Input() centered!: boolean;\r\n  @Input() disabled!: boolean;\r\n  @Input() unbounded!: boolean;\r\n  @Input() color!: boolean;\r\n  @Input() radius!: number;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SBHeaderModule",
            "id": "component-SBHeaderModule-42b20f36d99e4e4d33595bcc16a9c13d4d41d122d14d0d0ba562d0b146d113bbe5be4055d9e2cd4b9e989702c6f4019639cb25bf807344697305670847a47c0b",
            "file": "src/stories/assets/sb-header/sb-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-header",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        display: block;\n        width: 100%;\n        padding: 0 16px;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        margin-top: -20px;\n        margin-bottom: 14px;\n        display: block;\n      }\n    "
            ],
            "template": "<h2>{{ title }}</h2>\n<a *ngIf=\"matLink\" href=\"https://material.angular.io/{{ matLink }}\" target=\"_blank\"> Angular material documentation </a>\n\n<small *ngIf=\"clipboard\">CLICK TO COPY VALUE</small>\n<mat-divider></mat-divider>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "clipboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "BooleanInput",
                    "decorators": []
                },
                {
                    "name": "matLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 52,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_clipboard",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n  selector: 'sb-header',\r\n  standalone: true,\r\n  imports: [CommonModule, MatDividerModule],\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        padding: 0 16px;\r\n      }\r\n\r\n      h2 {\r\n        font-size: 50px !important;\r\n        font-weight: bold !important;\r\n        margin-bottom: 6px !important;\r\n        text-transform: capitalize;\r\n        padding-bottom: 30px;\r\n        padding-top: 16px;\r\n      }\r\n\r\n      small {\r\n        padding-top: 12px;\r\n        display: block;\r\n      }\r\n\r\n      mat-divider {\r\n        margin-bottom: 16px;\r\n      }\r\n\r\n      a {\r\n        margin-top: -20px;\r\n        margin-bottom: 14px;\r\n        display: block;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <h2>{{ title }}</h2>\r\n    <a *ngIf=\"matLink\" href=\"https://material.angular.io/{{ matLink }}\" target=\"_blank\"> Angular material documentation </a>\r\n\r\n    <small *ngIf=\"clipboard\">CLICK TO COPY VALUE</small>\r\n    <mat-divider></mat-divider>\r\n  `\r\n})\r\nexport class SBHeaderModule {\r\n  @Input({ required: true }) title!: string;\r\n  @Input() matLink!: string;\r\n  @Input() set clipboard(value: BooleanInput) {\r\n    this._clipboard = coerceBooleanProperty(value);\r\n  }\r\n  get clipboard() {\r\n    return this._clipboard;\r\n  }\r\n  _clipboard = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        display: block;\n        width: 100%;\n        padding: 0 16px;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        margin-top: -20px;\n        margin-bottom: 14px;\n        display: block;\n      }\n    \n",
            "accessors": {
                "clipboard": {
                    "name": "clipboard",
                    "setSignature": {
                        "name": "clipboard",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 54,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "clipboard",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                }
            }
        },
        {
            "name": "SelectModule",
            "id": "component-SelectModule-b9bd49054472cc5e2630ecd7237c014251c6c5242ec8368511cb54d16888a6e4f75a7bbc6004f11cb2d35fb9ccd1bd2cbe5bf2518a1f891d6746a7c6ee81fea3",
            "file": "src/stories/forms/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Select\" matLink=\"components/select/api\" />\n\n<mat-form-field>\n  <mat-label>{{ label }}</mat-label>\n  <select>\n    <option *ngFor=\"let item of items; let idx = index\" [value]=\"idx\">{{ item }}</option>\n  </select>\n</mat-form-field>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgFor"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatSelectModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgFor } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  standalone: true,\r\n  imports: [NgFor, SBHeaderModule, MatSelectModule, MatFormFieldModule, MatInputModule],\r\n  template: `\r\n    <sb-header title=\"Select\" matLink=\"components/select/api\" />\r\n\r\n    <mat-form-field>\r\n      <mat-label>{{ label }}</mat-label>\r\n      <select>\r\n        <option *ngFor=\"let item of items; let idx = index\" [value]=\"idx\">{{ item }}</option>\r\n      </select>\r\n    </mat-form-field>\r\n  `\r\n})\r\nexport class SelectModule {\r\n  @Input() label!: string;\r\n  @Input() color!: ThemePalette;\r\n  items = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5'];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SidenavModule",
            "id": "component-SidenavModule-30e2f27d27a292e992ddca5dfa53c5f9360e086fe164558edc498c51e2051c9ac76294dd8da15a9a62195ab4e01b9ab7efd0490577d758b2f87e156faf056b33",
            "file": "src/stories/components/sidenav/sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidenav",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Sidenav\" matLink=\"components/sidenav/api\" />\n\n<mat-sidenav-container class=\"h-[400px] m-4\" [hasBackdrop]=\"hasBackdrop\">\n  <mat-sidenav #sidenav [mode]=\"mode\" [position]=\"position\" opened class=\"p-4\">Sidenav content</mat-sidenav>\n  <mat-sidenav-content class=\"p-4\">\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta itaque necessitatibus impedit labore aut! Iure labore nihil optio\n      facilis minus aliquid pariatur saepe nesciunt nemo perspiciatis. Nam, beatae consequatur! Est.\n    </p>\n    <button mat-raised-button (click)=\"sidenav.toggle()\">Toggle</button>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"over\" | \"push\" | \"side\"",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatSidenavModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatSidenavModule, MatButtonModule],\r\n  template: `\r\n    <sb-header title=\"Sidenav\" matLink=\"components/sidenav/api\" />\r\n\r\n    <mat-sidenav-container class=\"h-[400px] m-4\" [hasBackdrop]=\"hasBackdrop\">\r\n      <mat-sidenav #sidenav [mode]=\"mode\" [position]=\"position\" opened class=\"p-4\">Sidenav content</mat-sidenav>\r\n      <mat-sidenav-content class=\"p-4\">\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta itaque necessitatibus impedit labore aut! Iure labore nihil optio\r\n          facilis minus aliquid pariatur saepe nesciunt nemo perspiciatis. Nam, beatae consequatur! Est.\r\n        </p>\r\n        <button mat-raised-button (click)=\"sidenav.toggle()\">Toggle</button>\r\n      </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n  `,\r\n  styles: []\r\n})\r\nexport class SidenavModule {\r\n  @Input() position!: 'start' | 'end';\r\n  @Input() mode!: 'over' | 'push' | 'side';\r\n  @Input() hasBackdrop!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SliderModule",
            "id": "component-SliderModule-47b4f006af1eeaaecac9e9906016e6d143fc5d590b8c7b4ac79306ba906880219c61c92f306084eebb43f34aa97ffff0e72a0e1e4b1ac2507506cb7df64e5dd2",
            "file": "src/stories/forms/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Slider\" matLink=\"slider\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-slider',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatTabsModule],\r\n  template: ` <sb-header title=\"Slider\" matLink=\"slider\" /> `,\r\n  styles: []\r\n})\r\nexport class SliderModule {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SlideToggleModule",
            "id": "component-SlideToggleModule-277d6cbeb7a1132aa6d83fa5936045ae46be0446be4c811a2c2b18f50f63751c8e022018f958b0b8d5e273cbccae7eeee123241a844bfb0bf28b1661bdea2705",
            "file": "src/stories/forms/slide-toggle/slide-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slide-toggle",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Slide Toggle\" matLink=\"slide-toggle\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-slide-toggle',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule],\r\n  template: ` <sb-header title=\"Slide Toggle\" matLink=\"slide-toggle\" /> `,\r\n  styles: []\r\n})\r\nexport class SlideToggleModule {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SnackbarModule",
            "id": "component-SnackbarModule-2be8dd5f4f62fa77267ce10b7938cf0923a5549a5a48521baaa26dadb8ef2db4105d57527909f089ec2f4a1898773107d05e20e69169b27e50e5eeea4ded1945",
            "file": "src/stories/components/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snackbar",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Snackbar\" matLink=\"components/snackbar/api\" />\n<button class=\"mx-4\" mat-stroked-button (click)=\"openSnackbar()\">[Open snackbar]</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hasAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "xPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"start\" | \"center\" | \"end\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "yPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openSnackbar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatSnackBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  standalone: true,\r\n  imports: [MatButtonModule, SBHeaderModule, MatSnackBarModule],\r\n  styles: [],\r\n  template: `\r\n    <sb-header title=\"Snackbar\" matLink=\"components/snackbar/api\" />\r\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openSnackbar()\">[Open snackbar]</button>\r\n  `\r\n})\r\nexport class SnackbarModule {\r\n  @Input() label!: string;\r\n  @Input() hasAction!: boolean;\r\n  @Input() duration!: number;\r\n  @Input() xPosition!: 'start' | 'center' | 'end' | 'left' | 'right';\r\n  @Input() yPosition!: 'top' | 'bottom';\r\n\r\n  constructor(private snackbar: MatSnackBar) {}\r\n\r\n  openSnackbar() {\r\n    this.snackbar.open(this.label, this.hasAction ? 'Action' : undefined, {\r\n      duration: this.duration ? this.duration : 5000,\r\n      verticalPosition: this.yPosition,\r\n      horizontalPosition: this.xPosition\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TableModule",
            "id": "component-TableModule-107c1f7e7d476cb7ca6d7174cbbbfab5609c4ac79a49a957fb46c65ab1b9e1fa2f814965f412a92eb913821f6cf1b05d7e66f13b7ac88e5f30e549b6b78dca62",
            "file": "src/stories/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [
                "\n      .with-styles .mat-column-position {\n        width: 32px;\n        border-right: 1px solid #ccc;\n        padding-right: 24px;\n        text-align: center;\n      }\n      .with-styles .mat-column-name {\n        background: rgba(0, 0, 0, 0.02);\n      }\n      .with-styles .mat-column-weight {\n        font-weight: 700;\n      }\n      .with-styles .mat-column-symbol {\n        color: var(--mat-primary);\n        text-align: center;\n        width: 32px;\n      }\n    "
            ],
            "template": "<sb-header title=\"Table\" matLink=\"components/table/api\" />\n\n<div class=\"mx-4\">\n  <table mat-table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z1\" [class.with-styles]=\"hasStyles\">\n    <!--- Note that these columns can be defined in any order.\n    The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Weight</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Symbol</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.symbol }}</td>\n    </ng-container>\n\n    <!-- Disclaimer column -->\n    <ng-container matColumnDef=\"disclaimer\">\n      <td mat-footer-cell *matFooterCellDef colspan=\"4\" class=\"p-4\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic quisquam alias, tenetur cumque aliquam fugit doloribus maiores\n        eaque error minima commodi obcaecati esse? Quos odio, magnam eaque dolor eius accusantium!\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n    <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\"></tr>\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"4\">\n        <h1 class=\"p-4\">No data</h1>\n      </td>\n    </tr>\n  </table>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "clear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasStyles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource(ELEMENT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['position', 'name', 'weight', 'symbol']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatTableModule, MatSortModule],\r\n  styles: [\r\n    `\r\n      .with-styles .mat-column-position {\r\n        width: 32px;\r\n        border-right: 1px solid #ccc;\r\n        padding-right: 24px;\r\n        text-align: center;\r\n      }\r\n      .with-styles .mat-column-name {\r\n        background: rgba(0, 0, 0, 0.02);\r\n      }\r\n      .with-styles .mat-column-weight {\r\n        font-weight: 700;\r\n      }\r\n      .with-styles .mat-column-symbol {\r\n        color: var(--mat-primary);\r\n        text-align: center;\r\n        width: 32px;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <sb-header title=\"Table\" matLink=\"components/table/api\" />\r\n\r\n    <div class=\"mx-4\">\r\n      <table mat-table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z1\" [class.with-styles]=\"hasStyles\">\r\n        <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\" sticky>\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"weight\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Weight</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"symbol\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Symbol</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.symbol }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Disclaimer column -->\r\n        <ng-container matColumnDef=\"disclaimer\">\r\n          <td mat-footer-cell *matFooterCellDef colspan=\"4\" class=\"p-4\">\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic quisquam alias, tenetur cumque aliquam fugit doloribus maiores\r\n            eaque error minima commodi obcaecati esse? Quos odio, magnam eaque dolor eius accusantium!\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n        <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">\r\n            <h1 class=\"p-4\">No data</h1>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  `\r\n})\r\nexport class TableModule implements AfterViewInit {\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @Input() hasStyles!: boolean;\r\n  @Input() set clear(value: boolean) {\r\n    if (value) {\r\n      this.dataSource.data = [];\r\n      return;\r\n    }\r\n\r\n    this.dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n  }\r\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .with-styles .mat-column-position {\n        width: 32px;\n        border-right: 1px solid #ccc;\n        padding-right: 24px;\n        text-align: center;\n      }\n      .with-styles .mat-column-name {\n        background: rgba(0, 0, 0, 0.02);\n      }\n      .with-styles .mat-column-weight {\n        font-weight: 700;\n      }\n      .with-styles .mat-column-symbol {\n        color: var(--mat-primary);\n        text-align: center;\n        width: 32px;\n      }\n    \n",
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "clear": {
                    "name": "clear",
                    "setSignature": {
                        "name": "clear",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 108,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "TabsModule",
            "id": "component-TabsModule-a152aa2aed23077f86d0f5cd13222e755bfea30981635346ea00ba728713e8d5ac4162e5701e5e13fc291a45f270f4673af72b497957311f13696f2b376b5e8f",
            "file": "src/stories/components/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Tabs\" matLink=\"components/tabs/api\" />\n\n<div class=\"p-4\">\n  <mat-tab-group\n    [color]=\"color\"\n    [animationDuration]=\"duration\"\n    [fitInkBarToContent]=\"fitInkBarToContent\"\n    [headerPosition]=\"headerPosition\"\n    [mat-stretch-tabs]=\"stretch\"\n    [backgroundColor]=\"backgroundColor\"\n    [color]=\"color\"\n  >\n    <mat-tab label=\"First\">\n      <p class=\"p-4\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n        praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </p>\n    </mat-tab>\n    <mat-tab label=\"Second\">\n      <p class=\"p-4\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n        praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </p>\n    </mat-tab>\n    <mat-tab label=\"Third\">\n      <p class=\"p-4\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\n        praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </p>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "fitInkBarToContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "headerPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "\"below\" | \"above\"",
                    "decorators": []
                },
                {
                    "name": "stretch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatTabsModule],\r\n  template: `\r\n    <sb-header title=\"Tabs\" matLink=\"components/tabs/api\" />\r\n\r\n    <div class=\"p-4\">\r\n      <mat-tab-group\r\n        [color]=\"color\"\r\n        [animationDuration]=\"duration\"\r\n        [fitInkBarToContent]=\"fitInkBarToContent\"\r\n        [headerPosition]=\"headerPosition\"\r\n        [mat-stretch-tabs]=\"stretch\"\r\n        [backgroundColor]=\"backgroundColor\"\r\n        [color]=\"color\"\r\n      >\r\n        <mat-tab label=\"First\">\r\n          <p class=\"p-4\">\r\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\r\n            praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\r\n          </p>\r\n        </mat-tab>\r\n        <mat-tab label=\"Second\">\r\n          <p class=\"p-4\">\r\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\r\n            praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\r\n          </p>\r\n        </mat-tab>\r\n        <mat-tab label=\"Third\">\r\n          <p class=\"p-4\">\r\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio\r\n            praesentium debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\r\n          </p>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class TabsModule {\r\n  @Input() color!: ThemePalette;\r\n  @Input() backgroundColor!: ThemePalette;\r\n  @Input() stretch!: boolean;\r\n  @Input() duration!: number;\r\n  @Input() align!: boolean;\r\n  @Input() fitInkBarToContent!: boolean;\r\n  @Input() headerPosition!: 'below' | 'above';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextareaModule",
            "id": "component-TextareaModule-e09bde22dffeb943f1a78f2308e62eba50b74f7c0603163041cdb57182db0ebe8e43841849c5f4be4886ae7f7727c8f97fe4a238b99afc9b3810ba6fedd9cfe9",
            "file": "src/stories/forms/textarea/textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Textarea\" matLink=\"textarea\" />\n\n<mat-form-field>\n  <mat-label>Textarea</mat-label>\n  <textarea matInput [cdkTextareaAutosize]=\"autoResize\" [cdkAutosizeMinRows]=\"minRows\" [cdkAutosizeMaxRows]=\"maxRows\"></textarea>\n</mat-form-field>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autoResize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-textarea',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatInputModule, MatFormFieldModule],\r\n  template: `\r\n    <sb-header title=\"Textarea\" matLink=\"textarea\" />\r\n\r\n    <mat-form-field>\r\n      <mat-label>Textarea</mat-label>\r\n      <textarea matInput [cdkTextareaAutosize]=\"autoResize\" [cdkAutosizeMinRows]=\"minRows\" [cdkAutosizeMaxRows]=\"maxRows\"></textarea>\r\n    </mat-form-field>\r\n  `,\r\n  styles: []\r\n})\r\nexport class TextareaModule {\r\n  @Input() minRows!: number;\r\n  @Input() maxRows!: number;\r\n  @Input() autoResize!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ToolbarModule",
            "id": "component-ToolbarModule-ba246b7a50b87c3efbc81f0a6799fc1f5c74bc08bbcda448b376f40475b4c4c8b9e0854fd7ad49b8ff6d9bda461fc02f20cc2086d206e762417ba75f02825ddb",
            "file": "src/stories/components/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Toolbar\" matLink=\"components/toolbar/api\" />\n\n<div class=\"mx-5\">\n  <mat-toolbar [color]=\"color\">\n    <mat-toolbar-row>\n      <span>[Left]</span>\n\n      <span class=\"flex-auto\"></span>\n      <button mat-icon-button><mat-icon>fingerprint</mat-icon></button>\n      <button mat-icon-button><mat-icon>view_in_ar</mat-icon></button>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row> [mat-toolbar-row] </mat-toolbar-row>\n  </mat-toolbar>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatToolbarModule, MatIconModule, MatButtonModule],\r\n  template: `\r\n    <sb-header title=\"Toolbar\" matLink=\"components/toolbar/api\" />\r\n\r\n    <div class=\"mx-5\">\r\n      <mat-toolbar [color]=\"color\">\r\n        <mat-toolbar-row>\r\n          <span>[Left]</span>\r\n\r\n          <span class=\"flex-auto\"></span>\r\n          <button mat-icon-button><mat-icon>fingerprint</mat-icon></button>\r\n          <button mat-icon-button><mat-icon>view_in_ar</mat-icon></button>\r\n        </mat-toolbar-row>\r\n\r\n        <mat-toolbar-row> [mat-toolbar-row] </mat-toolbar-row>\r\n      </mat-toolbar>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ToolbarModule {\r\n  @Input() color!: ThemePalette | 'default';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TooltipModule",
            "id": "component-TooltipModule-6fec63eef0610b50fc13cdce2b66a2238074a5af089f583fa5447ad315b7ecf7aba7e4675f5c71bfab89b3fb985841c975b423785c8776c0fe36e0401a7a253c",
            "file": "src/stories/components/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Tooltip\" matLink=\"components/tooltip/api\" />\n\n<div class=\"mx-4\">\n  <button\n    mat-raised-button\n    matTooltip=\"Lorem ipsum dolor\"\n    [matTooltipDisabled]=\"disabled\"\n    [matTooltipHideDelay]=\"hideDelay\"\n    [matTooltipPosition]=\"position\"\n  >\n    [Hover]\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideDelay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"left\" | \"right\" | \"above\" | \"below\" | \"before\" | \"after\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { SBHeaderModule } from '../../assets/sb-header';\r\n\r\n@Component({\r\n  selector: 'app-tooltip',\r\n  standalone: true,\r\n  imports: [CommonModule, SBHeaderModule, MatTooltipModule, MatButtonModule],\r\n  template: `\r\n    <sb-header title=\"Tooltip\" matLink=\"components/tooltip/api\" />\r\n\r\n    <div class=\"mx-4\">\r\n      <button\r\n        mat-raised-button\r\n        matTooltip=\"Lorem ipsum dolor\"\r\n        [matTooltipDisabled]=\"disabled\"\r\n        [matTooltipHideDelay]=\"hideDelay\"\r\n        [matTooltipPosition]=\"position\"\r\n      >\r\n        [Hover]\r\n      </button>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class TooltipModule {\r\n  @Input() disabled!: boolean;\r\n  @Input() hideDelay!: number;\r\n  @Input() position!: 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TypographyModule",
            "id": "component-TypographyModule-1457b4ecd86cbd647ce6cf755b4276e449e29dd8961413bba6de1cac5c94e1baeabc7c5711c4d7f40abc28b7f8de53dcdda3ee3d203c45df0ce799779987998e",
            "file": "src/stories/theme/typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Typography\" />\n\n<div class=\"mx-4\">\n  <h1 class=\"text-{{ color }}\">[h1] abcdefghijklmnopqrstuvwxyz</h1>\n  <h2 class=\"text-{{ color }}\">[h2] abcdefghijklmnopqrstuvwxyz</h2>\n  <h3 class=\"text-{{ color }}\">[h3] abcdefghijklmnopqrstuvwxyz</h3>\n  <h4 class=\"text-{{ color }}\">[h4] abcdefghijklmnopqrstuvwxyz</h4>\n  <h5 class=\"text-{{ color }}\">[h5] abcdefghijklmnopqrstuvwxyz</h5>\n  <h6 class=\"text-{{ color }}\">[h6] abcdefghijklmnopqrstuvwxyz</h6>\n\n  <p class=\"text-{{ color }}\">\n    [p] abcdefghijklmnopqrstuvwxyz Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, aspernatur excepturi nostrum\n    pariatur quam natus dicta exercitationem vel consectetur, culpa inventore adipisci numquam eum deserunt ipsa iure ad, corporis\n    explicabo?\n  </p>\n\n  <label class=\"text-{{ color }}\">[label] abcdefghijklmnopqrstuvwxyz</label>\n  <br />\n  <small class=\"text-{{ color }}\">[small] abcdefghijklmnopqrstuvwxyz</small>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-typography',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Typography\" />\n\n    <div class=\"mx-4\">\n      <h1 class=\"text-{{ color }}\">[h1] abcdefghijklmnopqrstuvwxyz</h1>\n      <h2 class=\"text-{{ color }}\">[h2] abcdefghijklmnopqrstuvwxyz</h2>\n      <h3 class=\"text-{{ color }}\">[h3] abcdefghijklmnopqrstuvwxyz</h3>\n      <h4 class=\"text-{{ color }}\">[h4] abcdefghijklmnopqrstuvwxyz</h4>\n      <h5 class=\"text-{{ color }}\">[h5] abcdefghijklmnopqrstuvwxyz</h5>\n      <h6 class=\"text-{{ color }}\">[h6] abcdefghijklmnopqrstuvwxyz</h6>\n\n      <p class=\"text-{{ color }}\">\n        [p] abcdefghijklmnopqrstuvwxyz Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, aspernatur excepturi nostrum\n        pariatur quam natus dicta exercitationem vel consectetur, culpa inventore adipisci numquam eum deserunt ipsa iure ad, corporis\n        explicabo?\n      </p>\n\n      <label class=\"text-{{ color }}\">[label] abcdefghijklmnopqrstuvwxyz</label>\n      <br />\n      <small class=\"text-{{ color }}\">[small] abcdefghijklmnopqrstuvwxyz</small>\n    </div>\n  `\n})\nexport class TypographyModule {\n  @Input() color!: ThemePalette | 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a5ab16d5fdd77ae5761eed0d9bb59ff3cd28a70ea40be79c4aaaff027b46791619245c0742b5483a46ce34b29eba54714c32a5fc7c097e7470617ce6e2696a26",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, AppRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-19f9b93b406581c4eeba9376fbdda8417c0f9120be46945392e67eab7f7120b1cd9a3eb39a618425296417a896bb7b806ab3a2097d6e4e3ea5079ede7ba39406",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<BadgeModule>",
                "defaultValue": "{\r\n  label: '0',\r\n  color: 'primary',\r\n  size: 'medium',\r\n  position: 'above after',\r\n  disabled: false,\r\n  overlap: false,\r\n  hidden: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ButtonModule>",
                "defaultValue": "{\r\n  label: '[Button]',\r\n  disabled: false,\r\n  color: 'default',\r\n  type: 'default'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<BottomSheetModule>",
                "defaultValue": "{\r\n  hasBackdrop: true\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<CardModule>",
                "defaultValue": "{\r\n  title: true,\r\n  subtitle: true,\r\n  content: true,\r\n  actions: true,\r\n  footer: true,\r\n  avatar: true,\r\n  image: true,\r\n  media: true,\r\n  mediaSize: 'md',\r\n  align: 'start',\r\n  appearance: 'outlined'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ChipsModule>",
                "defaultValue": "{\r\n  color: 'default',\r\n  hideSingle: false,\r\n  multiple: true,\r\n  selectable: true,\r\n  highlighted: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DividerModule>",
                "defaultValue": "{\r\n  inset: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ExpansionModule>",
                "defaultValue": "{\r\n  toggle: true,\r\n  description: true,\r\n  disabled: false,\r\n  multi: false,\r\n  expanded: false,\r\n  displayMode: 'default',\r\n  togglePosition: 'before'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<MenuModule>",
                "defaultValue": "{\r\n  yPosition: 'below',\r\n  xPosition: 'after',\r\n  hasBackdrop: true,\r\n  overlapTrigger: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ProgressBarModule>",
                "defaultValue": "{\r\n  /*  value: 50,\r\n  buffer: 75,\r\n  color: 'default',\r\n  mode: 'determinate' */\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ProgressSpinnerModule>",
                "defaultValue": "{\r\n  value: 50,\r\n  diameter: 100,\r\n  strokeWidth: 10,\r\n  mode: 'determinate',\r\n  color: 'primary'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SidenavModule>",
                "defaultValue": "{\r\n  position: 'start',\r\n  mode: 'over',\r\n  hasBackdrop: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SnackbarModule>",
                "defaultValue": "{\r\n  label: 'Lorem ipsum dolor.',\r\n  xPosition: 'center',\r\n  yPosition: 'bottom',\r\n  duration: 5000,\r\n  hasAction: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TableModule>",
                "defaultValue": "{\r\n  hasStyles: false,\r\n  clear: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TabsModule>",
                "defaultValue": "{\r\n  color: 'primary',\r\n  backgroundColor: 'primary',\r\n  stretch: true,\r\n  duration: 100,\r\n  align: true,\r\n  fitInkBarToContent: true,\r\n  headerPosition: 'above'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ToolbarModule>",
                "defaultValue": "{\r\n  color: 'default'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TooltipModule>",
                "defaultValue": "{\r\n  disabled: false,\r\n  hideDelay: 0,\r\n  position: 'right'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<AutocompleteModule>",
                "defaultValue": "{\r\n  autoActiveFirstOption: false\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<CheckboxModule>",
                "defaultValue": "{\r\n  stacked: false,\r\n  indeterminate: false,\r\n  color: 'default',\r\n  labelPosition: 'after'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DatePickerModule>",
                "defaultValue": "{\r\n  color: 'primary',\r\n  open: false,\r\n  startView: 'month',\r\n  touchUi: false,\r\n  disabled: false,\r\n  inline: false,\r\n  xPosition: 'start',\r\n  yPosition: 'below'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<FormFieldModule>",
                "defaultValue": "{\r\n  label: 'Label',\r\n  hint: 'Hint',\r\n  hintPosition: 'start',\r\n  icon: false,\r\n  appearance: 'fill',\r\n  color: 'primary',\r\n  floatLabel: 'auto'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<RadioButtonModule>",
                "defaultValue": "{\r\n  color: 'primary',\r\n  disabled: false,\r\n  stacked: false,\r\n  labelPosition: 'after'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SelectModule>",
                "defaultValue": "{\r\n  label: '[Label]',\r\n  color: 'primary'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SlideToggleModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SliderModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TextareaModule>",
                "defaultValue": "{\r\n  minRows: 1,\r\n  maxRows: 5,\r\n  autoResize: true\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ElevationModule>",
                "defaultValue": "{\r\n  elevation: 12\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<GridModule>",
                "defaultValue": "{\r\n  cols: 5,\r\n  colOne: 2,\r\n  rowOne: 1,\r\n  colTwo: 1,\r\n  rowTwo: 2,\r\n  colThree: 1,\r\n  rowThree: 1,\r\n  colFour: 2,\r\n  rowFour: 1\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<RipplesModule>",
                "defaultValue": "{\r\n  centered: false,\r\n  disabled: false,\r\n  unbounded: false,\r\n  color: false,\r\n  radius: 0\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ColorsModule>",
                "defaultValue": "{\r\n  color: 'primary'\r\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TypographyModule>",
                "defaultValue": "{\r\n  color: 'default'\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<BadgeModule>",
                "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  color: {\r\n    options: ['primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  size: {\r\n    options: ['small', 'medium', 'large'],\r\n    control: { type: 'radio' },\r\n    name: 'Size'\r\n  },\r\n  position: {\r\n    options: ['above after', 'above before', 'below before', 'below after', 'before', 'after', 'above', 'below'],\r\n    control: { type: 'select' },\r\n    name: 'Position'\r\n  },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  overlap: { control: { type: 'boolean' }, name: 'Overlay' },\r\n  hidden: { control: { type: 'boolean' }, name: 'Hidden' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ButtonModule>",
                "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  type: {\r\n    options: ['default', 'flat', 'stroked', 'raised'],\r\n    control: { type: 'radio' },\r\n    name: 'Button type'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<BottomSheetModule>",
                "defaultValue": "{\r\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Backdrop' },\r\n  openBottomSheet: { table: { disable: true } },\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<CardModule>",
                "defaultValue": "{\r\n  title: { control: { type: 'boolean' }, name: 'Has title' },\r\n  subtitle: { control: { type: 'boolean' }, name: 'Has subtitle' },\r\n  content: { control: { type: 'boolean' }, name: 'Has content' },\r\n  actions: { control: { type: 'boolean' }, name: 'Has actions' },\r\n  footer: { control: { type: 'boolean' }, name: 'Has footer' },\r\n  avatar: { control: { type: 'boolean' }, name: 'Has avatar' },\r\n  image: { control: { type: 'boolean' }, name: 'Has image' },\r\n  media: { control: { type: 'boolean' }, name: 'Has media' },\r\n  mediaSize: {\r\n    options: ['xl', 'lg', 'md', 'sm'],\r\n    control: { type: 'radio' },\r\n    name: 'Media size'\r\n  },\r\n  align: {\r\n    options: ['start', 'end'],\r\n    control: { type: 'radio' },\r\n    name: 'Align actions'\r\n  },\r\n  appearance: {\r\n    options: ['outlined', 'raised'],\r\n    control: { type: 'radio' },\r\n    name: 'Appearance'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ChipsModule>",
                "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  hideSingle: { control: { type: 'boolean' }, name: 'Hide Single Selection Indicator' },\r\n  multiple: { control: { type: 'boolean' }, name: 'Select Multiple' },\r\n  selectable: { control: { type: 'boolean' }, name: 'Selectable' },\r\n  highlighted: { control: { type: 'boolean' }, name: 'Highlighted' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<DividerModule>",
                "defaultValue": "{\r\n  inset: { control: { type: 'boolean' }, name: 'Inset' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ExpansionModule>",
                "defaultValue": "{\r\n  toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\r\n  description: { control: { type: 'boolean' }, name: 'Has description' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  multi: { control: { type: 'boolean' }, name: 'Open more than one panel' },\r\n  expanded: { control: { type: 'boolean' }, name: 'Expand' },\r\n  displayMode: {\r\n    options: ['default', 'flat'],\r\n    control: { type: 'radio' },\r\n    name: 'Display mode'\r\n  },\r\n  togglePosition: {\r\n    options: ['before', 'after'],\r\n    control: { type: 'radio' },\r\n    name: 'Toggle position'\r\n  },\r\n  opened: { action: 'opened', table: { disable: true } },\r\n  closed: { action: 'closed', table: { disable: true } }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<MenuModule>",
                "defaultValue": "{\r\n  yPosition: {\r\n    options: ['above', 'below'],\r\n    control: { type: 'radio' },\r\n    name: 'Y position'\r\n  },\r\n  xPosition: {\r\n    options: ['before', 'after'],\r\n    control: { type: 'radio' },\r\n    name: 'X position'\r\n  },\r\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' },\r\n  overlapTrigger: { control: { type: 'boolean' }, name: 'Overlap trigger' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ProgressBarModule>",
                "defaultValue": "{\r\n  /* value: { control: { type: 'range', min: 0, max: 100 }, name: 'Value' },\r\n  buffer: { control: { type: 'range', min: 0, max: 100 }, name: 'Buffer' },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  mode: {\r\n    options: ['determinate', 'indeterminate', 'buffer', 'query'],\r\n    control: { type: 'radio' },\r\n    name: 'Mode'\r\n  } */\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ProgressSpinnerModule>",
                "defaultValue": "{\r\n  value: { control: { type: 'range', max: '100', min: 10 }, name: 'Value' },\r\n  diameter: { control: { type: 'range', max: '400', min: 70 }, name: 'Diameter' },\r\n  strokeWidth: { control: { type: 'range', max: '20', min: 1 }, name: 'Stroke width' },\r\n  mode: {\r\n    options: ['determinate', 'indeterminate'],\r\n    control: { type: 'radio' },\r\n    name: 'Mode'\r\n  },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SidenavModule>",
                "defaultValue": "{\r\n  position: {\r\n    options: ['start', 'end'],\r\n    control: { type: 'radio' },\r\n    name: 'Position'\r\n  },\r\n  mode: {\r\n    options: ['over', 'push', 'side'],\r\n    control: { type: 'radio' },\r\n    name: 'Mode'\r\n  },\r\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SnackbarModule>",
                "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  hasAction: { control: { type: 'boolean' }, name: 'Has action' },\r\n  duration: { control: { type: 'range', step: 1000, min: 1000, max: 10000 }, name: 'Duration' },\r\n  xPosition: {\r\n    options: ['start', 'center', 'end', 'left', 'right'],\r\n    control: { type: 'radio' },\r\n    name: 'X position'\r\n  },\r\n  yPosition: {\r\n    options: ['top', 'bottom'],\r\n    control: { type: 'radio' },\r\n    name: 'Y position'\r\n  },\r\n  openSnackbar: { table: { disable: true } }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TableModule>",
                "defaultValue": "{\r\n  hasStyles: { control: { type: 'boolean' }, name: 'Has styles' },\r\n  clear: { control: { type: 'boolean' }, name: 'Clear data' },\r\n  displayedColumns: { table: { disable: true } },\r\n  dataSource: { table: { disable: true } },\r\n  ngAfterViewInit: { table: { disable: true } },\r\n  sort: { table: { disable: true } }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TabsModule>",
                "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  backgroundColor: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Background color'\r\n  },\r\n  stretch: { control: { type: 'boolean' }, name: 'Stretch' },\r\n  duration: { control: { type: 'range', step: 100, max: 1000 }, name: 'Animation duration' },\r\n  align: { control: { type: 'boolean' }, name: 'Align' },\r\n  fitInkBarToContent: { control: { type: 'boolean' }, name: 'Fit ink bar to content' },\r\n  headerPosition: { control: { type: 'select', options: ['below', 'above'] }, name: 'Header position' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ToolbarModule>",
                "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TooltipModule>",
                "defaultValue": "{\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  hideDelay: { control: { type: 'range', step: 500, min: 0, max: 5000 }, name: 'Hide delay' },\r\n  position: { control: { type: 'select', options: ['left', 'right', 'above', 'below', 'before', 'after'] }, name: 'Position' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<AutocompleteModule>",
                "defaultValue": "{\r\n  autoActiveFirstOption: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  _filter: { table: { disable: true } },\r\n  ngOnInit: { table: { disable: true } },\r\n  options: { table: { disable: true } },\r\n  myControl: { table: { disable: true } },\r\n  filteredOptions: { table: { disable: true } }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<CheckboxModule>",
                "defaultValue": "{\r\n  stacked: { control: { type: 'boolean' }, name: 'Stacked' },\r\n  indeterminate: { control: { type: 'boolean' }, name: 'Stacked' },\r\n  labelPosition: {\r\n    options: ['after', 'before'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<DatePickerModule>",
                "defaultValue": "{\r\n  color: { options: ['primary', 'accent', 'warn'], control: { type: 'radio' }, name: 'Color' },\r\n  startView: { options: ['month', 'year', 'multi-year'], control: { type: 'radio' }, name: 'Start View' },\r\n  open: { control: { type: 'boolean' }, name: 'Open' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  inline: { control: { type: 'boolean' }, name: 'Inline' },\r\n  touchUi: { control: { type: 'boolean' }, name: 'Responsive' },\r\n  xPosition: { options: ['start', 'end'], control: { type: 'radio' }, name: 'X Position' },\r\n  yPosition: { options: ['above', 'below'], control: { type: 'radio' }, name: 'Y Position' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<FormFieldModule>",
                "defaultValue": "{\r\n  color: { options: ['primary', 'accent', 'warn'], control: { type: 'radio' }, name: 'Color' },\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  hint: { control: { type: 'text' }, name: 'Label' },\r\n  hintPosition: { options: ['start', 'end'], control: { type: 'radio' }, name: 'Hint position' },\r\n  icon: { control: { type: 'boolean' }, name: 'Icon' },\r\n  appearance: { options: ['outline', 'fill'], control: { type: 'radio' }, name: 'Appearance' },\r\n  floatLabel: { options: ['auto', 'always', 'never'], control: { type: 'radio' }, name: 'Float label' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<RadioButtonModule>",
                "defaultValue": "{\r\n  color: { options: ['primary', 'accent', 'warn'], control: { type: 'radio' }, name: 'Color' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  stacked: { control: { type: 'boolean' }, name: 'Stacked' },\r\n  labelPosition: { options: ['after', 'before'], control: { type: 'radio' }, name: 'Label position' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SelectModule>",
                "defaultValue": "{\r\n  color: { options: ['primary', 'accent', 'warn'], control: { type: 'radio' }, name: 'Color' },\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  items: { table: { disable: true } }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SlideToggleModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SliderModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TextareaModule>",
                "defaultValue": "{\r\n  minRows: { control: { type: 'range', max: '20', min: 1 }, name: 'Min rows' },\r\n  maxRows: { control: { type: 'range', max: '20', min: 1 }, name: 'Max rows' },\r\n  autoResize: { control: { type: 'boolean' }, name: 'Auto resize' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ClipModule>",
                "defaultValue": "{\r\n  text: { table: { disable: true } },\r\n  textValue: { table: { disable: true } },\r\n  textCopy: { table: { disable: true } },\r\n  copied: { table: { disable: true } }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ElevationModule>",
                "defaultValue": "{\r\n  elevation: { control: { type: 'range', max: 24, min: 0 }, name: 'Elevation' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<GridModule>",
                "defaultValue": "{\r\n  tiles: { table: { disable: true } },\r\n  ngOnInit: { table: { disable: true } },\r\n  cols: { control: { type: 'range', max: 5, min: 1 }, name: 'Columns' },\r\n  colOne: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 1' },\r\n  rowOne: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 1' },\r\n  colTwo: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 2' },\r\n  rowTwo: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 2' },\r\n  colThree: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 3' },\r\n  rowThree: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 3' },\r\n  colFour: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 4' },\r\n  rowFour: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 4' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<RipplesModule>",
                "defaultValue": "{\r\n  centered: { control: { type: 'boolean' }, name: 'Centered' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  unbounded: { control: { type: 'boolean' }, name: 'Unbounded' },\r\n  color: { control: { type: 'boolean' }, name: 'Color (rgba)' },\r\n  radius: { control: { type: 'range', max: 400, min: 0 }, name: 'Radius' }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ColorsModule>",
                "defaultValue": "{\r\n  color: {\r\n    options: ['primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TypographyModule>",
                "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
            },
            {
                "name": "Autocomplete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Badge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "BottomSheet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Chips",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Clipboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "DatePicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Divider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\r\n]"
            },
            {
                "name": "Elevation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Expansion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "FormField",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Grid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeModule>",
                "defaultValue": "{\r\n  title: 'Components/Badge',\r\n  component: BadgeModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonModule>",
                "defaultValue": "{\r\n  title: 'Components/Button',\r\n  component: ButtonModule,\r\n  parameters: {\r\n    options: { showPanel: true }\r\n  },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BottomSheetModule>",
                "defaultValue": "{\r\n  title: 'Components/Bottom Sheet',\r\n  component: BottomSheetModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardModule>",
                "defaultValue": "{\r\n  title: 'Components/Card',\r\n  component: CardModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChipsModule>",
                "defaultValue": "{\r\n  title: 'Components/Chips',\r\n  component: ChipsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DividerModule>",
                "defaultValue": "{\r\n  title: 'Components/Divider',\r\n  component: DividerModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ExpansionModule>",
                "defaultValue": "{\r\n  title: 'Components/Expansion',\r\n  component: ExpansionModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuModule>",
                "defaultValue": "{\r\n  title: 'Components/Menu',\r\n  component: MenuModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressBarModule>",
                "defaultValue": "{\r\n  title: 'Components/Progress Bar',\r\n  component: ProgressBarModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\r\n  /*  argTypes */\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressSpinnerModule>",
                "defaultValue": "{\r\n  title: 'Components/Progress Spinner',\r\n  component: ProgressSpinnerModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SidenavModule>",
                "defaultValue": "{\r\n  title: 'Components/Sidenav',\r\n  component: SidenavModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SnackbarModule>",
                "defaultValue": "{\r\n  title: 'Components/Snackbar',\r\n  component: SnackbarModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableModule>",
                "defaultValue": "{\r\n  title: 'Components/Table',\r\n  component: TableModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabsModule>",
                "defaultValue": "{\r\n  title: 'Components/Tabs',\r\n  component: TabsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToolbarModule>",
                "defaultValue": "{\r\n  title: 'Components/Toolbar',\r\n  component: ToolbarModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipModule>",
                "defaultValue": "{\r\n  title: 'Components/Tooltip',\r\n  component: TooltipModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AutocompleteModule>",
                "defaultValue": "{\r\n  title: 'Forms/Autocomplete',\r\n  component: AutocompleteModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxModule>",
                "defaultValue": "{\r\n  title: 'forms/Checkbox',\r\n  component: CheckboxModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerModule>",
                "defaultValue": "{\r\n  title: 'Forms/Date Picker',\r\n  component: DatePickerModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormFieldModule>",
                "defaultValue": "{\r\n  title: 'Forms/Form Field',\r\n  component: FormFieldModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioButtonModule>",
                "defaultValue": "{\r\n  title: 'Forms/Radio Button',\r\n  component: RadioButtonModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectModule>",
                "defaultValue": "{\r\n  title: 'Forms/Select',\r\n  component: SelectModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SlideToggleModule>",
                "defaultValue": "{\r\n  title: 'Forms/Slide Toggle',\r\n  component: SlideToggleModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\r\n  /* argTypes */\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SliderModule>",
                "defaultValue": "{\r\n  title: 'Forms/Slider',\r\n  component: SliderModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\r\n  /* argTypes */\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaModule>",
                "defaultValue": "{\r\n  title: 'Forms/Textarea',\r\n  component: TextareaModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ClipModule>",
                "defaultValue": "{\r\n  title: 'Helpers/Clipboard',\r\n  component: ClipModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ElevationModule>",
                "defaultValue": "{\r\n  title: 'Helpers/Elevation',\r\n  component: ElevationModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<GridModule>",
                "defaultValue": "{\r\n  title: 'Helpers/Grid',\r\n  component: GridModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RipplesModule>",
                "defaultValue": "{\r\n  title: 'Helpers/Ripples',\r\n  component: RipplesModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorsModule>",
                "defaultValue": "{\r\n  title: 'Theme/Colors',\r\n  component: ColorsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TypographyModule>",
                "defaultValue": "{\r\n  title: 'Theme/Typography',\r\n  component: TypographyModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    }\n  }\n}"
            },
            {
                "name": "ProgressBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "ProgressSpinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "RadioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  /* args */\r\n}"
            },
            {
                "name": "Ripples",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Sidenav",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Slider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  /* args */\r\n}"
            },
            {
                "name": "SlideToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  /* args */\r\n}"
            },
            {
                "name": "Snackbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Tabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  /* args */\r\n}"
            },
            {
                "name": "Toolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args\r\n}"
            },
            {
                "name": "Typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeModule>",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonModule>",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BottomSheetModule>",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardModule>",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChipsModule>",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DividerModule>",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ExpansionModule>",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuModule>",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressBarModule>",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressSpinnerModule>",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SidenavModule>",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SnackbarModule>",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableModule>",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsModule>",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToolbarModule>",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipModule>",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AutocompleteModule>",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxModule>",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerModule>",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormFieldModule>",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioButtonModule>",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectModule>",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SlideToggleModule>",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SliderModule>",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaModule>",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ClipModule>",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ElevationModule>",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<GridModule>",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RipplesModule>",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorsModule>",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TypographyModule>",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/components/badge/badge.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<BadgeModule>",
                    "defaultValue": "{\r\n  label: '0',\r\n  color: 'primary',\r\n  size: 'medium',\r\n  position: 'above after',\r\n  disabled: false,\r\n  overlap: false,\r\n  hidden: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<BadgeModule>",
                    "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  color: {\r\n    options: ['primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  size: {\r\n    options: ['small', 'medium', 'large'],\r\n    control: { type: 'radio' },\r\n    name: 'Size'\r\n  },\r\n  position: {\r\n    options: ['above after', 'above before', 'below before', 'below after', 'before', 'after', 'above', 'below'],\r\n    control: { type: 'select' },\r\n    name: 'Position'\r\n  },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  overlap: { control: { type: 'boolean' }, name: 'Overlay' },\r\n  hidden: { control: { type: 'boolean' }, name: 'Hidden' }\r\n}"
                },
                {
                    "name": "Badge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeModule>",
                    "defaultValue": "{\r\n  title: 'Components/Badge',\r\n  component: BadgeModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/button/button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ButtonModule>",
                    "defaultValue": "{\r\n  label: '[Button]',\r\n  disabled: false,\r\n  color: 'default',\r\n  type: 'default'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ButtonModule>",
                    "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  type: {\r\n    options: ['default', 'flat', 'stroked', 'raised'],\r\n    control: { type: 'radio' },\r\n    name: 'Button type'\r\n  }\r\n}"
                },
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonModule>",
                    "defaultValue": "{\r\n  title: 'Components/Button',\r\n  component: ButtonModule,\r\n  parameters: {\r\n    options: { showPanel: true }\r\n  },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/bottom-sheet/bottom-sheet.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<BottomSheetModule>",
                    "defaultValue": "{\r\n  hasBackdrop: true\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<BottomSheetModule>",
                    "defaultValue": "{\r\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Backdrop' },\r\n  openBottomSheet: { table: { disable: true } },\r\n}"
                },
                {
                    "name": "BottomSheet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BottomSheetModule>",
                    "defaultValue": "{\r\n  title: 'Components/Bottom Sheet',\r\n  component: BottomSheetModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/card/card.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CardModule>",
                    "defaultValue": "{\r\n  title: true,\r\n  subtitle: true,\r\n  content: true,\r\n  actions: true,\r\n  footer: true,\r\n  avatar: true,\r\n  image: true,\r\n  media: true,\r\n  mediaSize: 'md',\r\n  align: 'start',\r\n  appearance: 'outlined'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<CardModule>",
                    "defaultValue": "{\r\n  title: { control: { type: 'boolean' }, name: 'Has title' },\r\n  subtitle: { control: { type: 'boolean' }, name: 'Has subtitle' },\r\n  content: { control: { type: 'boolean' }, name: 'Has content' },\r\n  actions: { control: { type: 'boolean' }, name: 'Has actions' },\r\n  footer: { control: { type: 'boolean' }, name: 'Has footer' },\r\n  avatar: { control: { type: 'boolean' }, name: 'Has avatar' },\r\n  image: { control: { type: 'boolean' }, name: 'Has image' },\r\n  media: { control: { type: 'boolean' }, name: 'Has media' },\r\n  mediaSize: {\r\n    options: ['xl', 'lg', 'md', 'sm'],\r\n    control: { type: 'radio' },\r\n    name: 'Media size'\r\n  },\r\n  align: {\r\n    options: ['start', 'end'],\r\n    control: { type: 'radio' },\r\n    name: 'Align actions'\r\n  },\r\n  appearance: {\r\n    options: ['outlined', 'raised'],\r\n    control: { type: 'radio' },\r\n    name: 'Appearance'\r\n  }\r\n}"
                },
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardModule>",
                    "defaultValue": "{\r\n  title: 'Components/Card',\r\n  component: CardModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/chips/chips.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChipsModule>",
                    "defaultValue": "{\r\n  color: 'default',\r\n  hideSingle: false,\r\n  multiple: true,\r\n  selectable: true,\r\n  highlighted: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ChipsModule>",
                    "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  hideSingle: { control: { type: 'boolean' }, name: 'Hide Single Selection Indicator' },\r\n  multiple: { control: { type: 'boolean' }, name: 'Select Multiple' },\r\n  selectable: { control: { type: 'boolean' }, name: 'Selectable' },\r\n  highlighted: { control: { type: 'boolean' }, name: 'Highlighted' }\r\n}"
                },
                {
                    "name": "Chips",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChipsModule>",
                    "defaultValue": "{\r\n  title: 'Components/Chips',\r\n  component: ChipsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/divider/divider.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DividerModule>",
                    "defaultValue": "{\r\n  inset: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<DividerModule>",
                    "defaultValue": "{\r\n  inset: { control: { type: 'boolean' }, name: 'Inset' }\r\n}"
                },
                {
                    "name": "Divider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DividerModule>",
                    "defaultValue": "{\r\n  title: 'Components/Divider',\r\n  component: DividerModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/expansion/expansion.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ExpansionModule>",
                    "defaultValue": "{\r\n  toggle: true,\r\n  description: true,\r\n  disabled: false,\r\n  multi: false,\r\n  expanded: false,\r\n  displayMode: 'default',\r\n  togglePosition: 'before'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ExpansionModule>",
                    "defaultValue": "{\r\n  toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\r\n  description: { control: { type: 'boolean' }, name: 'Has description' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  multi: { control: { type: 'boolean' }, name: 'Open more than one panel' },\r\n  expanded: { control: { type: 'boolean' }, name: 'Expand' },\r\n  displayMode: {\r\n    options: ['default', 'flat'],\r\n    control: { type: 'radio' },\r\n    name: 'Display mode'\r\n  },\r\n  togglePosition: {\r\n    options: ['before', 'after'],\r\n    control: { type: 'radio' },\r\n    name: 'Toggle position'\r\n  },\r\n  opened: { action: 'opened', table: { disable: true } },\r\n  closed: { action: 'closed', table: { disable: true } }\r\n}"
                },
                {
                    "name": "Expansion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ExpansionModule>",
                    "defaultValue": "{\r\n  title: 'Components/Expansion',\r\n  component: ExpansionModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<MenuModule>",
                    "defaultValue": "{\r\n  yPosition: 'below',\r\n  xPosition: 'after',\r\n  hasBackdrop: true,\r\n  overlapTrigger: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<MenuModule>",
                    "defaultValue": "{\r\n  yPosition: {\r\n    options: ['above', 'below'],\r\n    control: { type: 'radio' },\r\n    name: 'Y position'\r\n  },\r\n  xPosition: {\r\n    options: ['before', 'after'],\r\n    control: { type: 'radio' },\r\n    name: 'X position'\r\n  },\r\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' },\r\n  overlapTrigger: { control: { type: 'boolean' }, name: 'Overlap trigger' }\r\n}"
                },
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuModule>",
                    "defaultValue": "{\r\n  title: 'Components/Menu',\r\n  component: MenuModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/progress-bar/progress-bar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ProgressBarModule>",
                    "defaultValue": "{\r\n  /*  value: 50,\r\n  buffer: 75,\r\n  color: 'default',\r\n  mode: 'determinate' */\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ProgressBarModule>",
                    "defaultValue": "{\r\n  /* value: { control: { type: 'range', min: 0, max: 100 }, name: 'Value' },\r\n  buffer: { control: { type: 'range', min: 0, max: 100 }, name: 'Buffer' },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  mode: {\r\n    options: ['determinate', 'indeterminate', 'buffer', 'query'],\r\n    control: { type: 'radio' },\r\n    name: 'Mode'\r\n  } */\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressBarModule>",
                    "defaultValue": "{\r\n  title: 'Components/Progress Bar',\r\n  component: ProgressBarModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\r\n  /*  argTypes */\r\n}"
                },
                {
                    "name": "ProgressBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/components/progress-spinner/progress-spinner.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ProgressSpinnerModule>",
                    "defaultValue": "{\r\n  value: 50,\r\n  diameter: 100,\r\n  strokeWidth: 10,\r\n  mode: 'determinate',\r\n  color: 'primary'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ProgressSpinnerModule>",
                    "defaultValue": "{\r\n  value: { control: { type: 'range', max: '100', min: 10 }, name: 'Value' },\r\n  diameter: { control: { type: 'range', max: '400', min: 70 }, name: 'Diameter' },\r\n  strokeWidth: { control: { type: 'range', max: '20', min: 1 }, name: 'Stroke width' },\r\n  mode: {\r\n    options: ['determinate', 'indeterminate'],\r\n    control: { type: 'radio' },\r\n    name: 'Mode'\r\n  },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressSpinnerModule>",
                    "defaultValue": "{\r\n  title: 'Components/Progress Spinner',\r\n  component: ProgressSpinnerModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                },
                {
                    "name": "ProgressSpinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                }
            ],
            "src/stories/components/sidenav/sidenav.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SidenavModule>",
                    "defaultValue": "{\r\n  position: 'start',\r\n  mode: 'over',\r\n  hasBackdrop: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SidenavModule>",
                    "defaultValue": "{\r\n  position: {\r\n    options: ['start', 'end'],\r\n    control: { type: 'radio' },\r\n    name: 'Position'\r\n  },\r\n  mode: {\r\n    options: ['over', 'push', 'side'],\r\n    control: { type: 'radio' },\r\n    name: 'Mode'\r\n  },\r\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SidenavModule>",
                    "defaultValue": "{\r\n  title: 'Components/Sidenav',\r\n  component: SidenavModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                },
                {
                    "name": "Sidenav",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                }
            ],
            "src/stories/components/snackbar/snackbar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SnackbarModule>",
                    "defaultValue": "{\r\n  label: 'Lorem ipsum dolor.',\r\n  xPosition: 'center',\r\n  yPosition: 'bottom',\r\n  duration: 5000,\r\n  hasAction: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SnackbarModule>",
                    "defaultValue": "{\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  hasAction: { control: { type: 'boolean' }, name: 'Has action' },\r\n  duration: { control: { type: 'range', step: 1000, min: 1000, max: 10000 }, name: 'Duration' },\r\n  xPosition: {\r\n    options: ['start', 'center', 'end', 'left', 'right'],\r\n    control: { type: 'radio' },\r\n    name: 'X position'\r\n  },\r\n  yPosition: {\r\n    options: ['top', 'bottom'],\r\n    control: { type: 'radio' },\r\n    name: 'Y position'\r\n  },\r\n  openSnackbar: { table: { disable: true } }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SnackbarModule>",
                    "defaultValue": "{\r\n  title: 'Components/Snackbar',\r\n  component: SnackbarModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                },
                {
                    "name": "Snackbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/components/table/table.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TableModule>",
                    "defaultValue": "{\r\n  hasStyles: false,\r\n  clear: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TableModule>",
                    "defaultValue": "{\r\n  hasStyles: { control: { type: 'boolean' }, name: 'Has styles' },\r\n  clear: { control: { type: 'boolean' }, name: 'Clear data' },\r\n  displayedColumns: { table: { disable: true } },\r\n  dataSource: { table: { disable: true } },\r\n  ngAfterViewInit: { table: { disable: true } },\r\n  sort: { table: { disable: true } }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableModule>",
                    "defaultValue": "{\r\n  title: 'Components/Table',\r\n  component: TableModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/components/tabs/tabs.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TabsModule>",
                    "defaultValue": "{\r\n  color: 'primary',\r\n  backgroundColor: 'primary',\r\n  stretch: true,\r\n  duration: 100,\r\n  align: true,\r\n  fitInkBarToContent: true,\r\n  headerPosition: 'above'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TabsModule>",
                    "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  backgroundColor: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Background color'\r\n  },\r\n  stretch: { control: { type: 'boolean' }, name: 'Stretch' },\r\n  duration: { control: { type: 'range', step: 100, max: 1000 }, name: 'Animation duration' },\r\n  align: { control: { type: 'boolean' }, name: 'Align' },\r\n  fitInkBarToContent: { control: { type: 'boolean' }, name: 'Fit ink bar to content' },\r\n  headerPosition: { control: { type: 'select', options: ['below', 'above'] }, name: 'Header position' }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabsModule>",
                    "defaultValue": "{\r\n  title: 'Components/Tabs',\r\n  component: TabsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                },
                {
                    "name": "Tabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/components/toolbar/toolbar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ToolbarModule>",
                    "defaultValue": "{\r\n  color: 'default'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ToolbarModule>",
                    "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToolbarModule>",
                    "defaultValue": "{\r\n  title: 'Components/Toolbar',\r\n  component: ToolbarModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                },
                {
                    "name": "Toolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                }
            ],
            "src/stories/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TooltipModule>",
                    "defaultValue": "{\r\n  disabled: false,\r\n  hideDelay: 0,\r\n  position: 'right'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TooltipModule>",
                    "defaultValue": "{\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  hideDelay: { control: { type: 'range', step: 500, min: 0, max: 5000 }, name: 'Hide delay' },\r\n  position: { control: { type: 'select', options: ['left', 'right', 'above', 'below', 'before', 'after'] }, name: 'Position' }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipModule>",
                    "defaultValue": "{\r\n  title: 'Components/Tooltip',\r\n  component: TooltipModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                }
            ],
            "src/stories/forms/autocomplete/autocomplete.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<AutocompleteModule>",
                    "defaultValue": "{\r\n  autoActiveFirstOption: false\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<AutocompleteModule>",
                    "defaultValue": "{\r\n  autoActiveFirstOption: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  _filter: { table: { disable: true } },\r\n  ngOnInit: { table: { disable: true } },\r\n  options: { table: { disable: true } },\r\n  myControl: { table: { disable: true } },\r\n  filteredOptions: { table: { disable: true } }\r\n}"
                },
                {
                    "name": "Autocomplete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AutocompleteModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Autocomplete',\r\n  component: AutocompleteModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/forms/checkbox/checkbox.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CheckboxModule>",
                    "defaultValue": "{\r\n  stacked: false,\r\n  indeterminate: false,\r\n  color: 'default',\r\n  labelPosition: 'after'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<CheckboxModule>",
                    "defaultValue": "{\r\n  stacked: { control: { type: 'boolean' }, name: 'Stacked' },\r\n  indeterminate: { control: { type: 'boolean' }, name: 'Stacked' },\r\n  labelPosition: {\r\n    options: ['after', 'before'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  },\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
                },
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxModule>",
                    "defaultValue": "{\r\n  title: 'forms/Checkbox',\r\n  component: CheckboxModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/forms/date-picker/date-picker.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DatePickerModule>",
                    "defaultValue": "{\r\n  color: 'primary',\r\n  open: false,\r\n  startView: 'month',\r\n  touchUi: false,\r\n  disabled: false,\r\n  inline: false,\r\n  xPosition: 'start',\r\n  yPosition: 'below'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<DatePickerModule>",
                    "defaultValue": "{\r\n  color: { options: ['primary', 'accent', 'warn'], control: { type: 'radio' }, name: 'Color' },\r\n  startView: { options: ['month', 'year', 'multi-year'], control: { type: 'radio' }, name: 'Start View' },\r\n  open: { control: { type: 'boolean' }, name: 'Open' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  inline: { control: { type: 'boolean' }, name: 'Inline' },\r\n  touchUi: { control: { type: 'boolean' }, name: 'Responsive' },\r\n  xPosition: { options: ['start', 'end'], control: { type: 'radio' }, name: 'X Position' },\r\n  yPosition: { options: ['above', 'below'], control: { type: 'radio' }, name: 'Y Position' }\r\n}"
                },
                {
                    "name": "DatePicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Date Picker',\r\n  component: DatePickerModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/forms/form-field/form-field.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<FormFieldModule>",
                    "defaultValue": "{\r\n  label: 'Label',\r\n  hint: 'Hint',\r\n  hintPosition: 'start',\r\n  icon: false,\r\n  appearance: 'fill',\r\n  color: 'primary',\r\n  floatLabel: 'auto'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<FormFieldModule>",
                    "defaultValue": "{\r\n  color: { options: ['primary', 'accent', 'warn'], control: { type: 'radio' }, name: 'Color' },\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  hint: { control: { type: 'text' }, name: 'Label' },\r\n  hintPosition: { options: ['start', 'end'], control: { type: 'radio' }, name: 'Hint position' },\r\n  icon: { control: { type: 'boolean' }, name: 'Icon' },\r\n  appearance: { options: ['outline', 'fill'], control: { type: 'radio' }, name: 'Appearance' },\r\n  floatLabel: { options: ['auto', 'always', 'never'], control: { type: 'radio' }, name: 'Float label' }\r\n}"
                },
                {
                    "name": "FormField",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormFieldModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Form Field',\r\n  component: FormFieldModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/forms/radio-button/radio-button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<RadioButtonModule>",
                    "defaultValue": "{\r\n  color: 'primary',\r\n  disabled: false,\r\n  stacked: false,\r\n  labelPosition: 'after'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<RadioButtonModule>",
                    "defaultValue": "{\r\n  color: { options: ['primary', 'accent', 'warn'], control: { type: 'radio' }, name: 'Color' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  stacked: { control: { type: 'boolean' }, name: 'Stacked' },\r\n  labelPosition: { options: ['after', 'before'], control: { type: 'radio' }, name: 'Label position' }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioButtonModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Radio Button',\r\n  component: RadioButtonModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                },
                {
                    "name": "RadioButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  /* args */\r\n}"
                }
            ],
            "src/stories/forms/select/select.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SelectModule>",
                    "defaultValue": "{\r\n  label: '[Label]',\r\n  color: 'primary'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SelectModule>",
                    "defaultValue": "{\r\n  color: { options: ['primary', 'accent', 'warn'], control: { type: 'radio' }, name: 'Color' },\r\n  label: { control: { type: 'text' }, name: 'Label' },\r\n  items: { table: { disable: true } }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Select',\r\n  component: SelectModule,\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/forms/slide-toggle/slide-toggle.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SlideToggleModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SlideToggleModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SlideToggleModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Slide Toggle',\r\n  component: SlideToggleModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\r\n  /* argTypes */\r\n}"
                },
                {
                    "name": "SlideToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  /* args */\r\n}"
                }
            ],
            "src/stories/forms/slider/slider.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SliderModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SliderModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SliderModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Slider',\r\n  component: SliderModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\r\n  /* argTypes */\r\n}"
                },
                {
                    "name": "Slider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  /* args */\r\n}"
                }
            ],
            "src/stories/forms/textarea/textarea.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TextareaModule>",
                    "defaultValue": "{\r\n  minRows: 1,\r\n  maxRows: 5,\r\n  autoResize: true\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TextareaModule>",
                    "defaultValue": "{\r\n  minRows: { control: { type: 'range', max: '20', min: 1 }, name: 'Min rows' },\r\n  maxRows: { control: { type: 'range', max: '20', min: 1 }, name: 'Max rows' },\r\n  autoResize: { control: { type: 'boolean' }, name: 'Auto resize' }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Textarea',\r\n  component: TextareaModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                },
                {
                    "name": "Textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  /* args */\r\n}"
                }
            ],
            "src/stories/helpers/elevation/elevation.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ElevationModule>",
                    "defaultValue": "{\r\n  elevation: 12\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ElevationModule>",
                    "defaultValue": "{\r\n  elevation: { control: { type: 'range', max: 24, min: 0 }, name: 'Elevation' }\r\n}"
                },
                {
                    "name": "Elevation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ElevationModule>",
                    "defaultValue": "{\r\n  title: 'Helpers/Elevation',\r\n  component: ElevationModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/helpers/grid/grid.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<GridModule>",
                    "defaultValue": "{\r\n  cols: 5,\r\n  colOne: 2,\r\n  rowOne: 1,\r\n  colTwo: 1,\r\n  rowTwo: 2,\r\n  colThree: 1,\r\n  rowThree: 1,\r\n  colFour: 2,\r\n  rowFour: 1\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<GridModule>",
                    "defaultValue": "{\r\n  tiles: { table: { disable: true } },\r\n  ngOnInit: { table: { disable: true } },\r\n  cols: { control: { type: 'range', max: 5, min: 1 }, name: 'Columns' },\r\n  colOne: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 1' },\r\n  rowOne: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 1' },\r\n  colTwo: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 2' },\r\n  rowTwo: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 2' },\r\n  colThree: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 3' },\r\n  rowThree: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 3' },\r\n  colFour: { control: { type: 'range', max: 5, min: 1 }, name: 'Column 4' },\r\n  rowFour: { control: { type: 'range', max: 5, min: 1 }, name: 'Row 4' }\r\n}"
                },
                {
                    "name": "Grid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<GridModule>",
                    "defaultValue": "{\r\n  title: 'Helpers/Grid',\r\n  component: GridModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/helpers/ripples/ripples.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<RipplesModule>",
                    "defaultValue": "{\r\n  centered: false,\r\n  disabled: false,\r\n  unbounded: false,\r\n  color: false,\r\n  radius: 0\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<RipplesModule>",
                    "defaultValue": "{\r\n  centered: { control: { type: 'boolean' }, name: 'Centered' },\r\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\r\n  unbounded: { control: { type: 'boolean' }, name: 'Unbounded' },\r\n  color: { control: { type: 'boolean' }, name: 'Color (rgba)' },\r\n  radius: { control: { type: 'range', max: 400, min: 0 }, name: 'Radius' }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RipplesModule>",
                    "defaultValue": "{\r\n  title: 'Helpers/Ripples',\r\n  component: RipplesModule,\r\n  parameters: { options: { showPanel: true } },\r\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\r\n  argTypes\r\n}"
                },
                {
                    "name": "Ripples",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/theme/colors/colors.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ColorsModule>",
                    "defaultValue": "{\r\n  color: 'primary'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ColorsModule>",
                    "defaultValue": "{\r\n  color: {\r\n    options: ['primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
                },
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorsModule>",
                    "defaultValue": "{\r\n  title: 'Theme/Colors',\r\n  component: ColorsModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/theme/typography/typography.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TypographyModule>",
                    "defaultValue": "{\r\n  color: 'default'\r\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TypographyModule>",
                    "defaultValue": "{\r\n  color: {\r\n    options: ['default', 'primary', 'accent', 'warn'],\r\n    control: { type: 'radio' },\r\n    name: 'Color'\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TypographyModule>",
                    "defaultValue": "{\r\n  title: 'Theme/Typography',\r\n  component: TypographyModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                },
                {
                    "name": "Typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/helpers/clipboard/clipboard.stories.ts": [
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ClipModule>",
                    "defaultValue": "{\r\n  text: { table: { disable: true } },\r\n  textValue: { table: { disable: true } },\r\n  textCopy: { table: { disable: true } },\r\n  copied: { table: { disable: true } }\r\n}"
                },
                {
                    "name": "Clipboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ClipModule>",
                    "defaultValue": "{\r\n  title: 'Helpers/Clipboard',\r\n  component: ClipModule,\r\n  parameters: { options: { showPanel: true } },\r\n  argTypes\r\n}"
                }
            ],
            "src/stories/components/table/table.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\r\n]"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    }\n  }\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/components/badge/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeModule>",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonModule>",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/bottom-sheet/bottom-sheet.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BottomSheetModule>",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/card/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardModule>",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/chips/chips.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChipsModule>",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/divider/divider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DividerModule>",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/expansion/expansion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ExpansionModule>",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuModule>",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/progress-bar/progress-bar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressBarModule>",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/progress-spinner/progress-spinner.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressSpinnerModule>",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/sidenav/sidenav.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SidenavModule>",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/snackbar/snackbar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SnackbarModule>",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableModule>",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/tabs/tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsModule>",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/toolbar/toolbar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToolbarModule>",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipModule>",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/autocomplete/autocomplete.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AutocompleteModule>",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/checkbox/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxModule>",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/date-picker/date-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerModule>",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/form-field/form-field.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormFieldModule>",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/radio-button/radio-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioButtonModule>",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/select/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectModule>",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/slide-toggle/slide-toggle.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SlideToggleModule>",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/slider/slider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SliderModule>",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/textarea/textarea.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaModule>",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/clipboard/clipboard.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ClipModule>",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/elevation/elevation.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ElevationModule>",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/grid/grid.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<GridModule>",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/ripples/ripples.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RipplesModule>",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/theme/colors/colors.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorsModule>",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/theme/typography/typography.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TypographyModule>",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/assets/sb-header/sb-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SBHeaderModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Badge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomSheetModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomSheetOverviewExampleSheet",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomSheet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardModule",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipsModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Chips",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DividerModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Divider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpansionModule",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Expansion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressSpinnerModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressSpinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sidenav",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Snackbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableModule",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteModule",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Autocomplete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatePickerModule",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatePicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormField",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SlideToggleModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SlideToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Slider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClipModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Clipboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElevationModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Elevation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridModule",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tile",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RipplesModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ripples",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}