{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f7246eb4923d27635152e4f6e375c8b00c3b0318fd02d75cfd3204bdfd8cb6f38e461f04c16e9c103c95ca83ef5aeaa9a23a759c480f8bd1e5f1dbbb381e4eb1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AutocompleteModule",
            "id": "component-AutocompleteModule-46997124a2741a9cdd043251255c2fbe24f0695fe50ae4a0abe22acaebcb08bafe8dd5db771b6b06d265b5a5cfe06947d04726ed8de18ad572c6b2b34e2d25df",
            "file": "src/stories/forms/autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-autocomplete",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"components/autocomplete/api\" />\n\n<form class=\"mx-4\">\n  <mat-form-field>\n    <mat-label>Number</mat-label>\n    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "myControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "options",
                    "defaultValue": "['Option one', 'Option two', 'Option three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "_filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { Observable, map, startWith } from 'rxjs';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-autocomplete',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\n  template: `\n    <sb-header title=\"Autocomplete\" matLink=\"components/autocomplete/api\" />\n\n    <form class=\"mx-4\">\n      <mat-form-field>\n        <mat-label>Number</mat-label>\n        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\n        <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n            {{ option }}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n  `,\n  styles: []\n})\nexport class AutocompleteModule {\n  myControl = new FormControl('');\n  options: string[] = ['Option one', 'Option two', 'Option three'];\n  filteredOptions!: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value || ''))\n    );\n  }\n\n  _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BadgeModule",
            "id": "component-BadgeModule-8cc56c591d3aa4d35eb53a5521c196cd92517036b8f4929f676279bad4640f5a209b5e81b687b0d0db2f8b24c9c3dc8558b03aff907663a2bedc866fabcebae0",
            "file": "src/stories/components/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Badge\" matLink=\"components/badge/api\" />\n\n<div class=\"p-12\">\n  <button\n    mat-raised-button\n    [matBadgeHidden]=\"hidden\"\n    [matBadgeOverlap]=\"overlap\"\n    [matBadge]=\"label\"\n    [matBadgePosition]=\"position\"\n    [matBadgeColor]=\"color\"\n    [matBadgeSize]=\"size\"\n    [matBadgeDisabled]=\"disabled\"\n  >\n    [Button]\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "overlap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "\"above after\" | \"above before\" | \"below before\" | \"below after\" | \"before\" | \"after\" | \"above\" | \"below\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatBadgeModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-badge',\n  standalone: true,\n  imports: [CommonModule, MatBadgeModule, MatButtonModule, SBHeaderModule],\n  template: `\n    <sb-header title=\"Badge\" matLink=\"components/badge/api\" />\n\n    <div class=\"p-12\">\n      <button\n        mat-raised-button\n        [matBadgeHidden]=\"hidden\"\n        [matBadgeOverlap]=\"overlap\"\n        [matBadge]=\"label\"\n        [matBadgePosition]=\"position\"\n        [matBadgeColor]=\"color\"\n        [matBadgeSize]=\"size\"\n        [matBadgeDisabled]=\"disabled\"\n      >\n        [Button]\n      </button>\n    </div>\n  `\n})\nexport class BadgeModule {\n  @Input() color!: 'primary' | 'accent' | 'warn';\n  @Input() disabled!: boolean;\n  @Input() overlap!: boolean;\n  @Input() label!: string;\n  @Input() hidden!: boolean;\n  @Input() position!: 'above after' | 'above before' | 'below before' | 'below after' | 'before' | 'after' | 'above' | 'below';\n  @Input() size!: 'small' | 'medium' | 'large';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BottomSheetModule",
            "id": "component-BottomSheetModule-c9666c395105e8f09db643daca33ccf1455e74d37f52602fd2067a43f621e18e0c762709ebfd9c022d5aae4344a0cefda39af7cf04302876162be58500d7cebe",
            "file": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bottom-sheet",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\n<button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openBottomSheet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatBottomSheetModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetModule, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\n\n@Component({\n  selector: 'app-bottom-sheet',\n  standalone: true,\n  imports: [MatBottomSheetModule, MatButtonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n  `\n})\nexport class BottomSheetModule {\n  @Input() hasBackdrop!: boolean;\n\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  openBottomSheet() {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet, { hasBackdrop: this.hasBackdrop });\n  }\n}\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  template: `<h1>Bottom sheet</h1>`\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent) {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BottomSheetOverviewExampleSheet",
            "id": "component-BottomSheetOverviewExampleSheet-c9666c395105e8f09db643daca33ccf1455e74d37f52602fd2067a43f621e18e0c762709ebfd9c022d5aae4344a0cefda39af7cf04302876162be58500d7cebe",
            "file": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bottom-sheet-overview-example-sheet",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Bottom sheet</h1>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openLink",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetModule, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\n\n@Component({\n  selector: 'app-bottom-sheet',\n  standalone: true,\n  imports: [MatBottomSheetModule, MatButtonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Bottom sheet\" matLink=\"components/bottom-sheet/api\" />\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openBottomSheet()\">[Open bottom sheet]</button>\n  `\n})\nexport class BottomSheetModule {\n  @Input() hasBackdrop!: boolean;\n\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  openBottomSheet() {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet, { hasBackdrop: this.hasBackdrop });\n  }\n}\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  template: `<h1>Bottom sheet</h1>`\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent) {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheetRef",
                        "type": "MatBottomSheetRef<BottomSheetOverviewExampleSheet>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "bottomSheetRef",
                        "type": "MatBottomSheetRef<BottomSheetOverviewExampleSheet>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ButtonModule",
            "id": "component-ButtonModule-6f02febb9e76dcf444de6d14134d5823108305f175cd46b37fa8558b9ecf71f4ad9a5547cff4bfccbcf1045df6c121b10ea15238086133360e170df3656b52bf",
            "file": "src/stories/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [
                "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    "
            ],
            "template": "<sb-header title=\"Button\" matLink=\"components/button/api\" />\n<div [ngSwitch]=\"type\" class=\"mx-4\">\n  <button *ngSwitchDefault mat-button [color]=\"color\" [disabled]=\"disabled\">{{ label }}</button>\n  <button *ngSwitchCase=\"'raised'\" mat-raised-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n  <button *ngSwitchCase=\"'flat'\" mat-flat-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n  <button *ngSwitchCase=\"'stroked'\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\n    {{ label }}\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"default\" | \"flat\" | \"stroked\" | \"raised\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ThemePalette } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, SBHeaderModule],\n  styles: [\n    `\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    `\n  ],\n  template: `\n    <sb-header title=\"Button\" matLink=\"components/button/api\" />\n    <div [ngSwitch]=\"type\" class=\"mx-4\">\n      <button *ngSwitchDefault mat-button [color]=\"color\" [disabled]=\"disabled\">{{ label }}</button>\n      <button *ngSwitchCase=\"'raised'\" mat-raised-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n      <button *ngSwitchCase=\"'flat'\" mat-flat-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n      <button *ngSwitchCase=\"'stroked'\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\n        {{ label }}\n      </button>\n    </div>\n  `\n})\nexport class ButtonModule {\n  @Input() label!: string;\n  @Input() color!: ThemePalette | 'default';\n  @Input() type!: 'default' | 'flat' | 'stroked' | 'raised';\n  @Input() disabled!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .container {\n        display: flex;\n        padding: 3rem;\n      }\n    \n"
        },
        {
            "name": "CardModule",
            "id": "component-CardModule-32bd4a2414da9678189ae40868c63449ca3c15b48fefd5a0ee79afdadb4a7ccb83d081ca5aa62f40dd3da029c603c23e341c03a146687325c7d72067224ff835",
            "file": "src/stories/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Card\" matLink=\"components/card/api\" />\n\n<mat-card class=\"mx-4\" style=\"width:400px\" [appearance]=\"appearance\">\n  <mat-card-header *ngIf=\"title || subtitle\">\n    <mat-card-title-group>\n      <img *ngIf=\"avatar\" mat-card-avatar src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n      <mat-card-title *ngIf=\"title\">title</mat-card-title>\n      <mat-card-subtitle *ngIf=\"subtitle\">subtitle</mat-card-subtitle>\n\n      <ng-container *ngIf=\"media\" [ngSwitch]=\"mediaSize\">\n        <img *ngSwitchCase=\"'xl'\" mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'lg'\" mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'md'\" mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n        <img *ngSwitchCase=\"'sm'\" mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n      </ng-container>\n    </mat-card-title-group>\n  </mat-card-header>\n\n  <img *ngIf=\"image\" mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n\n  <!-- Empty content for bottom spacing if display is just title || subtitle -->\n  <mat-card-content></mat-card-content>\n\n  <mat-card-content *ngIf=\"content\">\n    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quos nostrum veritatis assumenda corrupti sequi ut molestiae\n    nesciunt, quo, eius accusamus dolor illo esse quaerat culpa vel accusantium dolore aspernatur?\n  </mat-card-content>\n\n  <mat-card-actions *ngIf=\"actions\" [align]=\"align\">\n    <button mat-button>[Lorem Ipsum]</button>\n    <button mat-button>[Lorem Ipsum]</button>\n  </mat-card-actions>\n\n  <mat-card-footer *ngIf=\"footer\">\n    <mat-progress-bar mode=\"indeterminate\" />\n  </mat-card-footer>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "\"outlined\" | \"raised\"",
                    "decorators": []
                },
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "media",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mediaSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "\"xl\" | \"lg\" | \"md\" | \"sm\"",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatCardModule, MatButtonModule, MatProgressBarModule],\n  template: `\n    <sb-header title=\"Card\" matLink=\"components/card/api\" />\n\n    <mat-card class=\"mx-4\" style=\"width:400px\" [appearance]=\"appearance\">\n      <mat-card-header *ngIf=\"title || subtitle\">\n        <mat-card-title-group>\n          <img *ngIf=\"avatar\" mat-card-avatar src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n          <mat-card-title *ngIf=\"title\">title</mat-card-title>\n          <mat-card-subtitle *ngIf=\"subtitle\">subtitle</mat-card-subtitle>\n\n          <ng-container *ngIf=\"media\" [ngSwitch]=\"mediaSize\">\n            <img *ngSwitchCase=\"'xl'\" mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'lg'\" mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'md'\" mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n            <img *ngSwitchCase=\"'sm'\" mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n          </ng-container>\n        </mat-card-title-group>\n      </mat-card-header>\n\n      <img *ngIf=\"image\" mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" />\n\n      <!-- Empty content for bottom spacing if display is just title || subtitle -->\n      <mat-card-content></mat-card-content>\n\n      <mat-card-content *ngIf=\"content\">\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Consectetur quos nostrum veritatis assumenda corrupti sequi ut molestiae\n        nesciunt, quo, eius accusamus dolor illo esse quaerat culpa vel accusantium dolore aspernatur?\n      </mat-card-content>\n\n      <mat-card-actions *ngIf=\"actions\" [align]=\"align\">\n        <button mat-button>[Lorem Ipsum]</button>\n        <button mat-button>[Lorem Ipsum]</button>\n      </mat-card-actions>\n\n      <mat-card-footer *ngIf=\"footer\">\n        <mat-progress-bar mode=\"indeterminate\" />\n      </mat-card-footer>\n    </mat-card>\n  `,\n  styles: []\n})\nexport class CardModule {\n  @Input() appearance!: 'outlined' | 'raised';\n  @Input() title!: boolean;\n  @Input() subtitle!: boolean;\n  @Input() content!: boolean;\n  @Input() actions!: boolean;\n  @Input() avatar!: boolean;\n  @Input() media!: boolean;\n  @Input() mediaSize!: 'xl' | 'lg' | 'md' | 'sm';\n  @Input() image!: boolean;\n  @Input() footer!: boolean;\n  @Input() align!: 'start' | 'end';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxModule",
            "id": "component-CheckboxModule-89a596de63d0cbd945797af810f2e23e5538233d651023bb35eec764cf09ec71b4da893336c50fcc6eff77d5f480302964ca6cf76ea6097fe32a2235e4b145d5",
            "file": "src/stories/forms/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Checkbox\" matLink=\"components/checkbox/api\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-checkbox',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\n  template: ` <sb-header title=\"Checkbox\" matLink=\"components/checkbox/api\" /> `,\n  styles: []\n})\nexport class CheckboxModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChipsModule",
            "id": "component-ChipsModule-b323e17b3018862cc7294c0dc4e8ea062e005de4ded52f27c46623b8507660131f2280456eee7648181038d2df50baba20c9c2e4e6026dd668282c5ddd739f55",
            "file": "src/stories/components/chips/chips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chips",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Chips\" matLink=\"components/chips/api\" />\n\n<mat-chip-listbox class=\"mx-4\" [hideSingleSelectionIndicator]=\"hideSingle\" [multiple]=\"multiple\" [selectable]=\"selectable\">\n  <mat-chip-option>Default</mat-chip-option>\n  <mat-chip-option>\n    <img matChipAvatar src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\" alt=\"Photo of a Shiba Inu\" /> With Avatar\n  </mat-chip-option>\n  <mat-chip-option> <mat-icon matChipTrailingIcon>bolt</mat-icon>With trailing icon </mat-chip-option>\n  <mat-chip-option [color]=\"color\" selected>Selected with color</mat-chip-option>\n  <mat-chip-option [highlighted]=\"highlighted\">Highlighted</mat-chip-option>\n</mat-chip-listbox>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                },
                {
                    "name": "hideSingle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "highlighted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-chips',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatChipsModule, MatButtonModule, MatIconModule],\n  template: `\n    <sb-header title=\"Chips\" matLink=\"components/chips/api\" />\n\n    <mat-chip-listbox class=\"mx-4\" [hideSingleSelectionIndicator]=\"hideSingle\" [multiple]=\"multiple\" [selectable]=\"selectable\">\n      <mat-chip-option>Default</mat-chip-option>\n      <mat-chip-option>\n        <img matChipAvatar src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\" alt=\"Photo of a Shiba Inu\" /> With Avatar\n      </mat-chip-option>\n      <mat-chip-option> <mat-icon matChipTrailingIcon>bolt</mat-icon>With trailing icon </mat-chip-option>\n      <mat-chip-option [color]=\"color\" selected>Selected with color</mat-chip-option>\n      <mat-chip-option [highlighted]=\"highlighted\">Highlighted</mat-chip-option>\n    </mat-chip-listbox>\n  `,\n  styles: []\n})\nexport class ChipsModule {\n  @Input() color!: ThemePalette | 'default';\n  @Input() hideSingle!: boolean;\n  @Input() multiple!: boolean;\n  @Input() selectable!: boolean;\n  @Input() highlighted!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ClipboardModule",
            "id": "component-ClipboardModule-7a672ccf9536b0d60a3108068d92a876b07a26f0b7fbe252d612ee403da7eb4c1e65e6e257fcc76c9e6b3b8b6a27192e2cc6cf840f6e84b44c5216f88ecff377",
            "file": "src/stories/helpers/clipboard/clipboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-clipboard",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Clipboard\" matLink=\"cdk/clipboard/api\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-clipboard',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTabsModule],\n  template: ` <sb-header title=\"Clipboard\" matLink=\"cdk/clipboard/api\" /> `,\n  styles: []\n})\nexport class ClipboardModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ColorsModule",
            "id": "component-ColorsModule-3ebeaf0ea61036077c5b998c6ab605b7a09564a27706b9781d79d1b5b103a95ea6a831b6e09f7e4195fee6da4d2e32fe011e13f391aa580087159cd40398f41e",
            "file": "src/stories/theme/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "./colors.component.scss"
            ],
            "styles": [],
            "template": "<sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n<div class=\"mx-4\">\n  <div\n    class=\"block\"\n    matRipple\n    cdkCopyToClipboard=\"var(--mat-{{ color }}-{{ hue }})\"\n    *ngFor=\"let hue of ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'A100', 'A200', 'A400', 'A700']\"\n    style=\"background-color:var(--mat-{{ color }}-{{ hue }})\"\n  >\n    <h1 style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\">{{ hue }}</h1>\n    <small style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\"> var(--mat-{{ color }}-{{ hue }}) </small>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ThemePalette",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "ClipboardModule",
                    "type": "module"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatRippleModule, ThemePalette } from '@angular/material/core';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-colors',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, ClipboardModule, MatRippleModule],\n  styleUrls: ['./colors.component.scss'],\n  template: `\n    <sb-header title=\"Autocomplete\" matLink=\"autocomplete\" />\n\n    <div class=\"mx-4\">\n      <div\n        class=\"block\"\n        matRipple\n        cdkCopyToClipboard=\"var(--mat-{{ color }}-{{ hue }})\"\n        *ngFor=\"let hue of ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'A100', 'A200', 'A400', 'A700']\"\n        style=\"background-color:var(--mat-{{ color }}-{{ hue }})\"\n      >\n        <h1 style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\">{{ hue }}</h1>\n        <small style=\"color:var(--mat-{{ color }}-contrast-{{ hue }})\"> var(--mat-{{ color }}-{{ hue }}) </small>\n      </div>\n    </div>\n  `,\n  styles: []\n})\nexport class ColorsModule {\n  @Input() color!: ThemePalette;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".block {\n  height: 80px;\n  width: 160px;\n  border-radius: 4px;\n  display: inline-block;\n  margin-right: 16px;\n  margin-bottom: 16px;\n  padding: 8px;\n  position: relative;\n  &:hover {\n    cursor: copy;\n  }\n\n  h1 {\n    font-weight: bold;\n    font-weight: 50px;\n  }\n}\n\nh4 {\n  font-weight: bold !important;\n}\n\nsmall {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background: rgb(0 0 0 / 5%);\n  width: 100%;\n  font-weight: 400;\n  padding: 6px 10px;\n  letter-spacing: -0.9px;\n}\n",
                    "styleUrl": "./colors.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "DatePickerModule",
            "id": "component-DatePickerModule-5dafbb1a95fd2e6edc2d535678e75a57e202f4f04df916a676348e0180f7be3f01eee5efec7999597175aee755cde408fdd5e536f36a97a0efe952d4fcc0a297",
            "file": "src/stories/forms/date-picker/date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-picker",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Date picker\" matLink=\"date-picker\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-date-picker',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  template: ` <sb-header title=\"Date picker\" matLink=\"date-picker\" /> `,\n  styles: []\n})\nexport class DatePickerModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DividerModule",
            "id": "component-DividerModule-8d28d938280df37a8e7a986f3b9fa9a7f5a700a7d90d461e16ae982a6f91b9117f1a8eb22b9ad73daf5f737cd76053f9b9003c46e26196f378bed5304b0c3900",
            "file": "src/stories/components/divider/divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-divider",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Divider\" matLink=\"components/divider/api\" />\n\n<mat-list>\n  <mat-list-item>[Item 1]</mat-list-item>\n  <mat-divider [inset]=\"inset\"></mat-divider>\n  <mat-list-item>[Item 2]</mat-list-item>\n  <mat-divider [inset]=\"inset\"></mat-divider>\n  <mat-list-item>[Item 3]</mat-list-item>\n</mat-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-divider',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatDividerModule, MatListModule],\n  template: `\n    <sb-header title=\"Divider\" matLink=\"components/divider/api\" />\n\n    <mat-list>\n      <mat-list-item>[Item 1]</mat-list-item>\n      <mat-divider [inset]=\"inset\"></mat-divider>\n      <mat-list-item>[Item 2]</mat-list-item>\n      <mat-divider [inset]=\"inset\"></mat-divider>\n      <mat-list-item>[Item 3]</mat-list-item>\n    </mat-list>\n  `,\n  styles: []\n})\nexport class DividerModule {\n  @Input() inset!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ElevationModule",
            "id": "component-ElevationModule-ef2797be1bf93e9afd41bb5fc20bde61c432eaef5f41e2d8db1455a2160d20d7ade771397b244c9d3db108807cff966e228ae53c99bc9ee0abca6456ea5bc324",
            "file": "src/stories/helpers/elevation/elevation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-Elevation",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Elevation\" matLink=\"guide/elevation\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-Elevation',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  template: ` <sb-header title=\"Elevation\" matLink=\"guide/elevation\" /> `,\n  styles: []\n})\nexport class ElevationModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ExpansionModule",
            "id": "component-ExpansionModule-28caf48bf09870aadca5d7da272215424394062a88e1374f7dad5cae52db4d407f43cce2699ef6ebcbbc182c7aa14ba77724e4b98060f397be376c063bffcf92",
            "file": "src/stories/components/expansion/expansion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expansion",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Expansion Panel\" matLink=\"components/expansion/api\" />\n   <mat-accordion [multi]=\"multi\" [displayMode]=\"displayMode\">\n     <mat-expansion-panel #panel1 (opened)=\"opened(panel1)\" (closed)=\"closed(panel1)\">\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n     </mat-expansion-panel>\n\n     <mat-expansion-panel\n       #panel2\n       [hideToggle]=\"!toggle\"\n       [disabled]=\"disabled\"\n       [togglePosition]=\"togglePosition\"\n       [expanded]=\"expanded\"\n       (opened)=\"opened(panel2)\"\n       (closed)=\"closed(panel2)\"\n     >\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n         <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n       <mat-action-row>\n         <button mat-flat-button color=\"primary\" (click)=\"panel3.open()\">Next [Action row]</button>\n       </mat-action-row>\n     </mat-expansion-panel>\n\n     <mat-expansion-panel\n       #panel3\n       [hideToggle]=\"!toggle\"\n       [disabled]=\"disabled\"\n       [togglePosition]=\"togglePosition\"\n       [expanded]=\"expanded\"\n       (opened)=\"opened(panel3)\"\n       (closed)=\"closed(panel3)\"\n     >\n       <mat-expansion-panel-header>\n         <mat-panel-title> Lorem Ipsum </mat-panel-title>\n         <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n       </mat-expansion-panel-header>\n       <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n     </mat-expansion-panel>\n   </mat-accordion>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "displayMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "\"default\" | \"flat\"",
                    "decorators": []
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "toggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "togglePosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closed",
                    "args": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "opened",
                    "args": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "panel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatExpansionModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-expansion',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatExpansionModule, MatButtonModule],\n  template: ` <sb-header title=\"Expansion Panel\" matLink=\"components/expansion/api\" />\n\n    <mat-accordion [multi]=\"multi\" [displayMode]=\"displayMode\">\n      <mat-expansion-panel #panel1 (opened)=\"opened(panel1)\" (closed)=\"closed(panel1)\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel\n        #panel2\n        [hideToggle]=\"!toggle\"\n        [disabled]=\"disabled\"\n        [togglePosition]=\"togglePosition\"\n        [expanded]=\"expanded\"\n        (opened)=\"opened(panel2)\"\n        (closed)=\"closed(panel2)\"\n      >\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n          <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n        <mat-action-row>\n          <button mat-flat-button color=\"primary\" (click)=\"panel3.open()\">Next [Action row]</button>\n        </mat-action-row>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel\n        #panel3\n        [hideToggle]=\"!toggle\"\n        [disabled]=\"disabled\"\n        [togglePosition]=\"togglePosition\"\n        [expanded]=\"expanded\"\n        (opened)=\"opened(panel3)\"\n        (closed)=\"closed(panel3)\"\n      >\n        <mat-expansion-panel-header>\n          <mat-panel-title> Lorem Ipsum </mat-panel-title>\n          <mat-panel-description *ngIf=\"description\"> lorem ipsum dolor sit amet, consectetur adipiscing </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n      </mat-expansion-panel>\n    </mat-accordion>`,\n  styles: []\n})\nexport class ExpansionModule {\n  @Input() toggle!: boolean;\n  @Input() description!: boolean;\n  @Input() disabled!: boolean;\n  @Input() multi!: boolean;\n  @Input() expanded!: boolean;\n  @Input() displayMode!: 'default' | 'flat';\n  @Input() togglePosition!: 'before' | 'after';\n\n  opened(panel: MatExpansionPanel) {\n    console.log(panel);\n  }\n\n  closed(panel: MatExpansionPanel) {\n    console.log(panel);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "FormFieldModule",
            "id": "component-FormFieldModule-7de3f6ab8c85ad90c2407ef41ed60eccd198e3627cc01d197d2c90169734d0f66bbf0ab35695aa0dfe7a8cb6452f28065f288ca7c36b90a3925dd9e6d525b14e",
            "file": "src/stories/forms/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Form Field\" matLink=\"form-field\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-form-field',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\n  template: ` <sb-header title=\"Form Field\" matLink=\"form-field\" /> `,\n  styles: []\n})\nexport class FormFieldModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "GridModule",
            "id": "component-GridModule-8025426da0bb828e2a3a470b72a2af68c4ee448532cb2a34bf4337dc837ab87c94b9c7e59a515d757380c830b9c7b393624a6f1052d540bfd46183bc422fa6bd",
            "file": "src/stories/helpers/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-grid",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Grid\" matLink=\"components/grid-list/overview\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-grid',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  template: ` <sb-header title=\"Grid\" matLink=\"components/grid-list/overview\" /> `,\n  styles: []\n})\nexport class GridModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MenuModule",
            "id": "component-MenuModule-99cb2acc9ca9a8765807bc84d066d6bd2ae65ca9e177ab5a66f7f3ee2782c4a9bb8bcc1a7a1b58b390c84f79a1e0db0c6b7ce6dbcdd8e08316c607798f006421",
            "file": "src/stories/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Menu\" matLink=\"components/menu/api\" />\n\n<button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">[Menu]</button>\n<mat-menu #menu=\"matMenu\" [yPosition]=\"yPosition\" [xPosition]=\"xPosition\" [hasBackdrop]=\"hasBackdrop\" [overlapTrigger]=\"overlapTrigger\">\n  <button mat-menu-item>Level 1a</button>\n  <button mat-menu-item>Level 2b</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"level2\">Multi level</button>\n</mat-menu>\n\n<mat-menu\n  #level2=\"matMenu\"\n  [yPosition]=\"yPosition\"\n  [xPosition]=\"xPosition\"\n  [hasBackdrop]=\"hasBackdrop\"\n  [overlapTrigger]=\"overlapTrigger\"\n>\n  <button mat-menu-item>Level 2a</button>\n  <button mat-menu-item>Level 2b</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"level3\">Level 2c</button>\n</mat-menu>\n\n<mat-menu\n  #level3=\"matMenu\"\n  [yPosition]=\"yPosition\"\n  [xPosition]=\"xPosition\"\n  [hasBackdrop]=\"hasBackdrop\"\n  [overlapTrigger]=\"overlapTrigger\"\n>\n  <button mat-menu-item>Level 3a</button>\n  <button mat-menu-item>Level 3b</button>\n  <button mat-menu-item>Level 3c</button>\n</mat-menu>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasBackdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "overlapTrigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "xPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "yPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "\"above\" | \"below\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-menu',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatMenuModule, MatButtonModule],\n  template: `\n    <sb-header title=\"Menu\" matLink=\"components/menu/api\" />\n\n    <button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">[Menu]</button>\n    <mat-menu #menu=\"matMenu\" [yPosition]=\"yPosition\" [xPosition]=\"xPosition\" [hasBackdrop]=\"hasBackdrop\" [overlapTrigger]=\"overlapTrigger\">\n      <button mat-menu-item>Level 1a</button>\n      <button mat-menu-item>Level 2b</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"level2\">Multi level</button>\n    </mat-menu>\n\n    <mat-menu\n      #level2=\"matMenu\"\n      [yPosition]=\"yPosition\"\n      [xPosition]=\"xPosition\"\n      [hasBackdrop]=\"hasBackdrop\"\n      [overlapTrigger]=\"overlapTrigger\"\n    >\n      <button mat-menu-item>Level 2a</button>\n      <button mat-menu-item>Level 2b</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"level3\">Level 2c</button>\n    </mat-menu>\n\n    <mat-menu\n      #level3=\"matMenu\"\n      [yPosition]=\"yPosition\"\n      [xPosition]=\"xPosition\"\n      [hasBackdrop]=\"hasBackdrop\"\n      [overlapTrigger]=\"overlapTrigger\"\n    >\n      <button mat-menu-item>Level 3a</button>\n      <button mat-menu-item>Level 3b</button>\n      <button mat-menu-item>Level 3c</button>\n    </mat-menu>\n  `,\n  styles: []\n})\nexport class MenuModule {\n  @Input() yPosition!: 'above' | 'below';\n  @Input() xPosition!: 'before' | 'after';\n  @Input() hasBackdrop!: boolean;\n  @Input() overlapTrigger!: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProgressBarModule",
            "id": "component-ProgressBarModule-28f3f2b2ed11a950f082bbbb764638fa535673c419806f1bac7c206675283c71e2155e89b15b68c2e543d9d05476fcd89c9e101f5d6a59063d512817052808e5",
            "file": "src/stories/components/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Progress Bar\" matLink=\"components/progress-bar/api\" />\n\n<mat-progress-bar mode=\"determinate\" [value]=\"value\"> </mat-progress-bar>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "buffer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"determinate\" | \"indeterminate\" | \"buffer\" | \"query\"",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatProgressBarModule],\n  template: `\n    <sb-header title=\"Progress Bar\" matLink=\"components/progress-bar/api\" />\n\n    <mat-progress-bar mode=\"determinate\" [value]=\"value\"> </mat-progress-bar>\n  `,\n  styles: []\n})\nexport class ProgressBarModule {\n  @Input() value!: number;\n  @Input() buffer!: number;\n  @Input() color!: ThemePalette;\n  @Input() mode!: 'determinate' | 'indeterminate' | 'buffer' | 'query';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProgressSpinnerModule",
            "id": "component-ProgressSpinnerModule-1ef402bd4d6d76ef6eba79c19ba6b05794c349749305c9a68b47026b279cb605e96efa48181a5a26b17931e47758758018b775e1efc55e978f73fab8124ca00b",
            "file": "src/stories/components/progress-spinner/progress-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-spinner",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Progress Spinner\" matLink=\"components/progress-spinner/api\" />\n<mat-spinner [value]=\"value\" [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\" [color]=\"color\" [mode]=\"mode\"></mat-spinner>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "diameter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"determinate\" | \"indeterminate\"",
                    "decorators": []
                },
                {
                    "name": "strokeWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressSpinnerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-progress-spinner',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatProgressSpinnerModule],\n  template: `\n    <sb-header title=\"Progress Spinner\" matLink=\"components/progress-spinner/api\" />\n    <mat-spinner [value]=\"value\" [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\" [color]=\"color\" [mode]=\"mode\"></mat-spinner>\n  `,\n  styles: []\n})\nexport class ProgressSpinnerModule {\n  @Input() value!: number;\n  @Input() diameter!: number;\n  @Input() strokeWidth!: number;\n  @Input() color!: ThemePalette;\n  @Input() mode!: 'determinate' | 'indeterminate';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioButtonModule",
            "id": "component-RadioButtonModule-35acaeddd7e539627516ba27a5aff401574206f7a655f100e65e96443285cc1c4c2f211cdaf5f5b758be75cdee1cca94ccaa8274d4c902ee0c125c5124ba38b6",
            "file": "src/stories/forms/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio-button",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Radio Button\" matLink=\"components/radio/api\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-radio-button',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatAutocompleteModule, ReactiveFormsModule, SBHeaderModule],\n  template: ` <sb-header title=\"Radio Button\" matLink=\"components/radio/api\" /> `,\n  styles: []\n})\nexport class RadioButtonModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RipplesModule",
            "id": "component-RipplesModule-949d7acf4d403fdfa7dd971f514675892ebf34fc201d8da7eb5511ef830c203795e71470cab54ddaed058c9f9f9906ac14ab1ed6738eeb13f15d5a83ead0f6a0",
            "file": "src/stories/helpers/ripples/ripples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ripples",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Ripples\" matLink=\"components/ripple/overview\" />\n<mat-card\n  matRipple\n  [matRippleCentered]=\"centered\"\n  [matRippleColor]=\"color\"\n  [matRippleDisabled]=\"disabled\"\n  [matRippleRadius]=\"radius\"\n  [matRippleUnbounded]=\"unbounded\"\n>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "centered",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "radius",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "unbounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-ripples',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatCardModule, MatRippleModule],\n  template: `\n    <sb-header title=\"Ripples\" matLink=\"components/ripple/overview\" />\n    <mat-card\n      matRipple\n      [matRippleCentered]=\"centered\"\n      [matRippleColor]=\"color\"\n      [matRippleDisabled]=\"disabled\"\n      [matRippleRadius]=\"radius\"\n      [matRippleUnbounded]=\"unbounded\"\n    >\n    </mat-card>\n  `,\n  styles: []\n})\nexport class RipplesModule {\n  @Input() centered!: boolean;\n  @Input() disabled!: boolean;\n  @Input() radius!: number;\n  @Input() unbounded!: boolean;\n  @Input() color!: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SBHeaderModule",
            "id": "component-SBHeaderModule-de91dde34a31bc9302fbc125f86e0721c21cb85f5946110cb10319418dbe306a7c9f4c12b4afae183f2adbeb375e9ef026f41a47adf52e5b712107f9606e1d47",
            "file": "src/stories/assets/sb-header/sb-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-header",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        display: block;\n        width: 100%;\n        padding: 0 16px;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        margin-top: -20px;\n        margin-bottom: 14px;\n        display: block;\n      }\n    "
            ],
            "template": "<h2>{{ title }}</h2>\n<a *ngIf=\"matLink\" href=\"https://material.angular.io/{{ matLink }}\" target=\"_blank\"> Angular material documentation </a>\n\n<small *ngIf=\"clipboard\">CLICK TO COPY VALUE</small>\n<mat-divider></mat-divider>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "clipboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "BooleanInput",
                    "decorators": []
                },
                {
                    "name": "matLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 52,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_clipboard",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'sb-header',\n  standalone: true,\n  imports: [CommonModule, MatDividerModule],\n  styles: [\n    `\n      :host {\n        display: block;\n        width: 100%;\n        padding: 0 16px;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        margin-top: -20px;\n        margin-bottom: 14px;\n        display: block;\n      }\n    `\n  ],\n  template: `\n    <h2>{{ title }}</h2>\n    <a *ngIf=\"matLink\" href=\"https://material.angular.io/{{ matLink }}\" target=\"_blank\"> Angular material documentation </a>\n\n    <small *ngIf=\"clipboard\">CLICK TO COPY VALUE</small>\n    <mat-divider></mat-divider>\n  `\n})\nexport class SBHeaderModule {\n  @Input({ required: true }) title!: string;\n  @Input() matLink!: string;\n  @Input() set clipboard(value: BooleanInput) {\n    this._clipboard = coerceBooleanProperty(value);\n  }\n  get clipboard() {\n    return this._clipboard;\n  }\n  _clipboard = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        display: block;\n        width: 100%;\n        padding: 0 16px;\n      }\n\n      h2 {\n        font-size: 50px !important;\n        font-weight: bold !important;\n        margin-bottom: 6px !important;\n        text-transform: capitalize;\n        padding-bottom: 30px;\n        padding-top: 16px;\n      }\n\n      small {\n        padding-top: 12px;\n        display: block;\n      }\n\n      mat-divider {\n        margin-bottom: 16px;\n      }\n\n      a {\n        margin-top: -20px;\n        margin-bottom: 14px;\n        display: block;\n      }\n    \n",
            "accessors": {
                "clipboard": {
                    "name": "clipboard",
                    "setSignature": {
                        "name": "clipboard",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 54,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BooleanInput",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "clipboard",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                }
            }
        },
        {
            "name": "SelectModule",
            "id": "component-SelectModule-708866201d4972600ed48761258531934230fc1f0e7c84429dd32dbf7aeb1ec871f94f5167c95b5012dac264ab5fc8020d9be3530e22d20b71efca7572e27a07",
            "file": "src/stories/forms/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Select\" matLink=\"components/select/api\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-select',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  template: ` <sb-header title=\"Select\" matLink=\"components/select/api\" /> `,\n  styles: []\n})\nexport class SelectModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SidenavModule",
            "id": "component-SidenavModule-7010929f5c4e8c8afe3b085102174ffe975b7edfcbce2dcae9dd1c79f660dafac812571af07148c589c059d2ca745a9c123c9a49c002be2bc6315ac541ca346a",
            "file": "src/stories/components/sidenav/sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidenav",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Sidenav\" matLink=\"components/sidenav/overview\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "SidenavModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-sidenav',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, SidenavModule],\n  template: ` <sb-header title=\"Sidenav\" matLink=\"components/sidenav/overview\" /> `,\n  styles: []\n})\nexport class SidenavModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SliderModule",
            "id": "component-SliderModule-286d887461f57794bd0dde35b8afd2255fa8d746aaeea56c8bf6092a0bd312d2bb6d79f8a33e7b36f8e97f3081ecaa8c62e0d3c1425d632cd888c9bed0543f17",
            "file": "src/stories/forms/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Slider\" matLink=\"slider\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@Component({\n  selector: 'app-slider',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTabsModule],\n  template: ` <sb-header title=\"Slider\" matLink=\"slider\" /> `,\n  styles: []\n})\nexport class SliderModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SlideToggleModule",
            "id": "component-SlideToggleModule-0eb73094698b0b1d5e82ab9a219f977797becc8d7086b2f958c2fce09216a553d6d462a50b0bf03dc95fc8eeb92b89f8e2d20fe2ba800e1074bfae09443ff172",
            "file": "src/stories/forms/slide-toggle/slide-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slide-toggle",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Slide Toggle\" matLink=\"slide-toggle\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-slide-toggle',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  template: ` <sb-header title=\"Slide Toggle\" matLink=\"slide-toggle\" /> `,\n  styles: []\n})\nexport class SlideToggleModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SnackbarModule",
            "id": "component-SnackbarModule-57eba15f27e5ce963598166756938c9122549e365d44a5aec8c968a3b9e12b3940965f7c00fdabaf6ec36b908c452e0009c5754f8c9e63eab50e449951a38a36",
            "file": "src/stories/components/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snackbar",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Snackbar\" matLink=\"components/snackbar/api\" />\n<button class=\"mx-4\" mat-stroked-button (click)=\"openSnackbar()\">[Open snackbar]</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "xPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"start\" | \"center\" | \"end\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "yPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openSnackbar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatSnackBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { SBHeaderModule } from 'src/stories/assets/sb-header';\n\n@Component({\n  selector: 'app-snackbar',\n  standalone: true,\n  imports: [MatButtonModule, SBHeaderModule, MatSnackBarModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Snackbar\" matLink=\"components/snackbar/api\" />\n    <button class=\"mx-4\" mat-stroked-button (click)=\"openSnackbar()\">[Open snackbar]</button>\n  `\n})\nexport class SnackbarModule {\n  @Input() label!: string;\n  @Input() message!: string;\n  @Input() hasAction!: boolean;\n  @Input() duration!: boolean;\n  @Input() xPosition!: 'start' | 'center' | 'end' | 'left' | 'right';\n  @Input() yPosition!: 'top' | 'bottom';\n\n  constructor(private snackbar: MatSnackBar) {}\n\n  openSnackbar() {\n    this.snackbar.open(this.label, this.hasAction ? 'Action' : undefined, {\n      duration: this.duration ? 2000 : undefined,\n      verticalPosition: this.yPosition,\n      horizontalPosition: this.xPosition\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TableModule",
            "id": "component-TableModule-ea8cf7a6ac502a5568228d3ac231ee509ea41a08e3e9f824cc84bee2261951786afaabd517c61996bf3bfe98e8ed94a8277d96eed1c8c5f5b3936c037fdd83ae",
            "file": "src/stories/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Table\" matLink=\"components/table/api\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { MatTableModule } from '@angular/material/table';\n\n@Component({\n  selector: 'app-table',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTableModule],\n  template: ` <sb-header title=\"Table\" matLink=\"components/table/api\" /> `,\n  styles: []\n})\nexport class TableModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TabsModule",
            "id": "component-TabsModule-533fadf149965015bf6586f35e550d35423ab0bd351aa101cd7fa2d818fe247632f4f47231c4009ebbc342316c84278276cecee385fb9e7582ca54019b86b0f5",
            "file": "src/stories/components/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Tabs\" matLink=\"components/tabs/api\" />\n\n<mat-tab-group [color]=\"color\" [animationDuration]=\"duration\">\n  <mat-tab label=\"First\">\n    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio praesentium\n    debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n  </mat-tab>\n  <mat-tab label=\"Second\">\n    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio praesentium\n    debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n  </mat-tab>\n  <mat-tab label=\"Third\">\n    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio praesentium\n    debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n  </mat-tab>\n</mat-tab-group>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "fitInkBarToContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "headerPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"below\" | \"above\"",
                    "decorators": []
                },
                {
                    "name": "stretch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@Component({\n  selector: 'app-tabs',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTabsModule],\n  template: `\n    <sb-header title=\"Tabs\" matLink=\"components/tabs/api\" />\n\n    <mat-tab-group [color]=\"color\" [animationDuration]=\"duration\">\n      <mat-tab label=\"First\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio praesentium\n        debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </mat-tab>\n      <mat-tab label=\"Second\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio praesentium\n        debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </mat-tab>\n      <mat-tab label=\"Third\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Veniam reprehenderit aut placeat ipsum, error iusto amet optio praesentium\n        debitis cum quibusdam! Nam numquam libero vel ab error atque minima laudantium?\n      </mat-tab>\n    </mat-tab-group>\n  `,\n  styles: []\n})\nexport class TabsModule {\n  @Input() color!: ThemePalette;\n  @Input() backgroundColor!: ThemePalette;\n  @Input() stretch!: boolean;\n  @Input() duration!: number;\n  @Input() align!: boolean;\n  @Input() fitInkBarToContent!: boolean;\n  @Input() headerPosition!: 'below' | 'above';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextareaModule",
            "id": "component-TextareaModule-a3a82ca1d1eea994233e07097b277bd97e0eea33227630363cfe7e6d64c921630a49c8ebac8912e5f46e5f91da5040fd960d35a83039fc75b2ca756d8dc9b504",
            "file": "src/stories/forms/textarea/textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Textarea\" matLink=\"textarea\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@Component({\n  selector: 'app-textarea',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTabsModule],\n  template: ` <sb-header title=\"Textarea\" matLink=\"textarea\" /> `,\n  styles: []\n})\nexport class TextareaModule {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ToolbarModule",
            "id": "component-ToolbarModule-51f7b94dec8e73dcef54156873526844e80dad98b1cb362e2e52b3877bc223d18e0ba78e80a19734be6a28c380fcfc7aa148cdc0cc69e05261020b575902968f",
            "file": "src/stories/components/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Toolbar\" matLink=\"components/toolbar/api\" />\n<mat-toolbar>\n  <span>FirstRow</span>\n</mat-toolbar>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "ThemePalette",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatToolbarModule],\n  template: `\n    <sb-header title=\"Toolbar\" matLink=\"components/toolbar/api\" />\n    <mat-toolbar>\n      <span>FirstRow</span>\n    </mat-toolbar>\n  `,\n  styles: []\n})\nexport class ToolbarModule {\n  @Input() color!: ThemePalette;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TooltipModule",
            "id": "component-TooltipModule-6a1cfc1f81dfe63fb05c7495966ed8cb818fdde97fc2a42613bcda5cea9572d66f77833db8a2080e93992964d7c580ab56fa8530c2d82a538e058a4372677747",
            "file": "src/stories/components/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Tooltip\" matLink=\"components/tooltip/api\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ThemePalette",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-tooltip',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule, MatTooltipModule],\n  template: `\n    <sb-header title=\"Tooltip\" matLink=\"components/tooltip/api\" />\n  `,\n  styles: []\n})\nexport class TooltipModule {\n  @Input() color!: ThemePalette;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TypographyModule",
            "id": "component-TypographyModule-1457b4ecd86cbd647ce6cf755b4276e449e29dd8961413bba6de1cac5c94e1baeabc7c5711c4d7f40abc28b7f8de53dcdda3ee3d203c45df0ce799779987998e",
            "file": "src/stories/theme/typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [],
            "styles": [],
            "template": "<sb-header title=\"Typography\" />\n\n<div class=\"mx-4\">\n  <h1 class=\"text-{{ color }}\">[h1] abcdefghijklmnopqrstuvwxyz</h1>\n  <h2 class=\"text-{{ color }}\">[h2] abcdefghijklmnopqrstuvwxyz</h2>\n  <h3 class=\"text-{{ color }}\">[h3] abcdefghijklmnopqrstuvwxyz</h3>\n  <h4 class=\"text-{{ color }}\">[h4] abcdefghijklmnopqrstuvwxyz</h4>\n  <h5 class=\"text-{{ color }}\">[h5] abcdefghijklmnopqrstuvwxyz</h5>\n  <h6 class=\"text-{{ color }}\">[h6] abcdefghijklmnopqrstuvwxyz</h6>\n\n  <p class=\"text-{{ color }}\">\n    [p] abcdefghijklmnopqrstuvwxyz Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, aspernatur excepturi nostrum\n    pariatur quam natus dicta exercitationem vel consectetur, culpa inventore adipisci numquam eum deserunt ipsa iure ad, corporis\n    explicabo?\n  </p>\n\n  <label class=\"text-{{ color }}\">[label] abcdefghijklmnopqrstuvwxyz</label>\n  <br />\n  <small class=\"text-{{ color }}\">[small] abcdefghijklmnopqrstuvwxyz</small>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "ThemePalette | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SBHeaderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { SBHeaderModule } from '../../assets/sb-header';\n\n@Component({\n  selector: 'app-typography',\n  standalone: true,\n  imports: [CommonModule, SBHeaderModule],\n  styles: [],\n  template: `\n    <sb-header title=\"Typography\" />\n\n    <div class=\"mx-4\">\n      <h1 class=\"text-{{ color }}\">[h1] abcdefghijklmnopqrstuvwxyz</h1>\n      <h2 class=\"text-{{ color }}\">[h2] abcdefghijklmnopqrstuvwxyz</h2>\n      <h3 class=\"text-{{ color }}\">[h3] abcdefghijklmnopqrstuvwxyz</h3>\n      <h4 class=\"text-{{ color }}\">[h4] abcdefghijklmnopqrstuvwxyz</h4>\n      <h5 class=\"text-{{ color }}\">[h5] abcdefghijklmnopqrstuvwxyz</h5>\n      <h6 class=\"text-{{ color }}\">[h6] abcdefghijklmnopqrstuvwxyz</h6>\n\n      <p class=\"text-{{ color }}\">\n        [p] abcdefghijklmnopqrstuvwxyz Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores, aspernatur excepturi nostrum\n        pariatur quam natus dicta exercitationem vel consectetur, culpa inventore adipisci numquam eum deserunt ipsa iure ad, corporis\n        explicabo?\n      </p>\n\n      <label class=\"text-{{ color }}\">[label] abcdefghijklmnopqrstuvwxyz</label>\n      <br />\n      <small class=\"text-{{ color }}\">[small] abcdefghijklmnopqrstuvwxyz</small>\n    </div>\n  `\n})\nexport class TypographyModule {\n  @Input() color!: ThemePalette | 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a5ab16d5fdd77ae5761eed0d9bb59ff3cd28a70ea40be79c4aaaff027b46791619245c0742b5483a46ce34b29eba54714c32a5fc7c097e7470617ce6e2696a26",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, AppRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-19f9b93b406581c4eeba9376fbdda8417c0f9120be46945392e67eab7f7120b1cd9a3eb39a618425296417a896bb7b806ab3a2097d6e4e3ea5079ede7ba39406",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<BadgeModule>",
                "defaultValue": "{\n  label: '0',\n  color: 'primary',\n  size: 'medium',\n  position: 'above after',\n  disabled: false,\n  overlap: false,\n  hidden: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<BottomSheetModule>",
                "defaultValue": "{\n  hasBackdrop: true\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<CardModule>",
                "defaultValue": "{\n  title: true,\n  subtitle: true,\n  content: true,\n  actions: true,\n  footer: true,\n  avatar: true,\n  image: true,\n  media: true,\n  mediaSize: 'md',\n  align: 'start',\n  appearance: 'outlined'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ButtonModule>",
                "defaultValue": "{\n  label: '[Button]',\n  disabled: false,\n  color: 'default',\n  type: 'default'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ChipsModule>",
                "defaultValue": "{\n  color: 'default',\n  hideSingle: false,\n  multiple: true,\n  selectable: true,\n  highlighted: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DividerModule>",
                "defaultValue": "{\n  inset: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ExpansionModule>",
                "defaultValue": "{\n  toggle: true,\n  description: true,\n  disabled: false,\n  multi: false,\n  expanded: false,\n  displayMode: 'default',\n  togglePosition: 'before'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<MenuModule>",
                "defaultValue": "{\n  yPosition: 'below',\n  xPosition: 'after',\n  hasBackdrop: true,\n  overlapTrigger: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ProgressBarModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ProgressSpinnerModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SidenavModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TableModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TabsModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ToolbarModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TooltipModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ColorsModule>",
                "defaultValue": "{\n  color: 'primary'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TypographyModule>",
                "defaultValue": "{\n  color: 'default'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<AutocompleteModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<CheckboxModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DatePickerModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<FormFieldModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<RadioButtonModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SelectModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SlideToggleModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<SliderModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<TextareaModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ClipboardModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ElevationModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<GridModule>",
                "defaultValue": "{}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<RipplesModule>",
                "defaultValue": "{\n  centered: false,\n  disabled: false,\n  radius: undefined,\n  unbounded: false,\n  color: 'default'\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<BadgeModule>",
                "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  size: {\n    options: ['small', 'medium', 'large'],\n    control: { type: 'radio' },\n    name: 'Size'\n  },\n  position: {\n    options: ['above after', 'above before', 'below before', 'below after', 'before', 'after', 'above', 'below'],\n    control: { type: 'select' },\n    name: 'Position'\n  },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  overlap: { control: { type: 'boolean' }, name: 'Overlay' },\n  hidden: { control: { type: 'boolean' }, name: 'Hidden' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<BottomSheetModule>",
                "defaultValue": "{\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Backdrop' },\n  openBottomSheet: { table: { disable: true } }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<CardModule>",
                "defaultValue": "{\n  title: { control: { type: 'boolean' }, name: 'Has title' },\n  subtitle: { control: { type: 'boolean' }, name: 'Has subtitle' },\n  content: { control: { type: 'boolean' }, name: 'Has content' },\n  actions: { control: { type: 'boolean' }, name: 'Has actions' },\n  footer: { control: { type: 'boolean' }, name: 'Has footer' },\n  avatar: { control: { type: 'boolean' }, name: 'Has avatar' },\n  image: { control: { type: 'boolean' }, name: 'Has image' },\n  media: { control: { type: 'boolean' }, name: 'Has media' },\n  mediaSize: {\n    options: ['xl', 'lg', 'md', 'sm'],\n    control: { type: 'radio' },\n    name: 'Media size'\n  },\n  align: {\n    options: ['start', 'end'],\n    control: { type: 'radio' },\n    name: 'Align actions'\n  },\n  appearance: {\n    options: ['outlined', 'raised'],\n    control: { type: 'radio' },\n    name: 'Appearance'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ButtonModule>",
                "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  type: {\n    options: ['default', 'flat', 'stroked', 'raised'],\n    control: { type: 'radio' },\n    name: 'Button type'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ChipsModule>",
                "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  hideSingle: { control: { type: 'boolean' }, name: 'Hide Single Selection Indicator' },\n  multiple: { control: { type: 'boolean' }, name: 'Select Multiple' },\n  selectable: { control: { type: 'boolean' }, name: 'Selectable' },\n  highlighted: { control: { type: 'boolean' }, name: 'Highlighted' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<DividerModule>",
                "defaultValue": "{\n  inset: { control: { type: 'boolean' }, name: 'Inset' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ExpansionModule>",
                "defaultValue": "{\n  toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\n  description: { control: { type: 'boolean' }, name: 'Has description' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  multi: { control: { type: 'boolean' }, name: 'Open more than one panel' },\n  expanded: { control: { type: 'boolean' }, name: 'Expand' },\n  displayMode: {\n    options: ['default', 'flat'],\n    control: { type: 'radio' },\n    name: 'Display mode'\n  },\n  togglePosition: {\n    options: ['before', 'after'],\n    control: { type: 'radio' },\n    name: 'Toggle position'\n  },\n  opened: { action: 'opened', table: { disable: true } },\n  closed: { action: 'closed', table: { disable: true } }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<MenuModule>",
                "defaultValue": "{\n  yPosition: {\n    options: ['above', 'below'],\n    control: { type: 'radio' },\n    name: 'Y position'\n  },\n  xPosition: {\n    options: ['before', 'after'],\n    control: { type: 'radio' },\n    name: 'X position'\n  },\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' },\n  overlapTrigger: { control: { type: 'boolean' }, name: 'Overlap trigger' }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SidenavModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TableModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ColorsModule>",
                "defaultValue": "{\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TypographyModule>",
                "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<AutocompleteModule>",
                "defaultValue": "{\n  _filter: { table: { disable: true } },\n  ngOnInit: { table: { disable: true } },\n  options: { table: { disable: true } },\n  myControl: { table: { disable: true } },\n  filteredOptions: { table: { disable: true } }\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<CheckboxModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<DatePickerModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<FormFieldModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<RadioButtonModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SelectModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SlideToggleModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<SliderModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<TextareaModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ClipboardModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<ElevationModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<GridModule>",
                "defaultValue": "{}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArgTypes<RipplesModule>",
                "defaultValue": "{\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  centered: { control: { type: 'boolean' }, name: 'Disabled' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  unbounded: { control: { type: 'boolean' }, name: 'Disabled' },\n  radius: { control: { type: 'number' }, name: 'Radius' }\n}"
            },
            {
                "name": "Autocomplete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Badge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "BottomSheet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Chips",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Clipboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "DatePicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Divider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Elevation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Expansion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "FormField",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Grid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeModule>",
                "defaultValue": "{\n  title: 'Components/Badge',\n  component: BadgeModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BottomSheetModule>",
                "defaultValue": "{\n  title: 'Components/Bottom Sheet',\n  component: BottomSheetModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardModule>",
                "defaultValue": "{\n  title: 'Components/Card',\n  component: CardModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonModule>",
                "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChipsModule>",
                "defaultValue": "{\n  title: 'Components/Chips',\n  component: ChipsModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DividerModule>",
                "defaultValue": "{\n  title: 'Components/Divider',\n  component: DividerModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ExpansionModule>",
                "defaultValue": "{\n  title: 'Components/Expansion',\n  component: ExpansionModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuModule>",
                "defaultValue": "{\n  title: 'Components/Menu',\n  component: MenuModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressBarModule>",
                "defaultValue": "{\n  title: 'Components/Progress Bar',\n  component: ProgressBarModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressSpinnerModule>",
                "defaultValue": "{\n  title: 'Components/Progress Spinner',\n  component: ProgressSpinnerModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SidenavModule>",
                "defaultValue": "{\n  title: 'Components/Sidenav',\n  component: SidenavModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SnackbarModule>",
                "defaultValue": "{\n  title: 'Components/Snackbar',\n  component: SnackbarModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } }\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableModule>",
                "defaultValue": "{\n  title: 'Components/Table',\n  component: TableModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabsModule>",
                "defaultValue": "{\n  title: 'Components/Tabs',\n  component: TabsModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToolbarModule>",
                "defaultValue": "{\n  title: 'Components/Toolbar',\n  component: ToolbarModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipModule>",
                "defaultValue": "{\n  title: 'Components/Tooltip',\n  component: TooltipModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorsModule>",
                "defaultValue": "{\n  title: 'Theme/Colors',\n  component: ColorsModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TypographyModule>",
                "defaultValue": "{\n  title: 'Theme/Typography',\n  component: TypographyModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AutocompleteModule>",
                "defaultValue": "{\n  title: 'Forms/Autocomplete',\n  component: AutocompleteModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxModule>",
                "defaultValue": "{\n  title: 'forms/Checkbox',\n  component: CheckboxModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerModule>",
                "defaultValue": "{\n  title: 'Forms/Date Picker',\n  component: DatePickerModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormFieldModule>",
                "defaultValue": "{\n  title: 'Forms/Form Field',\n  component: FormFieldModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioButtonModule>",
                "defaultValue": "{\n  title: 'Forms/Radio Button',\n  component: RadioButtonModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectModule>",
                "defaultValue": "{\n  title: 'Forms/Select',\n  component: SelectModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SlideToggleModule>",
                "defaultValue": "{\n  title: 'Forms/Slide Toggle',\n  component: SlideToggleModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SliderModule>",
                "defaultValue": "{\n  title: 'Forms/Slider',\n  component: SliderModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextareaModule>",
                "defaultValue": "{\n  title: 'Forms/Textarea',\n  component: TextareaModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ClipboardModule>",
                "defaultValue": "{\n  title: 'Helpers/Clipboard',\n  component: ClipboardModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ElevationModule>",
                "defaultValue": "{\n  title: 'Helpers/Elevation',\n  component: ElevationModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<GridModule>",
                "defaultValue": "{\n  title: 'Helpers/Grid',\n  component: GridModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RipplesModule>",
                "defaultValue": "{\n  title: 'Helpers/Ripples',\n  component: RipplesModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    }\n  }\n}"
            },
            {
                "name": "ProgressBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "ProgressSpinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "RadioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Ripples",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Sidenav",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Slider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "SlideToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Snackbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args\n}"
            },
            {
                "name": "Tabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Toolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  /* args */\n}"
            },
            {
                "name": "Typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeModule>",
                "file": "src/stories/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BottomSheetModule>",
                "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardModule>",
                "file": "src/stories/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonModule>",
                "file": "src/stories/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChipsModule>",
                "file": "src/stories/components/chips/chips.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DividerModule>",
                "file": "src/stories/components/divider/divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ExpansionModule>",
                "file": "src/stories/components/expansion/expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuModule>",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressBarModule>",
                "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressSpinnerModule>",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SidenavModule>",
                "file": "src/stories/components/sidenav/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SnackbarModule>",
                "file": "src/stories/components/snackbar/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableModule>",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsModule>",
                "file": "src/stories/components/tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToolbarModule>",
                "file": "src/stories/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipModule>",
                "file": "src/stories/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorsModule>",
                "file": "src/stories/theme/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TypographyModule>",
                "file": "src/stories/theme/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AutocompleteModule>",
                "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxModule>",
                "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerModule>",
                "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormFieldModule>",
                "file": "src/stories/forms/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioButtonModule>",
                "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectModule>",
                "file": "src/stories/forms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SlideToggleModule>",
                "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SliderModule>",
                "file": "src/stories/forms/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextareaModule>",
                "file": "src/stories/forms/textarea/textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ClipboardModule>",
                "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ElevationModule>",
                "file": "src/stories/helpers/elevation/elevation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<GridModule>",
                "file": "src/stories/helpers/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RipplesModule>",
                "file": "src/stories/helpers/ripples/ripples.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/components/badge/badge.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<BadgeModule>",
                    "defaultValue": "{\n  label: '0',\n  color: 'primary',\n  size: 'medium',\n  position: 'above after',\n  disabled: false,\n  overlap: false,\n  hidden: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<BadgeModule>",
                    "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  size: {\n    options: ['small', 'medium', 'large'],\n    control: { type: 'radio' },\n    name: 'Size'\n  },\n  position: {\n    options: ['above after', 'above before', 'below before', 'below after', 'before', 'after', 'above', 'below'],\n    control: { type: 'select' },\n    name: 'Position'\n  },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  overlap: { control: { type: 'boolean' }, name: 'Overlay' },\n  hidden: { control: { type: 'boolean' }, name: 'Hidden' }\n}"
                },
                {
                    "name": "Badge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeModule>",
                    "defaultValue": "{\n  title: 'Components/Badge',\n  component: BadgeModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/bottom-sheet/bottom-sheet.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<BottomSheetModule>",
                    "defaultValue": "{\n  hasBackdrop: true\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<BottomSheetModule>",
                    "defaultValue": "{\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Backdrop' },\n  openBottomSheet: { table: { disable: true } }\n}"
                },
                {
                    "name": "BottomSheet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BottomSheetModule>",
                    "defaultValue": "{\n  title: 'Components/Bottom Sheet',\n  component: BottomSheetModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/card/card.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CardModule>",
                    "defaultValue": "{\n  title: true,\n  subtitle: true,\n  content: true,\n  actions: true,\n  footer: true,\n  avatar: true,\n  image: true,\n  media: true,\n  mediaSize: 'md',\n  align: 'start',\n  appearance: 'outlined'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<CardModule>",
                    "defaultValue": "{\n  title: { control: { type: 'boolean' }, name: 'Has title' },\n  subtitle: { control: { type: 'boolean' }, name: 'Has subtitle' },\n  content: { control: { type: 'boolean' }, name: 'Has content' },\n  actions: { control: { type: 'boolean' }, name: 'Has actions' },\n  footer: { control: { type: 'boolean' }, name: 'Has footer' },\n  avatar: { control: { type: 'boolean' }, name: 'Has avatar' },\n  image: { control: { type: 'boolean' }, name: 'Has image' },\n  media: { control: { type: 'boolean' }, name: 'Has media' },\n  mediaSize: {\n    options: ['xl', 'lg', 'md', 'sm'],\n    control: { type: 'radio' },\n    name: 'Media size'\n  },\n  align: {\n    options: ['start', 'end'],\n    control: { type: 'radio' },\n    name: 'Align actions'\n  },\n  appearance: {\n    options: ['outlined', 'raised'],\n    control: { type: 'radio' },\n    name: 'Appearance'\n  }\n}"
                },
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardModule>",
                    "defaultValue": "{\n  title: 'Components/Card',\n  component: CardModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/button/button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ButtonModule>",
                    "defaultValue": "{\n  label: '[Button]',\n  disabled: false,\n  color: 'default',\n  type: 'default'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ButtonModule>",
                    "defaultValue": "{\n  label: { control: { type: 'text' }, name: 'Label' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  type: {\n    options: ['default', 'flat', 'stroked', 'raised'],\n    control: { type: 'radio' },\n    name: 'Button type'\n  }\n}"
                },
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonModule>",
                    "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/chips/chips.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChipsModule>",
                    "defaultValue": "{\n  color: 'default',\n  hideSingle: false,\n  multiple: true,\n  selectable: true,\n  highlighted: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ChipsModule>",
                    "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  hideSingle: { control: { type: 'boolean' }, name: 'Hide Single Selection Indicator' },\n  multiple: { control: { type: 'boolean' }, name: 'Select Multiple' },\n  selectable: { control: { type: 'boolean' }, name: 'Selectable' },\n  highlighted: { control: { type: 'boolean' }, name: 'Highlighted' }\n}"
                },
                {
                    "name": "Chips",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChipsModule>",
                    "defaultValue": "{\n  title: 'Components/Chips',\n  component: ChipsModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                }
            ],
            "src/stories/components/divider/divider.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DividerModule>",
                    "defaultValue": "{\n  inset: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<DividerModule>",
                    "defaultValue": "{\n  inset: { control: { type: 'boolean' }, name: 'Inset' }\n}"
                },
                {
                    "name": "Divider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DividerModule>",
                    "defaultValue": "{\n  title: 'Components/Divider',\n  component: DividerModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/components/expansion/expansion.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ExpansionModule>",
                    "defaultValue": "{\n  toggle: true,\n  description: true,\n  disabled: false,\n  multi: false,\n  expanded: false,\n  displayMode: 'default',\n  togglePosition: 'before'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ExpansionModule>",
                    "defaultValue": "{\n  toggle: { control: { type: 'boolean' }, name: 'Has toggle' },\n  description: { control: { type: 'boolean' }, name: 'Has description' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  multi: { control: { type: 'boolean' }, name: 'Open more than one panel' },\n  expanded: { control: { type: 'boolean' }, name: 'Expand' },\n  displayMode: {\n    options: ['default', 'flat'],\n    control: { type: 'radio' },\n    name: 'Display mode'\n  },\n  togglePosition: {\n    options: ['before', 'after'],\n    control: { type: 'radio' },\n    name: 'Toggle position'\n  },\n  opened: { action: 'opened', table: { disable: true } },\n  closed: { action: 'closed', table: { disable: true } }\n}"
                },
                {
                    "name": "Expansion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ExpansionModule>",
                    "defaultValue": "{\n  title: 'Components/Expansion',\n  component: ExpansionModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<MenuModule>",
                    "defaultValue": "{\n  yPosition: 'below',\n  xPosition: 'after',\n  hasBackdrop: true,\n  overlapTrigger: false\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<MenuModule>",
                    "defaultValue": "{\n  yPosition: {\n    options: ['above', 'below'],\n    control: { type: 'radio' },\n    name: 'Y position'\n  },\n  xPosition: {\n    options: ['before', 'after'],\n    control: { type: 'radio' },\n    name: 'X position'\n  },\n  hasBackdrop: { control: { type: 'boolean' }, name: 'Has backdrop' },\n  overlapTrigger: { control: { type: 'boolean' }, name: 'Overlap trigger' }\n}"
                },
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuModule>",
                    "defaultValue": "{\n  title: 'Components/Menu',\n  component: MenuModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                }
            ],
            "src/stories/components/progress-bar/progress-bar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ProgressBarModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressBarModule>",
                    "defaultValue": "{\n  title: 'Components/Progress Bar',\n  component: ProgressBarModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "ProgressBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/components/progress-spinner/progress-spinner.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ProgressSpinnerModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressSpinnerModule>",
                    "defaultValue": "{\n  title: 'Components/Progress Spinner',\n  component: ProgressSpinnerModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "ProgressSpinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/components/sidenav/sidenav.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SidenavModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SidenavModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SidenavModule>",
                    "defaultValue": "{\n  title: 'Components/Sidenav',\n  component: SidenavModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "Sidenav",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                }
            ],
            "src/stories/components/table/table.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TableModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TableModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableModule>",
                    "defaultValue": "{\n  title: 'Components/Table',\n  component: TableModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                }
            ],
            "src/stories/components/tabs/tabs.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TabsModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabsModule>",
                    "defaultValue": "{\n  title: 'Components/Tabs',\n  component: TabsModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "Tabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/components/toolbar/toolbar.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ToolbarModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToolbarModule>",
                    "defaultValue": "{\n  title: 'Components/Toolbar',\n  component: ToolbarModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "Toolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TooltipModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipModule>",
                    "defaultValue": "{\n  title: 'Components/Tooltip',\n  component: TooltipModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/theme/colors/colors.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ColorsModule>",
                    "defaultValue": "{\n  color: 'primary'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ColorsModule>",
                    "defaultValue": "{\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
                },
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorsModule>",
                    "defaultValue": "{\n  title: 'Theme/Colors',\n  component: ColorsModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/theme/typography/typography.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TypographyModule>",
                    "defaultValue": "{\n  color: 'default'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TypographyModule>",
                    "defaultValue": "{\n  color: {\n    options: ['default', 'primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TypographyModule>",
                    "defaultValue": "{\n  title: 'Theme/Typography',\n  component: TypographyModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "Typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                }
            ],
            "src/stories/forms/autocomplete/autocomplete.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<AutocompleteModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<AutocompleteModule>",
                    "defaultValue": "{\n  _filter: { table: { disable: true } },\n  ngOnInit: { table: { disable: true } },\n  options: { table: { disable: true } },\n  myControl: { table: { disable: true } },\n  filteredOptions: { table: { disable: true } }\n}"
                },
                {
                    "name": "Autocomplete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AutocompleteModule>",
                    "defaultValue": "{\n  title: 'Forms/Autocomplete',\n  component: AutocompleteModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/forms/checkbox/checkbox.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CheckboxModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<CheckboxModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxModule>",
                    "defaultValue": "{\n  title: 'forms/Checkbox',\n  component: CheckboxModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/forms/date-picker/date-picker.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DatePickerModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<DatePickerModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "DatePicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerModule>",
                    "defaultValue": "{\n  title: 'Forms/Date Picker',\n  component: DatePickerModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                }
            ],
            "src/stories/forms/form-field/form-field.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<FormFieldModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<FormFieldModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "FormField",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormFieldModule>",
                    "defaultValue": "{\n  title: 'Forms/Form Field',\n  component: FormFieldModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/forms/radio-button/radio-button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<RadioButtonModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<RadioButtonModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioButtonModule>",
                    "defaultValue": "{\n  title: 'Forms/Radio Button',\n  component: RadioButtonModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "RadioButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/forms/select/select.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SelectModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SelectModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectModule>",
                    "defaultValue": "{\n  title: 'Forms/Select',\n  component: SelectModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/forms/slide-toggle/slide-toggle.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SlideToggleModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SlideToggleModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SlideToggleModule>",
                    "defaultValue": "{\n  title: 'Forms/Slide Toggle',\n  component: SlideToggleModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "SlideToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/forms/slider/slider.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SliderModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<SliderModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SliderModule>",
                    "defaultValue": "{\n  title: 'Forms/Slider',\n  component: SliderModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "Slider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/forms/textarea/textarea.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<TextareaModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<TextareaModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextareaModule>",
                    "defaultValue": "{\n  title: 'Forms/Textarea',\n  component: TextareaModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })]\n  /* argTypes */\n}"
                },
                {
                    "name": "Textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            "src/stories/helpers/clipboard/clipboard.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ClipboardModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ClipboardModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "Clipboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ClipboardModule>",
                    "defaultValue": "{\n  title: 'Helpers/Clipboard',\n  component: ClipboardModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/helpers/elevation/elevation.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ElevationModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<ElevationModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "Elevation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ElevationModule>",
                    "defaultValue": "{\n  title: 'Helpers/Elevation',\n  component: ElevationModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/helpers/grid/grid.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<GridModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<GridModule>",
                    "defaultValue": "{}"
                },
                {
                    "name": "Grid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<GridModule>",
                    "defaultValue": "{\n  title: 'Helpers/Grid',\n  component: GridModule,\n  parameters: { options: { showPanel: true } },\n  argTypes\n}"
                }
            ],
            "src/stories/helpers/ripples/ripples.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<RipplesModule>",
                    "defaultValue": "{\n  centered: false,\n  disabled: false,\n  radius: undefined,\n  unbounded: false,\n  color: 'default'\n}"
                },
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArgTypes<RipplesModule>",
                    "defaultValue": "{\n  color: {\n    options: ['primary', 'accent', 'warn'],\n    control: { type: 'radio' },\n    name: 'Color'\n  },\n  centered: { control: { type: 'boolean' }, name: 'Disabled' },\n  disabled: { control: { type: 'boolean' }, name: 'Disabled' },\n  unbounded: { control: { type: 'boolean' }, name: 'Disabled' },\n  radius: { control: { type: 'number' }, name: 'Radius' }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RipplesModule>",
                    "defaultValue": "{\n  title: 'Helpers/Ripples',\n  component: RipplesModule,\n  parameters: { options: { showPanel: true } },\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  argTypes\n}"
                },
                {
                    "name": "Ripples",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args\n}"
                }
            ],
            "src/stories/components/snackbar/snackbar.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SnackbarModule>",
                    "defaultValue": "{\n  title: 'Components/Snackbar',\n  component: SnackbarModule,\n  decorators: [applicationConfig({ providers: [importProvidersFrom(BrowserAnimationsModule)] })],\n  parameters: { options: { showPanel: true } }\n  /* argTypes */\n}"
                },
                {
                    "name": "Snackbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  /* args */\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    }\n  }\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/components/badge/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeModule>",
                    "file": "src/stories/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/bottom-sheet/bottom-sheet.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BottomSheetModule>",
                    "file": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/card/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardModule>",
                    "file": "src/stories/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonModule>",
                    "file": "src/stories/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/chips/chips.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChipsModule>",
                    "file": "src/stories/components/chips/chips.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/divider/divider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DividerModule>",
                    "file": "src/stories/components/divider/divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/expansion/expansion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ExpansionModule>",
                    "file": "src/stories/components/expansion/expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuModule>",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/progress-bar/progress-bar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressBarModule>",
                    "file": "src/stories/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/progress-spinner/progress-spinner.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressSpinnerModule>",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/sidenav/sidenav.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SidenavModule>",
                    "file": "src/stories/components/sidenav/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/snackbar/snackbar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SnackbarModule>",
                    "file": "src/stories/components/snackbar/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableModule>",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/tabs/tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsModule>",
                    "file": "src/stories/components/tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/toolbar/toolbar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToolbarModule>",
                    "file": "src/stories/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipModule>",
                    "file": "src/stories/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/theme/colors/colors.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorsModule>",
                    "file": "src/stories/theme/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/theme/typography/typography.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TypographyModule>",
                    "file": "src/stories/theme/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/autocomplete/autocomplete.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AutocompleteModule>",
                    "file": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/checkbox/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxModule>",
                    "file": "src/stories/forms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/date-picker/date-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerModule>",
                    "file": "src/stories/forms/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/form-field/form-field.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormFieldModule>",
                    "file": "src/stories/forms/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/radio-button/radio-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioButtonModule>",
                    "file": "src/stories/forms/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/select/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectModule>",
                    "file": "src/stories/forms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/slide-toggle/slide-toggle.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SlideToggleModule>",
                    "file": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/slider/slider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SliderModule>",
                    "file": "src/stories/forms/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/forms/textarea/textarea.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextareaModule>",
                    "file": "src/stories/forms/textarea/textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/clipboard/clipboard.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ClipboardModule>",
                    "file": "src/stories/helpers/clipboard/clipboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/elevation/elevation.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ElevationModule>",
                    "file": "src/stories/helpers/elevation/elevation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/grid/grid.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<GridModule>",
                    "file": "src/stories/helpers/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/helpers/ripples/ripples.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RipplesModule>",
                    "file": "src/stories/helpers/ripples/ripples.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/assets/sb-header/sb-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SBHeaderModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Badge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomSheetModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomSheetOverviewExampleSheet",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomSheet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/bottom-sheet/bottom-sheet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardModule",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipsModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Chips",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chips/chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DividerModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Divider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/divider/divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpansionModule",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Expansion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion/expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarModule",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressSpinnerModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressSpinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/sidenav/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sidenav",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarModule",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Snackbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsModule",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Autocomplete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/autocomplete/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatePickerModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatePicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormField",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SlideToggleModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slide-toggle/slide-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SlideToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Slider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/forms/textarea/textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClipboardModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Clipboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/clipboard/clipboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElevationModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Elevation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/elevation/elevation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RipplesModule",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/helpers/ripples/ripples.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ripples",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyModule",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/theme/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}